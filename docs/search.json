[
  {
    "objectID": "posts/2023-01-26-oscars/index.html",
    "href": "posts/2023-01-26-oscars/index.html",
    "title": "Will people care about this Oscars?",
    "section": "",
    "text": "With the release of this year’s Academy Award nominations, many have pointed out a surprising fact: several of the films gunning for Best Picture are actually hits! More than that, the highest-grossing movie of the year (which is, somehow, Avatar: The Way of Water) and the second-highest grossing (Top Gun: Maverick) were both nominated.\nThere have long been discussions over whether prestige awards like the Oscars still matter. It doesn’t help that popular blockbusters tend not to get nominated—few people care that an indie film they didn’t see won over other indie films they didn’t see. The Academy of Motion Picture Arts and Sciences has made some efforts to stay relevant, such as expanding the field of Best Picture nominees from the traditional 5 to a maximum of 10 starting 2010. The idea is (and it sounds weird to say it) to be more inclusive of mainstream films.\nIt hasn’t worked so well. I compiled global box office receipts on all Best Picture nominees from 2010 to 2023 and charted them below. Billion-dollar blockbusters are still seldom nominated. They also never win.\n\n\nCode\nlibrary(tidyverse)\nlibrary(showtext)\nlibrary(ggplot2)\n\ndf <- here(\"datasets\", \"oscars.csv\") %>% \n  read_csv()\n\ndf %>%\n  select(year, title, winner, gross_us, gross_int) %>%\n  filter(year >= 2009) %>%\n  replace_na(list(gross_us = 0, gross_int = 0)) %>%\n  pivot_longer(\n    cols = c(gross_us, gross_int),\n    names_to = \"market\",\n    values_to = \"gross\"\n  ) %>%\n  group_by(title) %>%\n  mutate(\n    label_pos = cumsum(gross),\n    label = ifelse(market == \"gross_int\", title, \"\"),\n    year = year + 1,\n    winner = ifelse(winner == \"yes\", \"bold\", \"plain\")\n  ) %>%\n  ungroup() %>%\n  group_by(year) %>%\n  mutate(title = fct_reorder(title, gross)) %>%\n  ungroup() %>%\n  \n  # Plot\n  ggplot(aes(y = title, x = gross, fill = market)) +\n  geom_bar(stat = \"identity\") +\n  facet_grid(rows = vars(year), scales = \"free_y\", space = \"free_y\", switch = \"y\") +\n\n  # Labels\n  labs(\n    title = \"Mm never heard of it\",\n    subtitle = \"Worldwide box office receipts for Best Picture nominees\",\n    caption = \"Note: winners are highlighted\\nSource: boxofficemojo.com\"\n  ) +\n  geom_text(aes(x = label_pos, label = label, fontface = winner, color = winner),\n    size = 7 / .pt, family = \"karla\", hjust = 0, nudge_x = 15 * 10^6\n  ) +\n  scale_x_continuous(\n    name = \"Worldwide box office receipts\",\n    limits = c(0, 3 * 10^9),\n    breaks = c(100, 500, 1000, 2000) * 10^6,\n    labels = c(\"$100mn\", \"$500mn\", \"$1bn\", \"$2bn\"),\n    sec.axis = sec_axis(~.,\n      breaks = c(100, 500, 1000, 2000) * 10^6,\n      labels = c(\"$100mn\", \"$500mn\", \"$1bn\", \"$2bn\")\n    )\n  ) +\n  \n  # Themes\n  scale_color_manual(values = c(\"#1046b1\", \"gray10\")) +\n  scale_fill_manual(\n    values = c(\"#ff505b\", \"#ffa600\"),\n    labels = c(\"International\", \"U.S.\")\n  ) +\n  guides(\n    fill = guide_legend(reverse = TRUE),\n    color = FALSE\n  ) +\n  theme_minimal(base_family = \"karla\") +\n  theme(\n    plot.title = element_text(size = 16, face = \"bold\", hjust = .5),\n    plot.subtitle = element_text(size = 14, hjust = .5, margin = margin(b = 12)),\n    plot.caption = element_text(size = 8, hjust = 0, margin = margin(t = 20)),\n    axis.ticks = element_blank(),\n    axis.title = element_blank(),\n    axis.text.x.top = element_text(size = 10, margin = margin(b = 5)),\n    axis.text.x.bottom = element_text(size = 10, margin = margin(t = 5)),\n    axis.text.y = element_blank(),\n    legend.position = c(.83, .96),\n    legend.direction = \"horizontal\",\n    legend.title = element_blank(),\n    legend.text = element_text(size = 12),\n    strip.background = element_rect(fill = \"#1046b1\", color = NA),\n    strip.text = element_text(size = 10, face = \"bold\", color = \"white\"),\n    panel.background = element_rect(fill = \"gray97\", color = NA),\n    panel.grid.major.x = element_line(linewidth = .15, color = \"gray80\"),\n    panel.grid.major.y = element_blank(),\n    panel.grid.minor.x = element_blank(),\n    panel.grid.minor.y = element_blank()\n  )\n\n\n\n\n\nSome caveats. Certain films, like last year’s Best Picture winner CODA, were released primarily on streaming, so their box office takings would not necessarily reflect their popularity. And of course, the pandemic has artificially depressed receipts from the last two years. Nevertheless, it’s clear that for better or worse, the 7,000 or so voting members of the Academy have generally refused to cater to mainstream appeal.\nHence the surprise at 2023’s nominees. There are fans of Avatar, there are fans of Top Gun, and there are fans of indie favorite Everything Everywhere All at Once. Taken together, there may just be enough people out there who will care what an exclusive club of film industry professionals have to say about cinema this year.\nAnother way to contrast the Academy’s tastes with other film enthusiasts is to look at the ratings of professional movie critics and online audience reviews. I collected these from Metacritic for all Best Picture nominees from 2001 to 2023 and charted them in the scatter below. The dotted line is a 45-degree line, indicating a state of agreement between critics and ordinary moviegoers\n\n\nCode\nlibrary(highcharter)\nlibrary(broom)\n\nfit <- lm(mc_users ~ mc_critics, data = df) %>%\n  augment() %>%\n  arrange(mc_critics) %>%\n  slice(c(1, nrow(df)))\n\nx <- c(\"Title\", \"Year released\", \"Metascore\", \"User score\", \"Box office\")\ny <- c(\"{point.title:s}\", \"{point.year:.0f}\", \"{point.mc_critics:.0f}\", \"{point.mc_users:.1f}\", \"${point.gross:,.0f}\")\ntltip <- tooltip_table(x, y)\n\ntheme <- hc_theme(\n  chart = list(\n    backgroundColor = NULL\n  ),\n  title = list(style = list(\n    color = \"#333333\",\n    fontWeight = \"bold\",\n    fontSize = \"21px\"\n  )),\n  subtitle = list(style = list(\n    color = \"#333333\",\n    fontSize = \"18px\"\n  )),\n  caption = list(style = list(\n    color = \"gray75\",\n    fontSize = \"11px\"\n  ))\n)\n\nhchart(df, \"scatter\",\n  hcaes(x = mc_critics, y = mc_users, group = winner),\n  color = c(\"#1046b1\", \"#ffa600\"),\n  stickyTracking = FALSE\n) %>%\n  hc_title(text = \"That's just, like, your opinion, man\") %>%\n  hc_subtitle(text = \"Professional critics vs audience reviews for Best Picture nominees, 2001-2023\") %>%\n  hc_caption(\n    text = \"Note: winners are highlighted<br>Source: metacritic.com, boxofficemojo.com\",\n    align = \"left\",\n    useHTML = TRUE\n  ) %>%\n  hc_xAxis(\n    title = list(text = \"Metascore\"),\n    min = 40, gridLineWidth = 1,\n    labels = list(style = list(fontSize = \"14px\"))\n  ) %>%\n  hc_yAxis(\n    title = list(text = \"User score\"),\n    startOnTick = FALSE, endOnTick = FALSE, min = 5.5, max = 9.5,\n    labels = list(style = list(fontSize = \"14px\"))\n  ) %>%\n  hc_tooltip(\n    useHTML = TRUE,\n    pointFormat = tltip,\n    headerFormat = \"\"\n  ) %>%\n  hc_add_series(\n    data = tibble(\n      mc_critics = c(0, 100),\n      mc_users = c(0, 10)\n    ),\n    type = \"line\", dashStyle = \"Dot\",\n    hcaes(x = mc_critics, y = mc_users),\n    color = \"black\", lineWidth = 1,\n    marker = FALSE, enableMouseTracking = FALSE\n  ) %>%\n  hc_legend(enabled = FALSE)\n\n\n\n\n\n\n\nCode\n  #hc_add_theme(theme)\n\n\nThe closest the Academy, movie critics, and audiences got to unanimity was with the Lord of the Rings films. More often however, the camps were split. The Academy and professional critics closed ranks on 2016’s Best Picture winner Moonlight; audiences were less impressed. On the flip side, both the Academy and moviegoers loved 2005’s Crash, but publications still routinely cite its Best Picture win as an atrocity to cinema. Occasionally, critics and audiences side against the Academy: Extremely Loud and Incredibly Close’s nomination baffled them both.\nIt’s unclear whether the Oscars and their ilk will ever reclaim the eminence they once held. Few legacy institutions are held in much reverence these days. Maybe the Oscars never deserved it to begin with. Still, it’s nice to have a cultural fixed point, to be able to look back and say, ah yes 2004, the year of Return of the King. Was 2022 the year of CODA? I’m afraid most would simply shrug.\n\n\n\nReusehttps://creativecommons.org/licenses/by/4.0/"
  },
  {
    "objectID": "posts/2023-02-06-francis-is-an-old-pope/index.html",
    "href": "posts/2023-02-06-francis-is-an-old-pope/index.html",
    "title": "Francis is an old pope",
    "section": "",
    "text": "Next month, Pope Francis will mark his 10th year in the papacy. Will he make it to his 15th year? His 20th? He is already 86: the last pope to reach this age was Leo XIII, who died in 1903 at the age of 93.1 In fact, by my count, only 15 of the 264 popes in history remained pope past their 86th birthday, and only four since the year 1500. Francis is in very small company.\nI thought I’d visualize this using data scraped from the Wikipedia article “List of popes”. The resulting dataset popes.csv runs from Peter to Francis and excludes all the antipopes (who I call the nopes) for a total of 267 rows and 264 unique popes. Check this repository for more info.\nHere’s a look at a few entries in the dataset:\n\nlibrary(tidyverse)\nlibrary(knitr)\n\npopes <- here(\"datasets\", \"popes.csv\") %>%\n  read_csv()\n\npopes %>%\n  arrange(-number) %>%\n  head() %>%\n  knitr::kable(digits = 2, align = \"c\")\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nnumber\nname_full\nname\nsuffix\ncanonization\nbirth\nstart\nend\nage_start\nage_end\ntenure\n\n\n\n\n266\nFrancis\nFrancis\n1\nNA\n1936-12-17\n2013-03-13\nNA\n76\nNA\nNA\n\n\n265\nBenedict XVI\nBenedict\n16\nNA\n1927-04-16\n2005-04-19\n2013-02-28\n78\n85\n7.86\n\n\n264\nJohn Paul II\nJohn Paul\n2\nSaint\n1920-05-18\n1978-10-16\n2005-04-02\n58\n84\n26.46\n\n\n263\nJohn Paul I\nJohn Paul\n1\nBlessed\n1912-10-17\n1978-08-26\n1978-09-28\n65\n65\n0.09\n\n\n262\nPaul VI\nPaul\n6\nSaint\n1897-09-26\n1963-06-21\n1978-08-06\n65\n80\n15.13\n\n\n261\nJohn XXIII\nJohn\n23\nSaint\n1881-11-25\n1958-10-28\n1963-06-03\n76\n81\n4.60\n\n\n\n\n\nWe can use a histogram to get an idea of how rare it is for a pope to continue on past the age of 86.\n\n\nCode\nlibrary(ggplot2)\n\npopes %>%\n  ggplot(aes(x = age_end)) +\n  geom_histogram(binwidth = 2, fill = \"#1046b1\", color = \"gray97\") +\n  geom_vline(xintercept = 86, linetype = \"dashed\", linewidth = .25) +\n\n  # Labels\n  labs(\n    title = \"Pope longevity I\",\n    subtitle = \"Distribution of ages at which papacy ended\",\n    caption = \"Source: \\\"List of popes\\\" Wikipedia article\"\n  ) +\n  scale_x_continuous(breaks = c(40, 60, 80, 86, 100)) +\n  theme_minimal(base_family = \"karla\") +\n  theme(\n    plot.title = element_text(size = 16, face = \"bold\", hjust = .5),\n    plot.subtitle = element_text(size = 14, hjust = .5, margin = margin(b = 12)),\n    plot.caption = element_text(size = 8, hjust = 0, margin = margin(t = 10)),\n    axis.ticks = element_blank(),\n    axis.title = element_blank(),\n    axis.text.x = element_text(\n      size = c(12, 12, 12, 14, 12), face = c(\"plain\", \"plain\", \"plain\", \"bold\", \"plain\"),\n      margin = margin(t = 5), vjust = .5\n    ),\n    axis.text.y = element_text(size = 12, margin = margin(r = 5)),\n    panel.background = element_rect(fill = \"gray97\", color = NA),\n    panel.grid.major.x = element_blank(),\n    panel.grid.major.y = element_blank(),\n    panel.grid.minor.x = element_blank(),\n    panel.grid.minor.y = element_blank()\n  )\n\n\n\n\n\nThough Francis is an old pope, his tenure so far of 10 years is less remarkable. Almost a third of all popes lasted for 10 years or more. And getting another decade in will be tough for Francis as he entered the papacy late in life—76 years old. Of the popes with tenures of 20 years or more, most started before the age of 60, as the chart below shows.\n\n\nCode\npopes %>%\n  filter(tenure >= 20) %>%\n  bind_rows(tibble(name_full = \"Francis\", tenure = 0)) %>%\n  arrange(tenure) %>%\n  mutate(name_full = factor(name_full, name_full)) %>%\n  ggplot() +\n  geom_segment(aes(x = age_start, xend = age_end, y = name_full, yend = name_full),\n    linewidth = 1, color = \"#1046b1\"\n  ) +\n  geom_text(aes(x = age_start, y = name_full, label = age_start),\n    family = \"karla\",\n    size = 8 / .pt, fontface = \"bold\", color = \"#1046b1\", nudge_x = -1.25\n  ) +\n  geom_text(aes(x = age_end, y = name_full, label = age_end),\n    family = \"karla\",\n    size = 8 / .pt, fontface = \"bold\", color = \"#1046b1\", nudge_x = 1.25\n  ) +\n  geom_segment(\n    x = 76, xend = 86, y = \"Francis\", yend = \"Francis\",\n    linewidth = 1, linejoin = \"mitre\", color = \"#ff505b\",\n    arrow = arrow(angle = 30, length = unit(0.15, \"cm\"), type = \"closed\")\n  ) +\n  geom_text(\n    x = 74.5, y = \"Francis\", label = \"76\",\n    family = \"karla\",\n    size = 9 / .pt, fontface = \"bold\", color = \"#ff505b\"\n  ) +\n\n  # Labels\n  labs(\n    title = \"Pope longevity II\",\n    subtitle = \"Age spans of popes with the longest tenures\",\n    caption = \"Source: \\\"List of popes\\\" Wikipedia article\"\n  ) +\n  scale_x_continuous(breaks = seq(30, 90, 10)) +\n  theme_minimal(base_family = \"karla\") +\n  theme(\n    plot.title = element_text(size = 16, face = \"bold\", hjust = .5),\n    plot.subtitle = element_text(size = 14, hjust = .5, margin = margin(b = 12)),\n    plot.caption = element_text(size = 8, hjust = 0, margin = margin(t = 10)),\n    axis.ticks = element_blank(),\n    axis.title = element_blank(),\n    axis.text.x = element_text(size = 12, margin = margin(t = 5)),\n    axis.text.y = element_text(\n      size = c(rep(11, 14), 12) %>% rev(),\n      face = c(rep(\"plain\", 13), \"bold\") %>% rev(),\n      color = c(rep(\"gray10\", 13), \"#ff505b\") %>% rev(),\n      margin = margin(r = 5)\n    ),\n    panel.background = element_rect(fill = \"gray97\", color = NA),\n    panel.grid.major.x = element_line(linewidth = .15, color = \"gray80\"),\n    panel.grid.major.y = element_blank(),\n    panel.grid.minor.x = element_blank(),\n    panel.grid.minor.y = element_blank()\n  )\n\n\n\n\n\nWe can use a bit of survival analysis to estimate the probability of a pope making it to their 20th year, controlled for whether they started relatively young (below 60 years old) or relatively old (60 and above). The Kaplan-Meier estimates are computed using the survival package and plotted using the ggsurvfit package.\n\n\nCode\nlibrary(survival)\nlibrary(ggsurvfit)\n\npopes1 <- popes %>%\n  mutate(old = case_when(\n    age_start < 60 ~ 0,\n    age_start >= 60 ~ 1\n  ))\n\nsurvfit2(with(popes1, Surv(tenure)) ~ old, data = popes1) %>%\n  ggsurvfit(linewidth = .75) +\n  add_confidence_interval() +\n  geom_vline(xintercept = 10, linetype = \"dashed\", linewidth = .25) +\n\n  # Labels\n  labs(\n    title = \"Pope longevity III\",\n    subtitle = \"Survival probability of popes by starting age\",\n    caption = \"Source: \\\"List of popes\\\" Wikipedia article\"\n  ) +\n  scale_x_continuous(name = \"Years of tenure\") +\n  scale_y_continuous(\n    name = \"Probability of still being pope\",\n    labels = scales::percent\n  ) +\n  scale_color_manual(\n    labels = c(\"Under 60\", \"60 and above\"),\n    values = c(\"#ffa600\", \"#1046b1\")\n  ) +\n  scale_fill_manual(values = c(\"#FFD079\", \"#9BB8F6\")) +\n  guides(fill = FALSE) +\n\n  theme_minimal(base_family = \"karla\") +\n  theme(\n    plot.title = element_text(size = 16, face = \"bold\", hjust = .5),\n    plot.subtitle = element_text(size = 14, hjust = .5, margin = margin(b = 12)),\n    plot.caption = element_text(size = 8, hjust = 0, margin = margin(t = 10)),\n    axis.ticks = element_blank(),\n    axis.title.x = element_text(size = 12, margin = margin(t = 5)),\n    axis.title.y = element_text(size = 12, margin = margin(r = 5)),\n    axis.text.x = element_text(size = 11, margin = margin(t = 5)),\n    axis.text.y = element_text(size = 11, margin = margin(r = 5)),\n    legend.position = c(.75, .9),\n    legend.direction = \"horizontal\",\n    legend.text = element_text(size = 12),\n    panel.background = element_rect(fill = \"gray97\", color = NA),\n    panel.grid.major.x = element_blank(),\n    panel.grid.major.y = element_blank(),\n    panel.grid.minor.x = element_blank(),\n    panel.grid.minor.y = element_blank()\n  )\n\n\n\n\n\nBased on these estimates, the young group has a 33.1% probability of reaching their 10th year while the old group has only a 23.9% probability. On the other hand, the young group has a 6.3% probability of reaching their 20th year while the old group has a 2.3% chance. It should be noted though that the estimates for the old group have a high amount of uncertainty, mainly because few old popes make it to their 20th year.\nIf Francis completes his second decade as pope, he would be 96. The odds are against him, but it wouldn’t be unheard of. Pope Agatho, elected pope in 678 AD at the age of 100, reigned until his death at age 103.\n\n\n\n\nFootnotes\n\n\nAlthough Benedict XVI lived to 95, he resigned the papacy when he was 85.↩︎\n\nReusehttps://creativecommons.org/licenses/by/4.0/"
  },
  {
    "objectID": "posts/2022-12-07-im-gonna-carry-that-weight/index.html",
    "href": "posts/2022-12-07-im-gonna-carry-that-weight/index.html",
    "title": "I’m gonna carry that weight",
    "section": "",
    "text": "The pandemic (and turning 30) made me really start paying more attention to my health, and one of my resolutions was to go to the gym more consistently. It’s now been a little over a year. At the moment, my one-rep max for squats is about 1.5x my body weight, while for bench, it’s about 1.15x. As a motivator, I thought I’d look for benchmarks to work towards this coming year.\nMy basis will be this Kaggle dataset that contains the lifting records of over 400,000 powerlifting competitors, as listed in OpenPowerlifting.org. I might be setting the bar(bell) a bit high for myself here since I am by no means a competitive powerlifter, but consider that most people who join powerlifting comps aren’t particularly good. In fact, most of them lose! In the aggregate, the dataset will probably be a good sample of the population I’m looking to compare myself against—men who lift regularly.\nHere are its columns:\n\nlibrary(tidyverse)\n\nhere::here(\"datasets\", \"openpowerlifting.csv\") %>%\n  read_csv() %>%\n  names()\n\n [1] \"Name\"            \"Sex\"             \"Event\"           \"Equipment\"      \n [5] \"Age\"             \"AgeClass\"        \"Division\"        \"BodyweightKg\"   \n [9] \"WeightClassKg\"   \"Squat1Kg\"        \"Squat2Kg\"        \"Squat3Kg\"       \n[13] \"Squat4Kg\"        \"Best3SquatKg\"    \"Bench1Kg\"        \"Bench2Kg\"       \n[17] \"Bench3Kg\"        \"Bench4Kg\"        \"Best3BenchKg\"    \"Deadlift1Kg\"    \n[21] \"Deadlift2Kg\"     \"Deadlift3Kg\"     \"Deadlift4Kg\"     \"Best3DeadliftKg\"\n[25] \"TotalKg\"         \"Place\"           \"Wilks\"           \"McCulloch\"      \n[29] \"Glossbrenner\"    \"IPFPoints\"       \"Tested\"          \"Country\"        \n[33] \"Federation\"      \"Date\"            \"MeetCountry\"     \"MeetState\"      \n[37] \"MeetName\"       \n\n\nI’ll subset this to keep it as relevant as possible to myself: I’ll retain males lifters only (Sex == \"M\"); I’ll remove records from competitions that do not require drug testing (Test == \"Yes\"); and I’ll remove all failed attempts, which are recorded as negative of the weight attempted (Best3SquatKg > 0 & Best3BenchKg > 0). I will then compute the ratios of the maximum weight lifted in the squat and bench press to the lifter’s body weight.\n\ndf <- here::here(\"datasets\", \"openpowerlifting.csv\") %>%\n  read_csv() %>%\n  filter(Sex == \"M\" & Tested == \"Yes\" & Best3SquatKg > 0 & Best3BenchKg > 0) %>%\n  select(Name, Age, Date, BodyweightKg, Best3SquatKg, Best3BenchKg) %>%\n  mutate(\n    Ratio_Squat = Best3SquatKg / BodyweightKg,\n    Ratio_Bench = Best3BenchKg / BodyweightKg\n  ) %>%\n  arrange(Name, Date) %>%\n  drop_na()\n\nI am left with 234,174 observations on 76,233 lifters. To get an idea of what the data looks like, here are the records of some arbitrary guy I picked out named Linh Vu:\n\ndf %>%\n  filter(Name == \"Linh Vu\") %>%\n  knitr::kable(align = \"lccrrrrr\")\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nName\nAge\nDate\nBodyweightKg\nBest3SquatKg\nBest3BenchKg\nRatio_Squat\nRatio_Bench\n\n\n\n\nLinh Vu\n26.5\n2010-09-19\n82.40\n155.0\n90.0\n1.881068\n1.092233\n\n\nLinh Vu\n26.5\n2010-11-28\n82.65\n160.0\n90.0\n1.935874\n1.088929\n\n\nLinh Vu\n27.5\n2011-03-26\n82.68\n157.5\n92.5\n1.904935\n1.118771\n\n\nLinh Vu\n27.5\n2011-06-26\n87.85\n170.0\n105.0\n1.935117\n1.195219\n\n\nLinh Vu\n28.5\n2012-11-25\n82.20\n170.0\n90.0\n2.068126\n1.094890\n\n\nLinh Vu\n29.5\n2013-05-26\n82.10\n175.0\n95.0\n2.131547\n1.157126\n\n\nLinh Vu\n29.5\n2013-08-18\n81.05\n177.5\n105.0\n2.190006\n1.295497\n\n\nLinh Vu\n29.5\n2013-12-01\n73.85\n162.5\n105.0\n2.200406\n1.421801\n\n\nLinh Vu\n30.5\n2014-04-27\n73.80\n160.0\n105.0\n2.168022\n1.422764\n\n\nLinh Vu\n30.5\n2014-11-23\n73.80\n175.0\n102.5\n2.371274\n1.388889\n\n\nLinh Vu\n31.5\n2015-04-26\n73.40\n182.5\n107.5\n2.486376\n1.464578\n\n\nLinh Vu\n31.5\n2015-08-14\n72.25\n190.0\n107.5\n2.629758\n1.487889\n\n\n\n\n\nI want to get a sense of how ratios are distributed across the population, so I’ll have to keep just one record from lifters with multiple records. I thought about taking the average, but instead I opted to just choose one at random.\n\ndf1 <- df %>%\n  group_by(Name) %>%\n  slice_sample(n = 1) %>%\n  ungroup()\n\nSince we’re looking at the distribution of two variables, a good plot use is a 2D histogram, implemented using geom_bin_2d from ggplot.\n\n\nCode\nlibrary(ggplot2)\n\n# Number of observations in comma-separated format\nn <- df$Name %>%\n  unique() %>%\n  length() %>%\n  prettyNum(big.mark = \",\", scientific = FALSE)\n\nggplot(df1, aes(x = Ratio_Squat, y = Ratio_Bench)) +\n  geom_bin_2d(binwidth = .1) +\n\n  # Label: Me\n  geom_rect(\n    xmin = 1.5, xmax = 1.6, ymin = 1.1, ymax = 1.2,\n    fill = \"#cc0700\", color = \"#8c0803\", linewidth = .75\n  ) +\n  annotate(\"text\",\n    x = 1.6 + .2, y = 1.1 - .4, hjust = 0, vjust = 1,\n    label = \"Me!\", size = 14 / .pt, family = \"karla\", fontface = \"bold\", color = \"#cc0700\"\n  ) +\n  geom_segment(\n    x = 1.6 - .01, xend = 1.6 + .15, y = 1.1 - .07, yend = 1.1 - .37,\n    color = \"#cc0700\", linewidth = .5\n  ) +\n\n  # Label: Mode\n  geom_rect(\n    xmin = 2.1, xmax = 2.2, ymin = 1.4, ymax = 1.5,\n    fill = NA, color = \"black\", linewidth = .75\n  ) +\n  annotate(\"text\",\n    x = 2.2 + .5, y = 1.4, hjust = 0, vjust = 1,\n    label = \"Mode\", size = 14 / .pt, family = \"karla\", fontface = \"bold\", color = \"black\"\n  ) +\n  geom_segment(\n    x = 2.2 + .07, xend = 2.2 + .45, y = 1.4 + .04, yend = 1.4 - .05,\n    color = \"black\", linewidth = .5\n  ) +\n\n  # Labels\n  labs(\n    title = \"Ratio of max weight lifted to body weight\",\n    subtitle = paste0(\"Data on \", n, \" natural male lifters\")\n  ) +\n  scale_x_continuous(name = \"Squat\", limits = c(.2, 5.5), breaks = 1:6) +\n  scale_y_continuous(name = \"Bench\", limits = c(.2, 3.5), breaks = 1:4) +\n\n  # Legend\n  scale_fill_gradient(\n    low = \"gray94\", high = \"#1046b1\", guide = \"colorbar\",\n    breaks = c(250, 500, 750, 1000)\n  ) +\n  guides(fill = guide_colorbar(\n    title = \"Count\",\n    title.position = \"top\", title.vjust = 1, title.hjust = .5,\n    barwidth = unit(.75, \"lines\"),\n    barheight = unit(8, \"lines\"),\n    ticks = FALSE\n  )) +\n\n  # Theme\n  theme_minimal(base_family = \"karla\") +\n  theme(\n    plot.title = element_text(size = 16, face = \"bold\", hjust = .5),\n    plot.subtitle = element_text(size = 14, hjust = .5, margin = margin(b = 15)),\n    axis.ticks = element_blank(),\n    axis.title.x = element_text(size = 12, margin = margin(t = 10)),\n    axis.title.y = element_text(size = 12, margin = margin(r = 10)),\n    axis.text.x = element_text(size = 12, margin = margin(t = 5)),\n    axis.text.y = element_text(size = 12, margin = margin(r = 5)),\n    legend.position = \"right\",\n    legend.title = element_text(size = 12, face = \"bold\"),\n    legend.text = element_text(size = 10),\n    panel.background = element_rect(fill = \"gray98\", color = NA),\n    panel.grid.major.x = element_blank(),\n    panel.grid.major.y = element_blank(),\n    panel.grid.minor.x = element_blank(),\n    panel.grid.minor.y = element_blank()\n  )\n\n\n\n\n\nThe mode is 2.1-2.2x for squat and 1.4-1.5x for bench. I’m some ways off from the histogram’s central tendency, but not as far as I thought! Getting to that dark blue region is totally doable. I’ll revisit this chart a year from now and see where I am.\nAs a bonus, it might also be interesting to divide the lifters into age brackets and see how the distribution changes. My guess is that lifters in their mid-20s would be stronger than lifters in their late 30s. However, here is what I get:\n\n\nCode\nlibrary(cowplot)\n\n# Common plot elements\n\nbin <- geom_bin_2d(binwidth = .1)\nme_box <- geom_rect(\n  xmin = 1.5, xmax = 1.6, ymin = 1.1, ymax = 1.2,\n  fill = \"#cc0700\", color = \"#8c0803\", linewidth = .25\n)\nfill <- scale_fill_gradient(low = \"gray94\", high = \"#1046b1\")\nx_axis <- scale_x_continuous(name = \"Squat\", limits = c(.5, 4), breaks = 1:4)\ny_axis <- scale_y_continuous(name = \"Bench\", limits = c(.5, 4), breaks = 1:4)\ntheme <- theme_minimal(base_family = \"karla\") +\n  theme(\n    panel.background = element_rect(fill = \"gray98\", color = NA),\n    panel.grid.major.x = element_blank(),\n    panel.grid.major.y = element_blank(),\n    panel.grid.minor.x = element_blank(),\n    panel.grid.minor.y = element_blank(),\n    axis.ticks = element_blank(),\n    axis.title.x = element_text(size = 11, margin = margin(t = 5)),\n    axis.title.y = element_text(size = 11, margin = margin(r = 5)),\n    axis.text = element_text(size = 10),\n    legend.position = \"none\"\n  )\n\n# Plots\n\np1 <- ggplot(\n  df1 %>% filter(Age %in% 26:30),\n  aes(x = Ratio_Squat, y = Ratio_Bench)\n) +\n  bin +\n  me_box +\n  fill +\n  x_axis +\n  y_axis +\n  theme +\n  annotate(\"text\",\n    x = 1.2, y = 2.2, size = 9 / .pt, hjust = .5, vjust = .5,\n    label = \"Me!\", family = \"karla\", fontface = \"bold\", color = \"#cc0700\"\n  ) +\n  geom_segment(\n    x = 1.5, xend = 1.3, y = 1.2 + .1, yend = 2.2 - .25,\n    color = \"#cc0700\", linewidth = .25\n  )\n\np2 <- ggplot(\n  df1 %>% filter(Age %in% 31:35),\n  aes(x = Ratio_Squat, y = Ratio_Bench)\n) +\n  bin + me_box + fill + x_axis + y_axis + theme\n\np3 <- ggplot(\n  df1 %>% filter(Age %in% 36:40),\n  aes(x = Ratio_Squat, y = Ratio_Bench)\n) +\n  bin + me_box + fill + x_axis + y_axis + theme\n\n# Consolidate\n\ntitle <- ggdraw() +\n  draw_label(\"Ratio of max weight lifted to body weight, by age group\",\n    fontfamily = \"karla\", fontface = \"bold\", x = .5, hjust = .5, size = 13\n  ) +\n  theme(plot.margin = margin(t = -15, b = 10))\n\nplots <- plot_grid(p1, p2, p3,\n  nrow = 1,\n  labels = c(\"Aged 26-30\", \"Aged 31-35\", \"Aged 36-40\"),\n  label_size = 11, label_fontfamily = \"karla\", label_fontface = \"plain\",\n  hjust = -1.4, vjust = -.9\n)\n\nplot_grid(title, plots, ncol = 1, rel_heights = c(.2, 1))\n\n\n\n\n\nThe histograms don’t actually differ all that much. It’s possible that the bodily disadvantages of age are offset by the skills advantages of more training and experience. Just look at Linh Vu!\n\n\n\nReusehttps://creativecommons.org/licenses/by/4.0/"
  },
  {
    "objectID": "posts/2022-11-26-migration/index.html",
    "href": "posts/2022-11-26-migration/index.html",
    "title": "More on the great post-1500 migrations",
    "section": "",
    "text": "In my last post I brought up the World Migration Matrix, an ambitious dataset constructed in 2009 by Louis Putterman and David N. Weil that attempts to trace the ancestral origins of the present-day populations of nearly every country on Earth. It’s a complete matrix, so that you can pick any pair of countries and obtain the share of one country’s ancestors that originated from the other, and vice versa. It’s a deeply fascinating dataset and I thought I’d play around with it some more. (It’s also a chance to familiarize myself further with Highcharts.)\nPreviously, I plotted the immigrant share of each country, i.e. the share of its current population whose ancestors were not living in that country in the year 1500 (using modern borders). A related question to ask is, what is the ancestral diversity of each country? We encountered cases like Taiwan where nearly all inhabitants have “foreign” ancestors, but since a huge portion come from China, its resulting ancestral diversity is quite low. Contrast that with, say, the United States, where both the immigrant share is high and the ancestral country sources are very diverse.\nTo quantify this more formally, I use 1 minus the HH index as a measure of ancestral diversity. It takes a bit of data processing so I’m hiding the code below.\nThe following scatter plots ancestral diversity against the immigrant share of ancestors. They go hand-in-hand up to a point, and then we encounter enormous variety. I was surprised to find that the country with the most diverse set of ancestors is Jamaica, followed very closely by the United States. The other panels below showcase the ancestral origins of Jamaica and the U.S.\nNow let’s flip things around: which countries contributed the most to the immigrant share of populations worldwide? Here are the top 10 in terms of absolute amounts:\nAround the world, some 167 million people1 not living in Spain have ancestors who lived in Spain in the year 1500. It speaks to the legacy of European colonization and migration that the top 5 largest sources of immigrant ancestry are European countries.\nWhere did the descendants of these prolific exporters of people settle? Here are some more maps to give you an idea."
  },
  {
    "objectID": "posts/2022-11-26-migration/index.html#immigrant-share-vs-diversity",
    "href": "posts/2022-11-26-migration/index.html#immigrant-share-vs-diversity",
    "title": "More on the great post-1500 migrations",
    "section": "Immigrant share vs diversity",
    "text": "Immigrant share vs diversity\n\n\nCode\nlibrary(highcharter)\n\nx <- c(\"Country\", \"Continent\", \"Immigrant share of ancestors\", \"Ancestral diversity\")\ny <- c(\"{point.country_name:s}\", \"{point.country_region:s}\", \"{point.immig:.2f}\", \"{point.hhi:.2f}\")\ntltip <- tooltip_table(x, y)\n\nhchart(mm_immig_hhi, \"scatter\",\n  hcaes(x = immig, y = hhi, group = country_region),\n  color = c(\"#1046b1\", \"#a835a6\", \"#f0307d\", \"#ff6549\", \"#ffa600\"),\n  stickyTracking = FALSE,\n  jitter = list(x = .005, y = .005)\n) %>%\n  hc_xAxis(\n    title = list(text = \"Immigrant share of ancestors\"),\n    gridLineWidth = 1\n  ) %>%\n  hc_yAxis(\n    title = list(text = \"Ancestral diversity\"),\n    gridLineWidth = 1\n  ) %>%\n  hc_tooltip(\n    useHTML = TRUE,\n    pointFormat = tltip,\n    headerFormat = \"\"\n  )"
  },
  {
    "objectID": "posts/2022-11-26-migration/index.html#jamaicas-ancestors",
    "href": "posts/2022-11-26-migration/index.html#jamaicas-ancestors",
    "title": "More on the great post-1500 migrations",
    "section": "Jamaica’s ancestors",
    "text": "Jamaica’s ancestors\n\n\nCode\njamaica <- mm %>%\n  filter(country_name == \"Jamaica\")\n\nformattp <- JS(\"function() {\n  if (this.point.value < 0.01) {\n    return '<b>' + this.point.name + '</b>: <0.01';\n  }\n  else {\n    return '<b>' + this.point.name + '</b>: ' + Highcharts.numberFormat(this.point.value, 2);\n  }\n}\")\n\nhcmap(\n  map = \"custom/world-highres3\",\n  data = jamaica,\n  name = \"origin_name\",\n  value = \"share\",\n  borderWidth = .5,\n  joinBy = c(\"iso-a3\", \"origin_iso3\")\n) %>%\n  hc_mapNavigation(enabled = TRUE) %>%\n  hc_legend(\n    align = \"left\",\n    title = list(text = \"Ancestral contribution to Jamaica's population\")\n  ) %>%\n  hc_tooltip(\n    headerFormat = \"\",\n    formatter = formattp\n  )"
  },
  {
    "objectID": "posts/2022-11-26-migration/index.html#americas-ancestors",
    "href": "posts/2022-11-26-migration/index.html#americas-ancestors",
    "title": "More on the great post-1500 migrations",
    "section": "America’s ancestors",
    "text": "America’s ancestors\n\n\nCode\nusa <- mm %>%\n  filter(country_name == \"United States\")\n\nhcmap(\n  map = \"custom/world-highres3\",\n  data = usa,\n  name = \"origin_name\",\n  value = \"share\",\n  borderWidth = .5,\n  joinBy = c(\"iso-a3\", \"origin_iso3\")\n) %>%\n  hc_mapNavigation(enabled = TRUE) %>%\n  hc_legend(\n    align = \"left\",\n    title = list(text = \"Ancestral contribution to U.S. population\")\n  ) %>%\n  hc_tooltip(\n    headerFormat = \"\",\n    formatter = formattp\n  )"
  },
  {
    "objectID": "posts/2022-11-26-migration/index.html#spain",
    "href": "posts/2022-11-26-migration/index.html#spain",
    "title": "More on the great post-1500 migrations",
    "section": "Spain",
    "text": "Spain\n\n\nCode\nlibrary(CoordinateCleaner)\n\ncentroids <- as_tibble(countryref) %>%\n  filter(type == \"country\") %>%\n  select(iso3, centroid.lon, centroid.lat) %>%\n  group_by(iso3) %>%\n  summarize(\n    lon = mean(centroid.lon),\n    lat = mean(centroid.lat)\n  ) %>%\n  ungroup()\n\nspain <- mm_origin %>%\n  filter(origin_name == \"Spain\") %>%\n  left_join(centroids, by = c(\"country_iso3\" = \"iso3\")) %>%\n  mutate(z = absolute_out)\n\nhcmap(\n  map = \"custom/world\",\n  borderWidth = .5,\n  showInLegend = FALSE\n) %>%\n  hc_add_series(\n    data = spain,\n    type = \"mapbubble\",\n    maxSize = \"40\",\n    minSize = \"0\",\n    showInLegend = FALSE,\n    color = hex_to_rgba(\"#1046b1\", alpha = 0.3),\n    tooltip = list(\n      headerFormat = \"\",\n      pointFormat = \"<b>{point.country_name}</b>: {point.absolute_out:,.0f}\"\n    )\n  ) %>%\n  hc_title(text = \"Distribution of Spanish descendants\")"
  },
  {
    "objectID": "posts/2022-11-26-migration/index.html#portugal",
    "href": "posts/2022-11-26-migration/index.html#portugal",
    "title": "More on the great post-1500 migrations",
    "section": "Portugal",
    "text": "Portugal\n\n\nCode\nportugal <- mm_origin %>%\n  filter(origin_name == \"Portugal\") %>%\n  left_join(centroids, by = c(\"country_iso3\" = \"iso3\")) %>%\n  mutate(z = absolute_out)\n\nhcmap(\n  map = \"custom/world\",\n  borderWidth = .5,\n  showInLegend = FALSE\n) %>%\n  hc_add_series(\n    data = portugal,\n    type = \"mapbubble\",\n    maxSize = \"40\",\n    minSize = \"0\",\n    showInLegend = FALSE,\n    color = hex_to_rgba(\"#1046b1\", alpha = 0.3),\n    tooltip = list(\n      headerFormat = \"\",\n      pointFormat = \"<b>{point.country_name}</b>: {point.absolute_out:,.0f}\"\n    )\n  ) %>%\n  hc_title(text = \"Distribution of Portuguese descendants\")"
  },
  {
    "objectID": "posts/2022-11-26-migration/index.html#united-kingdom",
    "href": "posts/2022-11-26-migration/index.html#united-kingdom",
    "title": "More on the great post-1500 migrations",
    "section": "United Kingdom",
    "text": "United Kingdom\n\n\nCode\nuk <- mm_origin %>%\n  filter(origin_name == \"United Kingdom\") %>%\n  left_join(centroids, by = c(\"country_iso3\" = \"iso3\")) %>%\n  mutate(z = absolute_out)\n\nhcmap(\n  map = \"custom/world\",\n  borderWidth = .5,\n  showInLegend = FALSE\n) %>%\n  hc_add_series(\n    data = uk,\n    type = \"mapbubble\",\n    maxSize = \"40\",\n    minSize = \"0\",\n    showInLegend = FALSE,\n    color = hex_to_rgba(\"#1046b1\", alpha = 0.3),\n    tooltip = list(\n      headerFormat = \"\",\n      pointFormat = \"<b>{point.country_name}</b>: {point.absolute_out:,.0f}\"\n    )\n  ) %>%\n  hc_title(text = \"Distribution of British descendants\")"
  },
  {
    "objectID": "posts/2022-11-26-migration/index.html#china",
    "href": "posts/2022-11-26-migration/index.html#china",
    "title": "More on the great post-1500 migrations",
    "section": "China",
    "text": "China\n\n\nCode\nchina <- mm_origin %>%\n  filter(origin_name == \"China\") %>%\n  left_join(centroids, by = c(\"country_iso3\" = \"iso3\")) %>%\n  mutate(z = absolute_out)\n\nhcmap(\n  map = \"custom/world\",\n  borderWidth = .5,\n  showInLegend = FALSE\n) %>%\n  hc_add_series(\n    data = china,\n    type = \"mapbubble\",\n    maxSize = \"40\",\n    minSize = \"0\",\n    showInLegend = FALSE,\n    color = hex_to_rgba(\"#1046b1\", alpha = 0.3),\n    tooltip = list(\n      headerFormat = \"\",\n      pointFormat = \"<b>{point.country_name}</b>: {point.absolute_out:,.0f}\"\n    )\n  ) %>%\n  hc_title(text = \"Distribution of Chinese descendants\")"
  },
  {
    "objectID": "posts/2022-11-26-migration/index.html#india",
    "href": "posts/2022-11-26-migration/index.html#india",
    "title": "More on the great post-1500 migrations",
    "section": "India",
    "text": "India\n\n\nCode\nindia <- mm_origin %>%\n  filter(origin_name == \"India\") %>%\n  left_join(centroids, by = c(\"country_iso3\" = \"iso3\")) %>%\n  mutate(z = absolute_out)\n\nhcmap(\n  map = \"custom/world\",\n  borderWidth = .5,\n  showInLegend = FALSE\n) %>%\n  hc_add_series(\n    data = india,\n    type = \"mapbubble\",\n    maxSize = \"40\",\n    minSize = \"0\",\n    showInLegend = FALSE,\n    color = hex_to_rgba(\"#1046b1\", alpha = 0.3),\n    tooltip = list(\n      headerFormat = \"\",\n      pointFormat = \"<b>{point.country_name}</b>: {point.absolute_out:,.0f}\"\n    )\n  ) %>%\n  hc_title(text = \"Distribution of Indian descendants\")"
  },
  {
    "objectID": "posts/2022-11-26-migration/index.html#angola",
    "href": "posts/2022-11-26-migration/index.html#angola",
    "title": "More on the great post-1500 migrations",
    "section": "Angola",
    "text": "Angola\n\n\nCode\nangola <- mm_origin %>%\n  filter(origin_name == \"Angola\") %>%\n  left_join(centroids, by = c(\"country_iso3\" = \"iso3\")) %>%\n  mutate(z = absolute_out)\n\nhcmap(\n  map = \"custom/world\",\n  borderWidth = .5,\n  showInLegend = FALSE\n) %>%\n  hc_add_series(\n    data = angola,\n    type = \"mapbubble\",\n    maxSize = \"40\",\n    minSize = \"0\",\n    showInLegend = FALSE,\n    color = hex_to_rgba(\"#1046b1\", alpha = 0.3),\n    tooltip = list(\n      headerFormat = \"\",\n      pointFormat = \"<b>{point.country_name}</b>: {point.absolute_out:,.0f}\"\n    )\n  ) %>%\n  hc_title(text = \"Distribution of Angolan descendants\")"
  },
  {
    "objectID": "posts/2022-12-21-avatar/index.html",
    "href": "posts/2022-12-21-avatar/index.html",
    "title": "Somehow, Avatar has returned",
    "section": "",
    "text": "In 2009, I watched James Cameron’s Avatar and thought, wait a minute, this is just Atlantis: The Lost Empire but with blue people. Then I didn’t think about Avatar again for the next 13 years.\nLast week, Avatar: The Way of Water was released, the second in what will now be a five-film, billion-dollar epic. What! In a way, this makes perfect sense: Avatar is somehow still the highest grossing movie of all time. Someone must’ve wanted this, and if you were that someone, then good for you! Your 13-year wait is over, good God.\nBut I still find it baffling that Avatar has made more money than, say, Avengers: Endgame, despite a far more subdued cultural presence. How did it do this? And can James Cameron pull it off again with Way of Water?\nIn this post, I visualize the box office trajectories of Avatar, Endgame, and two other blockbusters, Star Wars: The Force Awakens and Spider-Man: No Way Home, to see if anything sets Avatar apart. I add the receipts so far of Way of Water to check if it is on track to repeat its predecessor’s success. And for additional context, I’m also including the would-be blockbuster Batman v Superman, which started strong but quickly fizzled out.\nThe data was scraped from BoxOfficeMojo.com using the rvest package. There was unfortunately no daily data for worldwide box office receipts so I confined myself to daily U.S. receipts.\n\nlibrary(tidyverse)\nlibrary(rvest)\nlibrary(magrittr)\n\nfilms <- c(\n  \"2691925505\",    # Star Wars: The Force Awakens\n  \"3059975681\",    # Avengers: Endgame\n  \"2869659137\",    # Spider-Man: No Way Home\n  \"2238875137\",    # Batman v Superman\n  \"876971521\",     # Avatar\n  \"3372254721\"     # Avatar: The Way of Water\n)\n\nurls <- paste0(\"https://www.boxofficemojo.com/release/rl\", films)\n\nnames(urls) <- c(\n  \"Star Wars: The Force Awakens\",\n  \"Avengers: Endgame\",\n  \"Spider-Man: No Way Home\",\n  \"Batman v Superman\",\n  \"Avatar\",\n  \"Avatar: The Way of Water\"\n)\n\ndf <- tibble(title = NULL, day = NULL, todate = NULL)\n\nfor (i in 1:length(urls)) {\n  df_i <- read_html(urls[i]) %>%\n    html_nodes(\"table\") %>%\n    extract2(1) %>%\n    html_table() %>%\n    mutate(\n      title = names(urls)[i],\n      todate = gsub(\"[\\\\$,]\", \"\", `To Date`) %>% as.numeric()\n    ) %>%\n    select(title, day = Day, todate)\n\n  df <- bind_rows(df, df_i)\n}\n\ndf <- df %>% mutate(title = factor(title, levels = names(urls)))\n\nThe following shows cumulative receipts for the first 90 days of each film’s original theatrical run:\n\n\nCode\nggplot(\n  df %>% filter(day < 91),\n  aes(x = day, y = todate / 1000000, group = title, color = title)\n) +\n  geom_line(linewidth = 1.1) +\n\n  # Labels\n  labs(\n    title = \"The way of Avatar I\",\n    subtitle = \"Cumulative U.S. box office receipts\",\n    caption = \"Note: Chart updated 26 Feb 2023\\nSource: boxofficemojo.com\"\n  ) +\n  scale_x_continuous(\n    name = \"Days since release\",\n    breaks = c(0, 30, 60, 90)\n  ) +\n  scale_y_continuous(\n    breaks = seq(0, 900, 300),\n    labels = c(\"\", 300, 600, \"$900 mn\")\n  ) +\n\n  # Legend\n  scale_color_manual(values = hcl.colors(n = 6, palette = \"Spectral\")) +\n  guides(color = guide_legend(\n    nrow = 3, ncol = 2,\n    keyheight = unit(1, \"lines\")\n  )) +\n\n  # Themes\n  theme_minimal(base_family = \"karla\") +\n  theme(\n    plot.title = element_text(family = \"karla\", size = 16, face = \"bold\", hjust = .5),\n    plot.subtitle = element_text(size = 14, hjust = .5, margin = margin(b = 10)),\n    plot.caption = element_text(size = 8, hjust = 0, margin = margin(t = 10)),\n    axis.ticks = element_blank(),\n    axis.title.x = element_text(size = 12, margin = margin(t = 5)),\n    axis.title.y = element_blank(),\n    axis.text.x = element_text(size = 11, margin = margin(t = 5)),\n    axis.text.y = element_text(size = 11, margin = margin(r = 5)),\n    legend.position = c(.6, .15),\n    legend.title = element_blank(),\n    legend.text = element_text(size = 12, margin = margin(r = 10)),\n    panel.background = element_rect(fill = \"gray97\", color = NA),\n    panel.grid.major.x = element_blank(),\n    panel.grid.major.y = element_line(linewidth = .5, color = \"white\"),\n    panel.grid.minor.x = element_blank(),\n    panel.grid.minor.y = element_blank()\n  )\n\n\n\n\n\nThe Disney marketing machinery is evident in the trajectories of its three movies here. When these came out, they were all anybody could talk about, all anybody wanted to see, and as people flocked to cinemas these movies made a boatload of money very quickly. But the hype started to die down at around the 30-day mark, and receipts plateaued thereafter.\nWarner Bros.’ Batman v Superman had a similar start. The pre-release hype was intense, saturating the pop culture landscape in a major way (and in the year 2016 no less!). People rushed to see it and it broke box office records. The only problem was that it was bad, bad, bad. The chart shows how its receipts plateaued immediately, and after just 84 days, it was unceremoniously pulled from theaters.\nAvatar did not have a splashy start, but what it had was staying power. Long after the other blockbusters entered their plateaus, Avatar’s cumulative receipts were still growing.\nHere is another chart that makes this more apparent. I have segmented each film’s theatrical run into fortnightly (two-week) periods and plotted their cumulative receipts for each fortnight.\n\n\nCode\ndf1 <- df %>%\n  group_by(title) %>%\n  mutate(\n    todate_lag = lag(todate),\n    fortnight = (day - 1) %/% 14\n  ) %>%\n  replace_na(list(todate_lag = 0)) %>%\n  group_by(title, fortnight) %>%\n  mutate(\n    day2 = 1:n(),\n    todate2 = todate - min(todate_lag)\n  ) %>%\n  ungroup()\n\nggplot(\n  df1 %>% filter(title != \"Avatar: The Way of Water\"),\n  aes(x = day2, y = todate2 / 1000000, group = fortnight, color = fortnight)\n) +\n  geom_line(linewidth = .8) +\n  facet_wrap(~title, nrow = 2, scales = \"free_y\") +\n\n  # Labels\n  scale_y_continuous(name = \"$ million\") +\n  labs(\n    title = \"The way of Avatar II\",\n    subtitle = \"Cumulative U.S. box office receipts, by fortnight\",\n    caption = \"Source: boxofficemojo.com\"\n  ) +\n\n  # Legend\n  scale_color_gradient2(\n    low = \"#d11f00\", mid = \"#f2e38c\", high = \"white\",\n    midpoint = 8,\n    guide = \"colorbar\"\n  ) +\n  guides(color = guide_colorbar(\n    title = \"Fortnights since release\",\n    title.position = \"top\",\n    title.vjust = 0,\n    title.hjust = .5,\n    direction = \"horizontal\",\n    barwidth = unit(8, \"lines\"),\n    barheight = unit(.75, \"lines\"),\n    ticks = FALSE\n  )) +\n\n  # Themes\n  theme_minimal(base_family = \"karla\") +\n  theme(\n    plot.title = element_text(size = 16, face = \"bold\", hjust = .5),\n    plot.subtitle = element_text(size = 14, hjust = .5, margin = margin(b = 12)),\n    plot.caption = element_text(size = 8, hjust = 0, margin = margin(t = 15)),\n    axis.ticks = element_blank(),\n    axis.title.x = element_blank(),\n    axis.title.y = element_text(size = 12),\n    axis.text.x = element_blank(),\n    axis.text.y = element_text(size = 10, margin = margin(r = 2)),\n    legend.position = c(.84, .24),\n    legend.title = element_text(size = 12, face = \"bold\"),\n    legend.text = element_text(size = 10),\n    strip.background = element_rect(fill = \"gray80\", color = NA),\n    strip.text = element_text(size = 10, face = \"bold\", color = \"black\"),\n    panel.background = element_rect(fill = \"gray97\", color = NA),\n    panel.grid.major.x = element_blank(),\n    panel.grid.major.y = element_line(linewidth = .5, color = \"white\"),\n    panel.grid.minor.x = element_blank(),\n    panel.grid.minor.y = element_blank()\n  )\n\n\n\n\n\nAvatar certainly stands out. In a way, it marked the end of the pre-MCU blockbuster era when the installments of a franchise didn’t come just months or even weeks apart. Such an onslaught of content inevitably detracts from the experience of viewing any single release. Avatar was neither buoyed nor hobbled by its belonging to a mega-franchise, which might go some ways in explaining why people kept seeing it in cinemas for so long.\nInterestingly however, James Cameron now appears to be adopting the mega-franchise model as he mass-produces four Avatar sequels slated for biannual releases until 2028. Good luck with that. The franchise game is a crowded space these days, and The Way of Water has apparently already underperformed. But will it go on to have the same staying power as the first Avatar? Or will it fizzle out like BvS?\nThe stakes are… hilariously high? From Variety:\n\nCameron apparently told Disney and 20th Century Studios executives that his sequel budget was so high it represented “the worst business case in movie history.” According to the director’s estimates, “you have to be the third or fourth highest-grossing film in history. That’s your threshold. That’s your break even.”\n\nI am no business genius, but if you need your enterprise to be the third or fourth most successful in history just to avoid financial ruin then maybe rethink your strategy. Maybe hedge a little!\nUpdate 30 Jan 2022: Well, he did it. As of my checking this morning, Avatar: The Way of Water has surpassed The Force Awakens to become the fourth highest-grossing film in history. It also bagged a Best Picture nomination while it was at it.\n\n\n\nReusehttps://creativecommons.org/licenses/by/4.0/"
  },
  {
    "objectID": "posts/2022-11-13-elon/index.html",
    "href": "posts/2022-11-13-elon/index.html",
    "title": "Visualizing Elon Musk’s Twitter addiction",
    "section": "",
    "text": "Elon Musk tweets a lot. Like, a lot. We can quantify it using this Kaggle dataset that contains all of Musk’s tweets between 27 January and 27 October 2022.\n\nlibrary(tidyverse)\nlibrary(lubridate)\nlibrary(ggplot2)\n\ndf <- here::here(\"datasets\", \"elon.csv\") %>% \n  read_csv() %>%\n  arrange(Date) %>%\n  mutate(hour(Date) <- hour(Date) + 1)\n\n# Switch from UTC to UTC-6 (Texas)\nhour(df$Date) <- hour(df$Date) - 6\n\ndf <- df %>%\n  mutate(\n    date = date(Date),\n    hour = hour(Date),\n    gap = difftime(Date, lag(Date), units = \"mins\")\n  )\n\n# Tweets per day: nrow(df) / as.numeric(as.Date(\"2022-10-27\") - as.Date(\"2022-01-27\"))\n# Average time between tweets: mean(df$gap[-1])\n\nThe timestamps were in UTC, but since Musk seems to reside mostly in Texas, I switched the time zone to UTC-6.\nDuring this 10-month period, Musk sent out about 11 tweets per day. Put another way, he tweeted every 2 hours and 8 minutes for 10 months. Some of the tweets dabble in great power diplomacy, some are poop emojis.\nLooking at the sheer volume of tweets Musk produces, I got to wondering: when does this guy work? Elon Musk is famously a workaholic who claims to work 80-90 hours a week. But… is he just tweeting the whole time? Let’s investigate.\nFirst let’s chart his tweets per day to see what we’re dealing with.\n\n\nCode\nggplot(df %>% count(date), aes(x = date, y = n)) +\n  geom_bar(stat = \"identity\", width = 1, fill = \"#1046b1\") +\n  scale_x_date(date_breaks = \"1 month\", date_labels = \"%b\") +\n  scale_y_continuous(breaks = c(0, 20, 40)) +\n  theme(\n    axis.title = element_blank(),\n    axis.ticks = element_blank(),\n    axis.text.x = element_text(size = 10, margin = margin(5, 0, 0, 0)),\n    axis.text.y = element_text(size = 10, margin = margin(0, 5, 0, 0)),\n    panel.background = element_rect(fill = \"gray97\"),\n    panel.grid.major.x = element_blank(),\n    panel.grid.minor.x = element_blank(),\n    panel.grid.minor.y = element_blank()\n  )\n\n\n\n\n\nInterestingly, Musk does take breaks from time to time, like a 10-day stretch in late June. Maybe work picked up?\nNow let’s plot an hourly histogram of his tweets.\n\n\nCode\nggplot(df, aes(x = hour)) +\n  geom_histogram(aes(y = after_stat(density)),\n    binwidth = 1, fill = \"#1046b1\", color = \"gray97\", linewidth = 2\n  ) +\n  scale_x_continuous(breaks = 0:23) +\n  scale_y_continuous(labels = function(x) paste0(100 * x, \"%\")) +\n  theme_minimal(base_family = \"karla\") +\n  theme(\n    axis.title = element_blank(),\n    axis.ticks = element_blank(),\n    axis.text.x = element_text(size = 10, margin = margin(5, 0, 0, 0)),\n    axis.text.y = element_text(size = 10, margin = margin(0, 5, 0, 0)),\n    panel.background = element_rect(fill = \"gray97\", color = NA),\n    panel.grid.major.x = element_blank(),\n    panel.grid.major.y = element_line(color = \"white\"),\n    panel.grid.minor.x = element_blank(),\n    panel.grid.minor.y = element_blank()\n  )\n\n\n\n\n\nWow. It looks like he tweets at pretty much all waking hours of the day. He also seems to not be getting much sleep, with the lull in tweets spanning just 3am to 6am.\nLooking through the dataset, what’s more remarkable is that most of his tweets are replies to other tweets. Anyone can tweet 11 tweets per day, but what Musk is doing involves actually browsing Twitter, reading other people’s tweets, and reacting to them. Constantly. All day. Everyday. I suppose an argument can be made that one so thoroughly immersed in the platform (to the point of crippling addiction) is actually well-placed to run said platform. But an argument can also be made that no, what, are you crazy, that’d be a horrible idea.\nHere’s a fun data viz exercise to end. Let’s color the bars according to the time of day, with nighttime in blue and daytime in yellow.\n\n\nCode\ndaycolors <- c(\n  rep(\"#1046b1\", 5),     # 12am to 4am\n  rep(\"#9696d2\", 3),     # 5am to 7am\n  rep(\"#ffa600\", 12),    # 8am to 7pm\n  rep(\"#9696d2\", 3),     # 8pm to 10pm\n  rep(\"#1046b1\", 1)      # 11pm\n)\n\nggplot(df, aes(x = hour)) +\n  geom_histogram(aes(y = after_stat(density)),\n    binwidth = 1, fill = daycolors, color = \"gray97\", linewidth = 2.5\n  ) +\n  labs(\n    title = \"Hourly distribution of Elon Musk's tweets\",\n    subtitle = \"January to October 2022\"\n  ) +\n  scale_x_continuous(\n    breaks = 0:23,\n    label = paste0(c(12, 1:12, 1:11), \":00\")\n  ) +\n  scale_y_continuous(labels = function(x) paste0(100 * x, \"%\")) +\n  theme_minimal(base_family = \"karla\") +\n  theme(\n    plot.title = element_text(size = 16, face = \"bold\", hjust = .5),\n    plot.subtitle = element_text(size = 14, hjust = .5, margin = margin(0, 0, 15, 0)),\n    axis.title = element_blank(),\n    axis.ticks = element_blank(),\n    axis.text.x = element_text(size = 12, angle = 90, hjust = 1, vjust = .5, margin = margin(5, 0, 0, 0)),\n    axis.text.y = element_text(size = 12, margin = margin(0, 5, 0, 0)),\n    legend.position = \"none\",\n    panel.background = element_rect(fill = \"gray97\", color = NA),\n    panel.grid.major.x = element_blank(),\n    panel.grid.major.y = element_line(color = \"white\"),\n    panel.grid.minor.x = element_blank(),\n    panel.grid.minor.y = element_blank()\n  )\n\n\n\n\n\n\n\n\nReusehttps://creativecommons.org/licenses/by/4.0/"
  },
  {
    "objectID": "posts/2023-02-22-putins-leverage-putins-folly/index.html",
    "href": "posts/2023-02-22-putins-leverage-putins-folly/index.html",
    "title": "Putin’s leverage, Putin’s folly",
    "section": "",
    "text": "Putin’s war in Ukraine is now approaching its second year. In the face of Russia’s armies, Ukraine has confounded pessimists to contrive one unexpected success after another, from the repulsion of the initial invasion of Kiev to the retaking of territories around Kharkiv and Kherson late last year. The West has rallied behind Zelensky. Many geopolitical givens have been upended. John Mearsheimer has changed his mind (just kidding).\nEqually bewildering has been the conflict’s economic consequences. Energy commodity prices—crude oil, natural gas—went haywire last year. This joined hands with the great post-COVID reopening to unleash the highest rates of inflation the West has seen since the 70s. In response, central banks have decisively and jarringly ended the low-interest rate era. Recessions loom. Big and small implosions have occurred in the tech–crypto–meme stock space.\nThis is a lot to make sense of, but in today’s post, I want to focus on Russia’s centrality in the global energy trade. Earlier this month, the French think tank CEPII released the BACII dataset for 2021. The BACII is an extremely rich (and free!) dataset containing bilateral trade flows among 200-plus countries across 5000-plus products. It is a cleaned up version of the UN’s COMTRADE, hence the one-year lag in its release. What we therefore have is the global structure of trade right before the Russian invasion of Ukraine, after which Western sanctions dramatically altered trade patterns. How big of a player was Russia in energy markets?\nLet’s load it up:\n\nlibrary(tidyverse)\n\ndf <- here(\"datasets\", \"baci2011\", \"BACI_HS17_Y2021_V202301.csv\") %>% \n  read_csv()\n\ndf %>%\n  head() %>%\n  kable(align = \"c\")\n\n\n\n\nt\ni\nj\nk\nv\nq\n\n\n\n\n2021\n4\n24\n382499\n52.548\n13.235\n\n\n2021\n4\n24\n392410\n0.266\n1.854\n\n\n2021\n4\n24\n481890\n0.041\n0.022\n\n\n2021\n4\n24\n570232\n0.202\n1.854\n\n\n2021\n4\n24\n690722\n3.431\n1.854\n\n\n2021\n4\n24\n732310\n0.020\n1.854\n\n\n\n\n\nAs you can see, the structure of the dataset is very simple. Column i is the exporting country, j is the importing country, k is the HS six-digit commodity code, v is the annual value of the trade in millions of US dollars, and q is the annual quantity of the trade in metric tons. The 2021 release has *counts fingers* 11.1 million rows.\nAccompanying dictionaries define the country and product codes. We’ll go ahead and revise some of the more unusually labeled countries. In particular, note that “Other Asia, not elsewhere specificied” is essentially a euphemism for Taiwan. The result is as follows:\n\ncountries <- here(\"datasets\", \"baci2011\", \"country_codes_V202301.csv\") %>%\n  read_csv() %>%\n  select(code = country_code, country = country_name_full, iso3 = iso_3digit_alpha)\n\n# Revise names\ncountries$country[which(countries$country == \"France, Monaco\")] <- \"France\"\ncountries$country[which(countries$country == \"Norway, Svalbard and Jan Mayen\")] <- \"Norway\"\ncountries$country[which(countries$country == \"United Kingdom\")] <- \"UK\"\ncountries$country[which(countries$country == \"USA, Puerto Rico and US Virgin Islands\")] <- \"USA\"\ncountries$iso3[which(countries$country == \"Other Asia, not elsewhere specified\")] <- \"TWN\"\ncountries$country[which(countries$country == \"Other Asia, not elsewhere specified\")] <- \"Taiwan\"\n\ncountries %>%\n  head() %>%\n  kable(align = \"clc\")\n\n\n\n\ncode\ncountry\niso3\n\n\n\n\n4\nAfghanistan\nAFG\n\n\n8\nAlbania\nALB\n\n\n12\nAlgeria\nDZA\n\n\n16\nAmerican Samoa\nASM\n\n\n20\nAndorra\nAND\n\n\n24\nAngola\nAGO\n\n\n\n\n\nThe key energy commodities I want to highlight are crude oil, refined petroleum, and natural gas. These have HS codes 270900, 271000, and 271111, respectively. Below are their full labels according to the products dictionary:\n\nhere(\"datasets\", \"baci2011\", \"product_codes_HS17_V202301.csv\") %>% \n  read_csv() %>%\n  filter(code %in% c(270900, 271000, 271111)) %>%\n  kable()\n\n\n\n\n\n\n\n\ncode\ndescription\n\n\n\n\n270900\nOils: petroleum oils and oils obtained from bituminous minerals, crude\n\n\n271000\nPetroleum oils and oils from bituminous minerals, not crude: preparations n.e.c. containing by weight 70% or more of petroleum oils or oils from bituminous minerals: these being the basic constituents of the preparations: waste oils\n\n\n271111\nPetroleum gases and other gaseous hydrocarbons: liquefied, natural gas\n\n\n\n\n\nLet’s aggregate the BACII dataset to reflect the total exports and imports of all countries for each of these three energy products.\n\nenergy <- df %>%\n  filter(k %in% c(270900, 271000, 271111))\n\nenergy_exp <- energy %>%\n  group_by(i, k) %>%\n  summarize(exports = sum(v)) %>%\n  ungroup() %>%\n  left_join(countries, by = c(\"i\" = \"code\")) %>%\n  select(country, iso3, k, exports)\n\nenergy_imp <- energy %>%\n  group_by(j, k) %>%\n  summarize(imports = sum(v)) %>%\n  ungroup() %>%\n  left_join(countries, by = c(\"j\" = \"code\")) %>%\n  select(country, iso3, k, imports)\n\nenergy_agg <- energy_exp %>%\n  left_join(energy_imp) %>%\n  replace_na(list(exports = 0, imports = 0)) %>%\n  mutate(net_exports = exports - imports)\n\nThe graph below shows the biggest net exporters and net importers.\n\n\nCode\nlibrary(ggplot2)\n\ntop_countries <- energy_agg %>%\n  group_by(country) %>%\n  summarize(net_exports = sum(net_exports)) %>%\n  ungroup() %>%\n  arrange(-net_exports) %>%\n  slice(c(1:10, (n() - 9):n())) %>%\n  bind_rows(tibble(country = \"\", net_exports = 0)) %>%\n  arrange(-net_exports) %>%\n  magrittr::use_series(country)\n\nenergy_agg %>%\n  bind_rows(tibble(country = \"\", k = \"270900\", net_exports = 0)) %>%\n  filter(country %in% top_countries) %>%\n  arrange(-net_exports) %>%\n  mutate(country = factor(country, rev(top_countries))) %>%\n  ggplot(aes(x = net_exports, y = country, fill = k)) +\n  geom_bar(position = \"stack\", stat = \"identity\", width = .7) +\n  geom_hline(yintercept = \"\", linetype = \"dashed\", color = \"gray40\", linewidth = .25) +\n\n  # Labels\n  labs(\n    title = \"High octane trading\",\n    subtitle = \"Biggest net exporters/importers of energy commodities, 2021\",\n    caption = \"Source: CEPII BACI dataset\"\n  ) +\n  scale_x_continuous(\n    labels = c(\"-$200bn\", \"-$100bn\", \"0\", \"$100bn\", \"$200bn\"),\n    breaks = c(-200, -100, 0, 100, 200) * 10^6\n  ) +\n  scale_fill_manual(\n    labels = c(\"Crude oil\", \"Refined petroleum\", \"Natural gas\"),\n    values = c(\"#1046b1\", \"#ff505b\", \"#ffa600\")\n  ) +\n  theme_minimal(base_family = \"karla\") +\n  theme(\n    plot.title = element_text(size = 16, face = \"bold\", hjust = .5),\n    plot.subtitle = element_text(size = 14, hjust = .5, margin = margin(b = 12)),\n    plot.caption = element_text(size = 8, hjust = 0, margin = margin(t = 10, l = -10)),\n    axis.ticks = element_blank(),\n    axis.title = element_blank(),\n    axis.text.x = element_text(size = 12, margin = margin(t = 5)),\n    axis.text.y = element_text(\n      size = c(rep(10, 20), 11),\n      face = c(rep(\"plain\", 20), \"bold\"),\n      color = c(rep(\"gray10\", 20), \"#ff505b\"),\n      margin = margin(r = 5)\n    ),\n    legend.position = c(.2, .85),\n    legend.background = element_blank(),\n    legend.title = element_blank(),\n    legend.text = element_text(size = 11),\n    panel.background = element_rect(fill = \"gray97\", color = NA),\n    panel.grid.major.x = element_line(linewidth = .15, color = \"gray80\"),\n    panel.grid.major.y = element_blank(),\n    panel.grid.minor.x = element_blank(),\n    panel.grid.minor.y = element_blank()\n  )\n\n\n\n\n\nIn net value terms for the commodities in question, Russia was the biggest exporter in 2021. Receipts from these would finance its war the following year and have naturally become the primary targets of Western sanctions. Over on the other end, the pronounced reliance of Chinese industry on energy imports adds another strategic reason why the Xi–Putin friendship would continue to have “no limits”.\nA visually striking way to represent the structure of global energy flows and Russia’s place in it is through a network chart. Making these is a little trickier than your run-of-the-mill line or bar chart, so I’ll walk through the preparation our data needs to undergo.\nLet’s use crude oil (HS 270900). We will need to construct a table containing all the “nodes” (and their properties) and all the “edges” that connect the nodes. In our case, nodes refer to countries while edges refer to the dollar amounts of crude oil flowing from one country to another.\nStarting with the nodes:\n\nlibrary(countrycode)\n\nenergy_trunc <- energy %>%\n  filter(k == 270900)\n\nsources <- energy_trunc %>%\n  distinct(i) %>%\n  rename(code = i)\n\ndestinations <- energy_trunc %>%\n  distinct(j) %>%\n  rename(code = j)\n\ntot_exports <- energy %>%\n  filter(k == 270900) %>%\n  group_by(i) %>%\n  summarize(tot_exports = sum(v)) %>%\n  ungroup()\n\nnodes <- full_join(sources, destinations) %>%\n  inner_join(countries, by = \"code\") %>%\n  left_join(tot_exports, by = c(\"code\" = \"i\")) %>%\n  replace_na(list(tot_exports = 0)) %>%\n  mutate(\n    id = 1:n(),\n    label = ifelse(tot_exports >= 10^6, country, \"\")  # Labels only for big nodes\n  ) %>%\n  select(id, code, iso3, country, label, tot_exports)\n\n# Add region of each country\nnodes <- nodes %>%\n  mutate(region = countrycode(nodes$iso3, origin = \"iso3c\", destination = \"continent\"))\n\nnodes %>%\n  head() %>%\n  kable(align = \"c\")\n\n\n\n\nid\ncode\niso3\ncountry\nlabel\ntot_exports\nregion\n\n\n\n\n1\n4\nAFG\nAfghanistan\n\n50582.04\nAsia\n\n\n2\n8\nALB\nAlbania\n\n208037.64\nEurope\n\n\n3\n12\nDZA\nAlgeria\nAlgeria\n10950655.07\nAfrica\n\n\n4\n24\nAGO\nAngola\nAngola\n27575679.32\nAfrica\n\n\n5\n31\nAZE\nAzerbaijan\nAzerbaijan\n13330215.35\nAsia\n\n\n6\n32\nARG\nArgentina\nArgentina\n1187448.54\nAmericas\n\n\n\n\n\nEach node is indexed by the id variable and has two properties that we will later incorporate in our network chart: total exports, which will determine the size of the node, and geographic region, which will determine the color of the node. Regions are obtained from the package countrycode.\nNow for the edges:\n\nedges <- energy_trunc %>%\n  left_join(nodes, by = c(\"i\" = \"code\")) %>%\n  rename(from = id) %>%\n  left_join(nodes, by = c(\"j\" = \"code\")) %>%\n  rename(to = id) %>%\n  select(from, to, v)\n\nedges %>%\n  head() %>%\n  kable(align = \"c\")\n\n\n\n\nfrom\nto\nv\n\n\n\n\n1\n62\n50581.430\n\n\n1\n132\n0.605\n\n\n2\n27\n1.059\n\n\n2\n62\n26900.309\n\n\n2\n123\n181136.270\n\n\n3\n7\n114354.978\n\n\n\n\n\nThe edges table uses the id index from the nodes table to record flows between nodes.\nUsing the tidygraph package, our nodes and edges tables are now fed into the tbl_graph() function\n\nlibrary(tidygraph)\n\nnetwork <- tbl_graph(nodes = nodes, edges = edges, directed = TRUE)\n\nWe are now ready to produce a network chart using the ggraph package. I use the dh layout in the chart below, which implements the Davidson–Harel algorithm to position the nodes of the network. Because some randomness is involved, it is helpful to set a seed so that the result stays fixed as we iterate through drafts of the graph.\n\n\nCode\nlibrary(ggraph)\nlibrary(scales)\n\nset.seed(4146)\n\nggraph(network, layout = \"dh\") +\n  geom_edge_link(aes(alpha = v, width = v), show.legend = FALSE) +\n  geom_node_point(aes(color = region),\n    size = rescale(nodes$tot_exports, c(.75, 25)),\n    shape = 16, alpha = 0.7\n  ) +\n\n  labs(\n    title = \"Crudely speaking\",\n    subtitle = \"Crude oil trade flows in US dollar terms, 2021\",\n    caption = \"Source: CEPII BACI dataset\"\n  ) +\n  geom_node_text(aes(label = label), size = 8 / .pt) +\n  lims(x = c(-50, 45), y = c(-65, 45)) +\n\n  scale_edge_width(range = c(0.2, 2)) +\n  scale_edge_alpha(range = c(0.05, .8)) +\n  scale_color_manual(values = c(\"#1046b1\", \"#a835a6\", \"#ffa600\", \"#ff6549\", \"#f0307d\")) +\n  guides(color = guide_legend(\n    keyheight = unit(1, \"lines\"),\n    direction = \"vertical\",\n    override.aes = list(size = 2.5, alpha = 1)\n  )) +\n\n  theme_minimal(base_family = \"karla\") +\n  theme(\n    plot.title = element_text(size = 16, face = \"bold\", hjust = .5),\n    plot.subtitle = element_text(size = 14, hjust = .5, margin = margin(b = 12)),\n    plot.caption = element_text(size = 8, hjust = 0, margin = margin(t = 10, l = -10)),\n    axis.title = element_blank(),\n    axis.text = element_blank(),\n    legend.position = c(.85, .2),\n    legend.background = element_blank(),\n    legend.title = element_blank(),\n    legend.text = element_text(size = 12),\n    legend.key = element_blank(),\n    panel.background = element_rect(fill = \"gray97\", color = NA),\n    panel.grid.major.x = element_blank(),\n    panel.grid.major.y = element_blank(),\n    panel.grid.minor.x = element_blank(),\n    panel.grid.minor.y = element_blank()\n  )\n\n\n\n\n\nThe centrality of Russia is evident, making efforts to rapidly disentangle it from supply networks a daunting task. If it can be done at all, it will have to be done gradually, with plenty of near-term pain.\nCountries have had to bear this pain unevenly. The chart below shows the share of Russia in countries’ imports of crude oil, refined petroleum, and natural gas. I have highlighted some of the key geopolitical players in the present Ukraine conflict.\n\n\nCode\nhighlight <- c(\"USA\", \"Germany\", \"France\", \"UK\", \"Sweden\", \"Finland\", \"Turkey\", \"China\", \"India\")\n\nfrom_russia <- energy %>%\n  filter(i == 643) %>%\n  group_by(j) %>%\n  summarize(from_russia = sum(v)) %>%\n  ungroup()\n\ntot_imports <- energy %>%\n  group_by(j) %>%\n  summarize(tot_imports = sum(v)) %>%\n  ungroup()\n\nrussia_dependence <- from_russia %>%\n  left_join(tot_imports) %>%\n  left_join(countries, by = c(\"j\" = \"code\")) %>%\n  mutate(russia_dependence = 100 * from_russia / tot_imports) %>%\n  arrange(-tot_imports) %>%\n  slice(1:50) %>%\n  arrange(-russia_dependence) %>%\n  mutate(\n    country = factor(country, country),\n    region = countrycode(iso3, origin = \"iso3c\", destination = \"continent\"),\n    labelsize = ifelse(country %in% highlight, 10, 0),\n    highlight = ifelse(country %in% highlight, 1, 0)\n  ) %>%\n  select(code = j, iso3, country, region, from_russia, tot_imports, russia_dependence, labelsize, highlight)\n\nrussia_dependence %>%\n  ggplot(aes(x = country, y = russia_dependence, fill = region, alpha = highlight)) +\n  geom_bar(stat = \"identity\") +\n  \n  labs(\n    title = \"Moscow's dependents\",\n    subtitle = \"Share of energy imports sourced from Russia, 2021\",\n    caption = \"Notes: Energy here refers to crude oil, refined petroleum, and natural gas. Only top 50 countries by value are included.\\nSource: CEPII BACI dataset\"\n  ) +\n  \n  scale_y_continuous(expand = expansion(mult = c(0, .1))) +\n  scale_fill_manual(values = c(\"#1046b1\", \"#a835a6\", \"#ffa600\", \"#ff6549\", \"#f0307d\")) +\n  scale_alpha(range = c(.25, 1)) +\n  guides(\n    fill = guide_legend(direction = \"horizontal\"),\n    alpha = FALSE\n  ) +\n  theme_minimal(base_family = \"karla\") +\n  theme(\n    plot.title = element_text(size = 16, face = \"bold\", hjust = .5),\n    plot.subtitle = element_text(size = 14, hjust = .5, margin = margin(b = 12)),\n    plot.caption = element_text(size = 8, hjust = 0, margin = margin(t = 10, l = -10)),\n    axis.ticks = element_blank(),\n    axis.title = element_blank(),\n    axis.text.x = element_text(\n      size = russia_dependence$labelsize,\n      angle = 90, hjust = 1, vjust = .5, margin = margin(t = 5)\n    ),\n    axis.text.y = element_text(size = 12, margin = margin(r = 5)),\n    legend.position = c(.2, .85),\n    legend.justification = c(0, 0),\n    legend.background = element_blank(),\n    legend.title = element_blank(),\n    legend.text = element_text(size = 12, margin = margin(r = 10)),\n    panel.background = element_rect(fill = \"gray97\", color = NA),\n    panel.grid.major.x = element_blank(),\n    panel.grid.major.y = element_line(linewidth = .15, color = \"gray80\"),\n    panel.grid.minor.x = element_blank(),\n    panel.grid.minor.y = element_blank()\n  )\n\n\n\n\n\nThe fruits of Germany’s enthusiastic rapproachment with Russia had, by 2021, translated into a dependence on Russian energy that exceeded France and the UK. It has unsurprisingly dragged its feet in providing military aid to Ukraine. But even higher was Finland’s, which in contrast has opted to irrevocably defy Moscow by moving to join NATO. This after decades of steadfast neutrality, demonstrating how past alignments can shift—and have shifted—dramatically.\nGermany’s Ostpolitik was rooted in the reasonable notion that deepening economic links can only make state relations more peaceful, more constructive. And in terms of global energy markets, Russia was as embedded as it gets. But Putin in his insanity chose to throw this all away and wage a war of annihilation. That this would have been hard to fathom from the vantage point of 2021 holds sobering implications for whether peace will endure among the great powers in the future.\n\n\n\nReusehttps://creativecommons.org/licenses/by/4.0/"
  },
  {
    "objectID": "posts/2022-11-15-ftx/index.html",
    "href": "posts/2022-11-15-ftx/index.html",
    "title": "That FTX balance sheet",
    "section": "",
    "text": "I was reading Matt Levine’s entertaining walkthrough of the FTX balance sheet and I thought it’d be fun to visualize this, um, unique financial document. FTX is a crypto exchange that collapsed spectacularly last week. There are already plans for a movie adaptation and I hope Sorkin and Fincher reunite for it.\nThe balance sheet in question is dated 10 November and appears to have been constructed by SBF himself. It sent prospective investors running the other way. Per Levine: “It’s an Excel file full of the howling of ghosts and the shrieking of tortured souls. If you look too long at that spreadsheet, you will go insane.”\nFor this visualization, I want to show the assets and liabilities in two bars, with the assets bar broken down into the various weird things that FTX counted as assets. I will be employing a lot of visual trickery in this chart and I’d like to walk you through my process.\nFirst, here is how I gathered the numbers into a dataset. Doing it in this “long” format makes it easier to chart.\n\nlibrary(tidyverse)\n\ndf <- here::here(\"datasets\", \"ftx.csv\") %>%\n  read_csv()\ndf\n\n# A tibble: 12 × 3\n   group1      group2            billions\n   <chr>       <chr>                <dbl>\n 1 liabilities total                8.86 \n 2 assets      total                9.58 \n 3 assets      liquid               0.900\n 4 assets      liquid-robinhood     0.472\n 5 assets      liquid-others        0.428\n 6 assets      lessliquid           5.45 \n 7 assets      lessliquid-ftt       0.554\n 8 assets      lessliquid-serum     2.19 \n 9 assets      lessliquid-sol       0.982\n10 assets      lessliquid-maps      0.616\n11 assets      lessliquid-others    1.11 \n12 assets      illiquid             3.23 \n\n\nHere’s a first stab:\n\nlibrary(ggplot2)\n\ndf1 <- df %>%\n  filter(group2 %in% c(\"total\", \"liquid\", \"lessliquid\", \"illiquid\"), !(group1 == \"assets\" & group2 == \"total\"))\n\nggplot(df1, aes(x = group1, y = billions, fill = group2)) +\n  geom_bar(stat = \"identity\", position = \"stack\") +\n  theme(\n    axis.title = element_blank(),\n    axis.text.y = element_blank(),\n    axis.ticks = element_blank(),\n    panel.background = element_blank(),\n    panel.grid = element_blank()\n  )\n\n\n\n\nAtrocious but you get the idea.\nI’m going to annotate these bars with subcategories of interest, so I’ll need some space on the sides. To get this, I’ll add phantom categories to the “group1” column.\n\ndf1 <- df1 %>%\n  bind_rows(tibble(\n    group1 = c(\"space_l\", \"space_r\"),\n    group2 = \"total\", value = 0\n  )) %>%\n  mutate(group1 = factor(group1, levels = c(\"space_l\", \"assets\", \"liabilities\", \"space_r\")))\n\nplot <- ggplot(df1, aes(x = group1, y = billions, fill = group2)) +\n  geom_bar(stat = \"identity\", position = \"stack\", width = .7) +\n  theme(\n    axis.title = element_blank(),\n    axis.text.y = element_blank(),\n    axis.ticks = element_blank(),\n    panel.background = element_blank(),\n    panel.grid = element_blank()\n  )\nplot\n\n\n\n\nFor the annotations, we will be using geom_rect(), geom_segment(), annotate(), and a significant amount of trial and error. Let me demonstrate by annotating the portion of the “less liquid” assets that comprise the stuff FTX “made up” (FTT, SRM, SOL, and MAPS tokens). We’ll first need to identify some coordinates in the plot space:\n\nh1 <- df$billions[df$group2 == \"liquid\"]\nh2 <- h1 + df$billions[df$group2 == \"lessliquid\"]\nh3 <- h1 + df$billions[df$group2 == \"lessliquid-others\"]\nh4 <- df$billions[df$group1 == \"assets\" & df$group2 == \"total\"]\n\nNow we add to the plot:\n\nbw <- .35\n\nplot +\n  geom_rect(\n    xmin = 2 - bw, xmax = 2 + bw, ymin = h3, ymax = h2,\n    data = df1[1, ], fill = NA, color = \"black\"\n  ) +\n  geom_segment(\n    x = 2 - bw, xend = 2 - 1.5 * bw, y = h2 - 1, yend = h2 - .8,\n    color = \"black\"\n  ) +\n  annotate(\"text\",\n    x = 2 - 1.8 * bw, y = h2 - .65, hjust = 1,\n    label = \"Stuff we made up\"\n  )\n\n\n\n\nNote that all the positioning values were discovered through trial and error. So if you’re doing something like this, try and organize your values around fundamental constants of the chart. For example, bw here is half the width of the bars.\nNow let’s add all the other annotations, and while we’re at it let’s tweak the aesthetics of the chart. There’s also the question of where to place the 8-billion-dollar “hidden, poorly internally labeled ‘fiat@’ account”. No one’s really sure what to do with this. Writes Matt Levine:\n\nIf you try to calculate the equity of a balance sheet with an entry for HIDDEN POORLY INTERNALLY LABELED ACCOUNT, Microsoft Clippy will appear before you in the flesh, bloodshot and staggering, with a knife in his little paper-clip hand, saying “just what do you think you’re doing Dave?” You cannot apply ordinary arithmetic to numbers in a cell labeled “HIDDEN POORLY INTERNALLY LABELED ACCOUNT.” The result of adding or subtracting those numbers with ordinary numbers is not a number; it is prison.\n\nGiven this expert advice, I’ve decided to give it its own accurately sized bar that kind of just hovers over the liabilities bar, like a ghoul.\nHere’s the final chart:\n\n\nCode\nggplot(df1, aes(x = group1, y = billions, fill = group2)) +\n  geom_bar(stat = \"identity\", position = \"stack\", width = .7) +\n\n  # Hidden poorly internally labeled account\n  geom_rect(\n    xmin = 3 - .8 * bw, xmax = 3 + 1.2 * bw, ymin = 1.2, ymax = 1.2 + 8,\n    data = df1[1, ], fill = \"gray80\", alpha = .5\n  ) +\n  annotate(\"text\",\n    x = 3 - 1.1 * bw, y = 8 + 1.45, family = \"karla\", size = 10 / .pt, vjust = 0, hjust = 0, color = \"gray50\",\n    label = \"Hidden, poorly internally labeled account: -$8 billion\"\n  ) +\n\n  # Robinhood shares\n  geom_rect(\n    xmin = 2 - bw, xmax = 2 + bw, ymin = h1 - .472, ymax = h1,\n    data = df1[1, ], fill = NA, color = \"black\", linewidth = 1\n  ) +\n  geom_segment(\n    x = 2 - bw, xend = 2 - 1.4 * bw, y = h1 - .472 / 2, yend = h1 - .4,\n    linewidth = .5, color = \"black\"\n  ) +\n  annotate(\"text\",\n    x = 2 - 1.6 * bw, y = h1 - .4, family = \"karla\", size = 12 / .pt, hjust = 1,\n    label = \"Robinhood shares\"\n  ) +\n\n  # Stuff we made up\n  geom_rect(\n    xmin = 2 - bw, xmax = 2 + bw, ymin = h3, ymax = h2,\n    data = df1[1, ], fill = NA, color = \"black\", linewidth = 1\n  ) +\n  geom_segment(\n    x = 2 - bw, xend = 2 - 1.4 * bw, y = h2 - .9, yend = h2 - .76,\n    linewidth = .5, color = \"black\"\n  ) +\n  annotate(\"text\",\n    x = 2 - 1.6 * bw, y = h2 - .6, family = \"karla\", size = 12 / .pt, hjust = 1,\n    label = \"Stuff we made up\"\n  ) +\n\n  # TRUMPLOSE\n  geom_rect(\n    xmin = 2 - .8 * bw, xmax = 2 - .7 * bw, ymin = h4 - 1.15, ymax = h4 - 1,\n    data = df1[1, ], fill = NA, color = \"black\", linewidth = 1\n  ) +\n  geom_segment(\n    x = 2 - .8 * bw, xend = 2 - 1.5 * bw, y = h4 - 1.075, yend = h4 - 1.2,\n    linewidth = .5, color = \"black\"\n  ) +\n  annotate(\"text\",\n    x = 2 - 1.7 * bw, y = h4 - 1.15, family = \"karla\", size = 12 / .pt, hjust = 1,\n    label = \"TRUMPLOSE\"\n  ) +\n\n  # Labels and legend\n  labs(\n    title = \"There were many things I wish I could do differently than I did\",\n    caption = \"Note: all of these are rough values and could be slightly off; there is also obviously a chance of typos etc.\"\n  ) +\n  scale_fill_manual(\n    labels = c(\"Illiquid: $3.2bn\", \"Less liquid: $5.4bn\", \"Liquid: $900mn\", \"\"),\n    values = c(\"#a4b1ff\", \"#6679d8\", \"#1046b1\", \"#d1241a\")\n  ) +\n  scale_x_discrete(labels = c(\"\", \"Assets\\n\\\"$9.6bn\\\"\", \"Liabilities\\n-$8.9bn\", \"\")) +\n  guides(fill = guide_legend(\n    keywidth = unit(.8, \"lines\"),\n    keyheight = unit(.8, \"lines\"),\n    byrow = TRUE,\n    override.aes = list(alpha = c(1, 1, 1, 0))\n  )) +\n\n  # Theme\n  theme_minimal(base_family = \"karla\") +\n  theme(\n    plot.title = element_text(size = 16, face = \"bold\", hjust = .5, margin = margin(b = 10)),\n    plot.caption = element_text(size = 10, hjust = .5, margin = margin(t = 15)),\n    axis.title = element_blank(),\n    axis.text.x = element_text(size = 14, color = \"black\", margin = margin(t = 8)),\n    axis.text.y = element_blank(),\n    axis.ticks = element_blank(),\n    legend.position = c(.02, .45),\n    legend.background = element_blank(),\n    legend.justification = c(0, 1),\n    legend.title = element_blank(),\n    legend.text = element_text(size = 12),\n    legend.spacing.y = unit(.4, \"lines\"),\n    legend.key = element_blank(),\n    panel.background = element_rect(fill = \"gray97\", color = NA),\n    panel.grid = element_blank()\n  )\n\n\n\n\n\nI think this exercise really brings out the “grid” nature of ggplot. It may be painstaking but as long as you can place your rectangle or line or textbox in the x-y coordinate system, you can modify your chart in all sorts of fun ways.\n\n\n\nReusehttps://creativecommons.org/licenses/by/4.0/"
  },
  {
    "objectID": "posts/2022-11-05-wdi/index.html",
    "href": "posts/2022-11-05-wdi/index.html",
    "title": "Exercises in plotting WDI data",
    "section": "",
    "text": "In the old days I used to download WDI datasets in Excel format and point-and-click my way to a neat little chart. Now I want to try using the WDI package and some ggplot wizardry.\n\nlibrary(tidyverse)\nlibrary(ggplot2)\nlibrary(WDI)\n\nTo start, let’s try plotting the GDP per capita of the Philippines and Vietnam in constant 2015 US$.\n\ndf <- WDI(\n  country = c(\"PH\", \"VN\"),\n  indicator = \"NY.GDP.PCAP.KD\",\n  start = 1990\n) %>%\n  as_tibble()\n\nggplot(df, aes(x = year, y = NY.GDP.PCAP.KD, color = country)) +\n  geom_line()\n\n\n\n\nGreat. Now let’s try to get a cleaner chart by removing everything we don’t need: the axis labels, the legend title, the vertical grid lines, the tick marks. Let’s also add a chart title.\n\nggplot(df, aes(x = year, y = NY.GDP.PCAP.KD, color = country)) +\n  geom_line() +\n  labs(title = \"GDP per capita in constant 2015 US$\") +\n  theme(\n    axis.title = element_blank(),\n    axis.ticks = element_blank(),\n    legend.position = \"right\",\n    legend.title = element_blank(),\n    panel.grid.major.x = element_blank(),\n    panel.grid.minor.x = element_blank(),\n    panel.grid.minor.y = element_blank()\n  )\n\n\n\n\nIt’s a serviceable chart, but not a particularly attractive chart. Let’s spend some more time glamming it up. The numbers on the y-axis could use a thousands separator. The plot lines could be a little thicker. We can also make tweaks to the text sizes, the colors, the margins, and so forth.\n\n\nCode\nggplot(df, aes(x = year, y = NY.GDP.PCAP.KD, color = country)) +\n  geom_line(size = 1) +\n  labs(title = \"GDP per capita in constant 2015 US$\") +\n  scale_color_manual(values = c(\"#076fe4\", \"#f2500d\")) +\n  scale_y_continuous(label = function(x) prettyNum(x, big.mark = \",\", scientific = FALSE)) +\n  theme_minimal(base_family = \"karla\") +\n  theme(\n    axis.title = element_blank(),\n    axis.ticks = element_blank(),\n    axis.text.x = element_text(size = 11, margin = margin(5, 0, 0, 0)),\n    axis.text.y = element_text(size = 11, margin = margin(0, 5, 0, 0)),\n    plot.title = element_text(size = 14, hjust = .5, face = \"bold\", margin = margin(0, 0, 10, 0)),\n    legend.position = \"right\",\n    legend.title = element_blank(),\n    legend.text = element_text(size = 12),\n    panel.background = element_rect(fill = \"gray97\", color = NA),\n    panel.grid.major.x = element_blank(),\n    panel.grid.minor.x = element_blank(),\n    panel.grid.minor.y = element_blank()\n  )\n\n\n\n\n\nNow this to me is pleasing to the eye. A document populated with charts like this—as opposed to charts like the first two above—would be much more motivating to read.\nHere’s a second exercise. I think one useful way to categorize countries is according to whether they are big and rich, big and poor, small and rich, or small and poor. We can visualize this in a scatterplot with population on one axis and GDP per capita on the other. Let’s load up the data and plot the scatter.\n\ndf <- WDI(\n  country = \"all\",\n  indicator = c(\n    \"gpc\" = \"NY.GDP.PCAP.KD\",\n    \"pop\" = \"SP.POP.TOTL\"\n  ),\n  start = 2015,\n  end = 2015,\n  extra = TRUE\n) %>%\n  as_tibble() %>%\n  filter(region != \"Aggregates\") %>%\n  select(country, gpc, pop) %>%\n  drop_na()\n\nggplot(df, aes(x = pop, y = gpc)) +\n  geom_point()\n\n\n\n\nWhat an atrocious chart! To make it comprehensible, we’ll need to re-express the axes in log scale first.\n\nggplot(df, aes(x = log10(pop), y = log2(gpc))) +\n  geom_point() +\n  scale_x_continuous(\n    name = \"Population\",\n    breaks = c(log10(10^4), log10(10^5), log10(10^6), log10(10^7), log10(10^8), log10(10^9)),\n    label = c(\"10,000\", \"100,000\", \"1 million\", \"10 million\", \"100 million\", \"1 billion\")\n  ) +\n  scale_y_continuous(\n    name = \"GDP per capita constant 2015 US$\",\n    breaks = c(log2(500), log2(1500), log2(10000), log2(30000)),\n    label = function(x) prettyNum(2^x, big.mark = \",\", scientific = FALSE)\n  )\n\n\n\n\nBetter! Let’s make further tweaks to the colors and so on to make it more attractive. In addition, let’s include some dividing lines to group big, small, rich, and poor countries. Some sensible definitions would be that “big” countries are those with 100 million people and above while “rich” countries are those with GDP per capita of $30,000 and above.\n\n\nCode\nggplot(df, aes(x = log10(pop), y = log2(gpc))) +\n  geom_point(shape = 16, size = 3, color = \"#076fe4\") +\n  labs(title = \"Big and small, rich and poor\") +\n  geom_vline(xintercept = log10(10^8), size = .5, linetype = \"dashed\", color = \"gray50\") +\n  geom_hline(yintercept = log2(30000), size = .5, linetype = \"dashed\", color = \"gray50\") +\n  scale_x_continuous(\n    name = \"Population\",\n    breaks = c(log10(10^4), log10(10^5), log10(10^6), log10(10^7), log10(10^8), log10(10^9)),\n    label = c(\"10,000\", \"100,000\", \"1 million\", \"10 million\", \"100 million\", \"1 billion\")\n  ) +\n  scale_y_continuous(\n    name = \"GDP per capita constant 2015 US$\",\n    breaks = c(log2(500), log2(1500), log2(10000), log2(30000)),\n    label = function(x) prettyNum(2^x, big.mark = \",\", scientific = FALSE)\n  ) +\n  theme(\n    axis.title = element_text(size = 11),\n    axis.title.x = element_text(margin = margin(10, 0, 0, 0)),\n    axis.title.y = element_text(margin = margin(0, 10, 0, 0)),\n    axis.text.x = element_text(size = 10, margin = margin(5, 0, 0, 0)),\n    axis.text.y = element_text(size = 10, margin = margin(0, 5, 0, 0)),\n    axis.ticks = element_blank(),\n    plot.title = element_text(size = 12, hjust = .5, face = \"bold\", margin = margin(0, 0, 10, 0)),\n    panel.background = element_rect(fill = \"gray97\"),\n    panel.grid = element_blank()\n  )\n\n\n\n\n\nAnd here’s the interesting result. Under this set of definitions, there are really only two big and rich countries: the United States and Japan. The biggest small and rich country is Germany, with a population of 82 million, while the richest small and poor country is Mexico, with a GDP per capita of $9,600. In short, no country in the near future is expected to join the big-and-rich club.1\nNow let’s make some finishing touches to the chart. First, let’s add the labels “big”, “small”, “rich”, and “poor” on either side of the dashed lines to make it clear what they’re indicating. Second, let’s bold the axis labels “30,000” and “100 million” to highlight the chosen thresholds for bigness and richness. Third, let’s label the points for the U.S., Japan, Germany, and Mexico to facilitate the discussion accompanying the chart. We also highlight these four points by making all other points transparent.\n\n\nCode\nggplot(df, aes(x = log10(pop), y = log2(gpc))) +\n  geom_point(shape = 16, size = 3, color = \"#076fe4\", alpha = ifelse(df$country %in% c(\"United States\", \"Japan\", \"Germany\", \"Mexico\"), 1, .25)) +\n  labs(title = \"Big and small, rich and poor\") +\n\n  # Dashed lines\n  geom_vline(xintercept = log10(10^8), size = .5, linetype = \"dashed\", color = \"gray50\") +\n  geom_hline(yintercept = log2(30000), size = .5, linetype = \"dashed\", color = \"gray50\") +\n  annotate(\"text\", family = \"karla\", x = log10(10^8) + .1, y = log2(200000), hjust = 0, label = \"big\", size = 3.5, color = \"gray50\") +\n  annotate(\"text\", family = \"karla\", x = log10(10^8) - .1, y = log2(200000), hjust = 1, label = \"small\", size = 3.5, color = \"gray50\") +\n  annotate(\"text\", family = \"karla\", x = log10(10.5^9), y = log2(30000) + .2, vjust = 0, label = \"rich\", size = 3.5, color = \"gray50\") +\n  annotate(\"text\", family = \"karla\", x = log10(10.5^9), y = log2(30000) - .15, vjust = 1, label = \"poor\", size = 3.5, color = \"gray50\") +\n\n  # Highlighted points\n  annotate(\"text\", family = \"karla\", x = log10(df$pop[df$country == \"United States\"]), y = log2(df$gpc[df$country == \"United States\"]) + .4, hjust = 0, vjust = 0, label = \"United States\", size = 3.5, fontface = \"bold\") +\n  annotate(\"text\", family = \"karla\", x = log10(df$pop[df$country == \"Japan\"]) + .1, y = log2(df$gpc[df$country == \"Japan\"]), hjust = 0, vjust = 0, label = \"Japan\", size = 3.5, fontface = \"bold\") +\n  annotate(\"text\", family = \"karla\", x = log10(df$pop[df$country == \"Germany\"]), y = log2(df$gpc[df$country == \"Germany\"]) + .4, hjust = .5, vjust = 0, label = \"Germany\", size = 3.5, fontface = \"bold\") +\n  annotate(\"text\", family = \"karla\", x = log10(df$pop[df$country == \"Mexico\"]), y = log2(df$gpc[df$country == \"Mexico\"]) + .4, hjust = .5, vjust = 0, label = \"Mexico\", size = 3.5, fontface = \"bold\") +\n  scale_x_continuous(\n    name = \"Population\",\n    breaks = c(log10(10^4), log10(10^5), log10(10^6), log10(10^7), log10(10^8), log10(10^9)),\n    label = c(\"10,000\", \"100,000\", \"1 million\", \"10 million\", \"100 million\", \"1 billion\")\n  ) +\n  scale_y_continuous(\n    name = \"GDP per capita constant 2015 US$\",\n    breaks = c(log2(500), log2(1500), log2(10000), log2(30000)),\n    label = function(x) prettyNum(2^x, big.mark = \",\", scientific = FALSE)\n  ) +\n  theme_minimal(base_family = \"karla\") +\n  theme(\n    axis.title.x = element_text(size = 12, margin = margin(10, 0, 0, 0)),\n    axis.title.y = element_text(size = 12, margin = margin(0, 10, 0, 0)),\n    axis.text.x = element_text(size = 11, margin = margin(5, 0, 0, 0), face = c(\"plain\", \"plain\", \"plain\", \"plain\", \"bold\", \"plain\")),\n    axis.text.y = element_text(size = 11, margin = margin(0, 5, 0, 0), face = c(\"plain\", \"plain\", \"plain\", \"bold\")),\n    axis.ticks = element_blank(),\n    plot.title = element_text(size = 14, hjust = .5, face = \"bold\", margin = margin(0, 0, 10, 0)),\n    panel.background = element_rect(fill = \"gray97\", color = NA),\n    panel.grid = element_blank()\n  )\n\n\n\n\n\nAnd here’s the final chart!\n\n\n\n\nFootnotes\n\n\nNot that this should be taken too seriously! The thresholds I used are completely arbitrary.↩︎\n\nReusehttps://creativecommons.org/licenses/by/4.0/"
  },
  {
    "objectID": "posts/2022-11-19-the-emotional-shape-of-novels/index.html",
    "href": "posts/2022-11-19-the-emotional-shape-of-novels/index.html",
    "title": "The emotional shape of novels",
    "section": "",
    "text": "Novels can take you for such a ride.\nToday I’m experimenting with sentiment analysis on some novels I’ve recently read. I’ll be using tidytext with data from gutenbergr (i.e. Project Gutenberg), which means I’m restricted to the classics. I read three this year: Swann’s Way by Marcel Proust, Tess of the d’Urbervilles by Thomas Hardy, and The Age of Innocence by Edith Wharton.\nQuick review of each. (1) It takes a certain mood to be reading Proust. I got through Within a Budding Grove but found halfway through that oops I’m not in the mood anymore, so I stopped searching for that lost time. (2) While I enjoyed Hardy’s Far from the Madding Crowd, Tess was such an unrelenting depression parade that I was feeling numb by the end of it. (3) Ah, Age of Innocence is one of my all-time favorites. I have been, at various points in my life, Newland, Ellen, and May. My God, I might have even been a Julius Beaufort.\nLet’s load up these works.\n\nlibrary(tidyverse)\nlibrary(tidytext)\nlibrary(gutenbergr)\n\n# Get the IDs\ngutenberg_works(title %in% c(\n  \"Swann's Way\",\n  \"Tess of the d'Urbervilles: A Pure Woman\",\n  \"The Age of Innocence\"\n))\n\n# A tibble: 3 × 8\n  gutenberg_id title               author guten…¹ langu…² guten…³ rights has_t…⁴\n         <int> <chr>               <chr>    <int> <chr>   <chr>   <chr>  <lgl>  \n1          110 Tess of the d'Urbe… Hardy…      23 en      Banned… Publi… TRUE   \n2          541 The Age of Innocen… Whart…     104 en      Movie … Publi… TRUE   \n3         7178 Swann's Way         Prous…     987 en      <NA>    Publi… TRUE   \n# … with abbreviated variable names ¹​gutenberg_author_id, ²​language,\n#   ³​gutenberg_bookshelf, ⁴​has_text\n\nbooks <- gutenberg_download(c(110, 541, 7178)) %>%\n  filter(text != \"\") %>%\n  group_by(gutenberg_id) %>%\n  mutate(line = row_number()) %>%\n  ungroup() %>%\n  left_join(tibble(\n    gutenberg_id = c(110, 541, 7178),\n    title = c(\n      \"Tess of the d'Urbervilles\",\n      \"The Age of Innocence\",\n      \"Swann's Way\"\n    )\n  )) %>%\n  select(title, line, text)\n\nLines refer to lines on the printed page. What I want to do is split each work into 100 equal sized groups of lines, quantify the sentiment of each, and map the emotional shape of the novel. I’m using the AFINN lexicon, which assigns a score between -5 and 5 to about 2500 English words. More negative scores imply more negative sentiments, and vice nersa.\nThe following code breaks up the works so that each row corresponds to one word. Uninteresting words like “the” are removed with anti_join(stop_words). The remaining words are then assigned a sentiment score according to AFINN.\n\nbooks_df <- books %>%\n  unnest_tokens(word, text) %>%\n  anti_join(stop_words) %>%\n  inner_join(get_sentiments(\"afinn\"))\n\nLet’s try it out first with Tess. It has 13,776 lines, so I split it into 100 chunks of 138 lines.\n\n\nCode\nlibrary(ggplot2)\n\ntess <- books_df %>%\n  filter(title == \"Tess of the d'Urbervilles\") %>%\n  group_by(chunk = line %/% 138) %>%\n  summarise(sentiment = sum(value))\n\nggplot(tess, aes(x = chunk, y = sentiment)) +\n  geom_bar(stat = \"identity\")\n\n\n\n\n\nIt worked! But the chart is ugly! The problem is that net sentiment swings so wildly up and down from chunk to chunk that the result looks more like a seismograph than the “shape” of the novel.\nLet’s try a different approach. When you read a chapter and it’s a happy one, you enter the next chapter starting from a position of positive sentiment. Then maybe the next chapter is a sad one, so it brings down your overall sentiment back to something like neutral. The point is, the emotional weight of a novel builds, it doesn’t reset every chapter. Working off this idea, let’s try and map cumulative sentiment across the novel instead of the isolated sentiment of each chunk.\nThe chart that works best for this is a waterfall chart, for which the waterfalls package will be helpful.\n\nlibrary(waterfalls)\n\ntess <- tess %>%\n  mutate(\n    chunk = factor(chunk),\n    fill = ifelse(sentiment >= 0, \"#1046b1\", \"#d1241a\")\n  )\n\nwf <- waterfall(tess,\n  rect_width = 1,\n  rect_border = NA,\n  rect_text_labels = rep(NA, nrow(tess)),\n  draw_axis.x = \"none\",\n  fill_by_sign = FALSE,\n  fill_colours = tess$fill\n) +\n  geom_hline(yintercept = 0, color = \"gray50\", size = .5, linetype = \"dashed\") +\n  scale_y_continuous(name = \"Sentiment (AFINN lexicon)\") +\n  theme_minimal(base_family = \"karla\") +\n  theme(\n    axis.title = element_blank(),\n    axis.title.x = element_blank(),\n    axis.title.y = element_text(size = 12, margin = margin(r = 10)),\n    axis.text.x = element_blank(),\n    axis.text.y = element_text(size = 12),\n    axis.ticks = element_blank(),\n    panel.background = element_rect(fill = \"gray97\", color = NA),\n    panel.grid.major = element_blank(),\n    panel.grid.minor = element_blank()\n  )\n\nwf\n\n\n\n\nNow the shape is more discernible. You can see the ups and downs of Tess’ life (it’s mostly downs). By the end of the book, you are at about a -600 sentiment score.\nFor a bit of extra fanciness let’s annotate the chart with the book’s title, author, and cover, the last one taken from Goodreads.\n\nlibrary(cowplot)\nlibrary(magick)\n\nggdraw(wf) +\n  draw_image(\"https://i.gr-assets.com/images/S/compressed.photo.goodreads.com/books/1543250144l/42959097._SY475_.jpg\",\n    x = .15, y = .1, halign = 0, valign = 0, scale = .4\n  ) +\n  draw_label(\"Tess of the d'Urbervilles\",\n    x = .15 + .18, y = .1 + .16, hjust = 0, vjust = .5,\n    size = 14, fontfamily = \"karla\", fontface = \"bold\"\n  ) +\n  draw_label(\"by Thomas Hardy\",\n    x = .15 + .18, y = .1 + .10, hjust = 0, vjust = .5,\n    size = 12, fontfamily = \"karla\"\n  )\n\n\n\n\nLet’s do the same for The Age of Innocence.\n\n\nCode\nage <- books_df %>%\n  filter(title == \"The Age of Innocence\") %>%\n  group_by(chunk = line %/% 94) %>%\n  summarise(sentiment = sum(value)) %>%\n  mutate(\n    chunk = factor(chunk),\n    fill = ifelse(sentiment >= 0, \"#1046b1\", \"#d1241a\")\n  )\n\nwf <- waterfall(age,\n  rect_width = 1,\n  rect_border = NA,\n  rect_text_labels = rep(NA, nrow(age)),\n  draw_axis.x = \"none\",\n  fill_by_sign = FALSE,\n  fill_colours = age$fill\n) +\n  geom_hline(yintercept = 0, color = \"gray50\", size = .5, linetype = \"dashed\") +\n  scale_y_continuous(name = \"Sentiment (AFINN lexicon)\") +\n  theme_minimal(base_family = \"karla\") +\n  theme(\n    axis.title = element_blank(),\n    axis.title.x = element_blank(),\n    axis.title.y = element_text(size = 12, margin = margin(0, 10, 0, 0)),\n    axis.text.x = element_blank(),\n    axis.text.y = element_text(size = 11),\n    axis.ticks = element_blank(),\n    panel.background = element_rect(fill = \"gray97\", color = NA),\n    panel.grid.major = element_blank(),\n    panel.grid.minor = element_blank()\n  )\n\nggdraw(wf) +\n  draw_image(\"https://i.gr-assets.com/images/S/compressed.photo.goodreads.com/books/1320402548l/545294.jpg\",\n    x = .53, y = .18, halign = 0, valign = 0, scale = .4\n  ) +\n  draw_label(\"The Age of Innocence\",\n    x = .53 + .18, y = .18 + .16, hjust = 0, vjust = .5,\n    size = 14, fontfamily = \"karla\", fontface = \"bold\"\n  ) +\n  draw_label(\"by Edith Wharton\",\n    x = .53 + .18, y = .18 + .10, hjust = 0, vjust = .5,\n    size = 12, fontfamily = \"karla\"\n  )\n\n\n\n\n\nIt’s a reasonably happy ride for the first half of the novel as we follow Madame Olenska’s disruptions of the self-satisfied New York upper-class society of the 19th century. The turning point is right about where Newland Archer decides not to call her from up the hill. There’s a steady descent as passions clash with idealistic notions of the world before ending on a bittersweet note. You end the book on a net positive, and all in all I’d say that makes sense.\nFinally, here is Swann’s Way.\n\n\nCode\nswann <- books_df %>%\n  filter(title == \"Swann's Way\") %>%\n  group_by(chunk = line %/% 159) %>%\n  summarise(sentiment = sum(value)) %>%\n  mutate(\n    chunk = factor(chunk),\n    fill = ifelse(sentiment >= 0, \"#1046b1\", \"#d1241a\")\n  )\n\nwf <- waterfall(swann,\n  rect_width = 1,\n  rect_border = NA,\n  rect_text_labels = rep(NA, nrow(swann)),\n  draw_axis.x = \"none\",\n  fill_by_sign = FALSE,\n  fill_colours = swann$fill\n) +\n  geom_hline(yintercept = 0, color = \"gray50\", size = .5, linetype = \"dashed\") +\n  scale_y_continuous(name = \"Sentiment (AFINN lexicon)\") +\n  theme_minimal(base_family = \"karla\") +\n  theme(\n    axis.title = element_blank(),\n    axis.title.x = element_blank(),\n    axis.title.y = element_text(size = 12, margin = margin(0, 10, 0, 0)),\n    axis.text.x = element_blank(),\n    axis.text.y = element_text(size = 11),\n    axis.ticks = element_blank(),\n    panel.background = element_rect(fill = \"gray97\", color = NA),\n    panel.grid.major = element_blank(),\n    panel.grid.minor = element_blank()\n  )\n\nggdraw(wf) +\n  draw_image(\"https://i.gr-assets.com/images/S/compressed.photo.goodreads.com/books/1657565006l/133539._SY475_.jpg\",\n    x = .15, y = .3, halign = 0, valign = 0, scale = .4\n  ) +\n  draw_label(\"Swann's Way\",\n    x = .15 + .18, y = .3 + .16, hjust = 0, vjust = .5,\n    size = 14, fontfamily = \"karla\", fontface = \"bold\"\n  ) +\n  draw_label(\"by Marcel Proust\",\n    x = .15 + .18, y = .3 + .10, hjust = 0, vjust = .5,\n    size = 12, fontfamily = \"karla\"\n  )\n\n\n\n\n\nThis one surprised me. Odette’s unending torment of Swann didn’t strike me as particularly happy? I guess this demonstrates the limitations of literal-minded approaches to coding sentiments. If the work is heavy on irony, a word-based lexicon like AFINN wouldn’t really be able to catch that.\n\n\n\nReusehttps://creativecommons.org/licenses/by/4.0/"
  },
  {
    "objectID": "posts/2023-03-03-nobel/index.html",
    "href": "posts/2023-03-03-nobel/index.html",
    "title": "The demographics of Nobel laureates",
    "section": "",
    "text": "In a previous post, we talked about the Oscars and whether prestige awards still matter. Let’s turn now to what is perhaps the mother of all prestige awards — the Nobel Prize. The legacy of Swedish industrialist Alfred Nobel, it honors outstanding achievement in the fields of chemistry, literature, medicine, peace, physics, and, since 1969, economics. Winners — ahem, laureates — receive unparalleled stature not just in their fields but in the public sphere (deservedly or otherwise).\nIn its 120-year history, close to a thousand individuals (and some two dozen organizations) have been given a Nobel. What are they like? As an elite group, you can probably guess that they would tend towards oldness, whiteness, and maleness. But how old, how white, and how male? Fortunately, NobelPrize.org has an API for downloading data on all laureates, through which I was able to compile, for each laureate: the year and category they won in, their sex, their birth date, and their birth country (using modern borders). I won’t be including organizations in my analysis.\nLet’s take a look at the cleaned dataset using reactable, a wonderful table-making package by Greg Lin that I sure wish I discovered earlier. Below is a sortable, searchable, paginated table of the complete dataset:\n\n\nCode\nlibrary(tidyverse)\nlibrary(reactable)\n\nnobel <- here::here(\"datasets\", \"nobel.csv\") %>% \n  read_csv()\n\nnobel %>%\n  reactable(\n    defaultColDef = colDef(\n      align = \"center\",\n      headerStyle = list(fontFamily = \"Karla\", background = \"#f7f7f8\"),\n      sortNALast = TRUE\n    ),\n    columns = list(\n      year = colDef(minWidth = 75),\n      category = colDef(minWidth = 125, align = \"left\"),\n      type = colDef(minWidth = 125),\n      name = colDef(minWidth = 250, align = \"left\"),\n      birth = colDef(minWidth = 150),\n      age = colDef(minWidth = 75),\n      birth_country = colDef(minWidth = 175, align = \"left\"),\n      birth_continent = colDef(minWidth = 175, align = \"left\")\n    ),\n    minRows = 5,\n    searchable = TRUE,\n    bordered = TRUE,\n    highlight = TRUE,\n    theme = reactableTheme(\n      searchInputStyle = list(align = \"left\")\n    )\n  )\n\n\n\n\n\n\n\nOf the three attributes, being old is probably the most innocent. A Nobel Prize after all generally honors a body of work, and so is received late in one’s career. Below is a tabulation of laureate age ranges by prize category.\n\n\nCode\nnobel %>%\n  group_by(category) %>%\n  mutate(\n    coverage = paste0(min(year), \"-\", max(year)),\n    agemin = min(age, na.rm = TRUE),\n    agemax = max(age, na.rm = TRUE),\n    agemean = mean(age, na.rm = TRUE)\n  ) %>%\n  group_by(category, coverage, agemin, agemax, agemean) %>%\n  count() %>%\n  select(category, coverage, laureates = n, agemin, agemax, agemean) %>%\n  \n  # Construct reactable\n  reactable(\n    defaultColDef = colDef(\n      align = \"center\",\n      format = colFormat(digits = 0),\n      headerStyle = list(fontFamily = \"Karla\", background = \"#f7f7f8\"),\n      sortNALast = TRUE\n    ),\n    columns = list(category = colDef(align = \"left\")),\n    bordered = TRUE,\n    highlight = TRUE\n  )\n\n\n\n\n\n\n\nThe youngest laureate was for Peace — Malala Yousafzai from Pakistan. Peace is unusual among the Nobel prizes: while it is also awarded for a body of work, it can get quite topical, awarding very recent achievements. Barack Obama was just eight months into his presidency when he was awarded for “extraordinary efforts to strengthen international diplomacy and cooperation between peoples”. This willingness to jump the gun has led to some deeply awkward conferrals, most recently Ethiopian prime minister Abiy Ahmed, who started a war against his own people less than a year after bagging the prize.\nWhat might be more surprising in the table above is the youngest age among the Physics laureates. Someone under 40 winning a Nobel in the sciences fields (or even in Literature) is unheard of today, but it was more common during the heyday of theoretical physics in the early twentieth century, when discoveries in quantum mechanics were being made left and right.1 Indeed, the changing nature of scientific research can be seen in the chart below, which plots the average ages of laureates over time.\n\n\nCode\nlibrary(zoo)\nlibrary(ggplot2)\n\nnobel %>%\n  group_by(category) %>%\n  mutate(agemean_ra = rollmean(age, k = 10, fill = NA, align = \"right\", na.rm = TRUE)) %>%\n  ungroup() %>%\n  \n  ggplot(aes(x = year, y = agemean_ra)) +\n  geom_line(linewidth = .8, color = \"#b13d70\") +\n  facet_wrap(~category, nrow = 2, scales = \"fixed\") +\n  labs(\n    title = \"Some people wait a lifetime\",\n    subtitle = \"Laureates' average age by category, 10-year rolling\",\n    caption = \"Source: Nobel Foundation\"\n  ) +\n  scale_x_continuous(limits = c(1910, 2022), breaks = c(1960, 2020)) +\n  scale_y_continuous(breaks = c(50, 70)) +\n  theme(\n    text = element_text(family = \"karla\"),\n    axis.title = element_blank(),\n    axis.ticks = element_blank(),\n    axis.text = element_text(size = 10),\n    panel.background = element_rect(fill = \"gray97\", color = NA),\n    panel.grid.major.x = element_blank(),\n    panel.grid.major.y = element_line(linewidth = .15, linetype = \"dashed\", color = \"gray60\"),\n    panel.grid.minor.x = element_blank(),\n    panel.grid.minor.y = element_blank(),\n    plot.title = element_text(size = 16, face = \"bold\", hjust = .5),\n    plot.subtitle = element_text(size = 14, hjust = .5, margin = margin(b = 12)),\n    plot.caption = element_text(size = 8, hjust = 0, margin = margin(t = 10)),\n    strip.background = element_rect(fill = \"gray92\", color = NA),\n    strip.text = element_text(size = 12, face = \"bold\", color = \"gray40\")\n  )\n\n\n\n\n\nLaureates in the sciences fields have been getting older. According to a curator at the Nobel Museum, this is partly a crowding effect: whereas 1,000 physicists were competing for the prize 100 years ago, today there are a million. With the Nobel only awarding up to three for a given category each year, would-be laureates need to wait longer for their turn.\nIt will likely get more crowded still. Achievements in science and literature are driven not just by personal genius but also by an enabling environment that nurtures that genius, itself a function of economic wealth. No wonder then that the richest countries — the United States, Europe, and European offshoots (Australia, Canada, New Zealand) — dominate the Nobel Prizes. This should change as developing countries catch up and begin investing more heavily in their scientists and artists.\n\n\nCode\nnobel %>%\n  mutate(\n    group = case_when(\n      birth_continent == \"Europe\" ~ \"Europe & offshoots\",\n      birth_country == \"USA\" ~ \"United States\",\n      birth_continent == \"North America\" ~ \"Americas\",\n      birth_continent == \"South America\" ~ \"Americas\",\n      birth_country == \"Canada\" ~ \"Europe & offshoots\",\n      birth_country == \"Australia\" ~ \"Europe & offshoots\",\n      birth_country == \"New Zealand\" ~ \"Europe & offshoots\",\n      birth_country == \"East Timor\" ~ \"Asia\",\n      TRUE ~ birth_continent\n    ),\n    group = factor(\n      group, \n      levels = c(\n        \"United States\",\n        \"Europe & offshoots\",\n        \"Africa\",\n        \"Americas\",\n        \"Asia\"\n      )),\n    decade = plyr::round_any(year, 10, floor)\n  ) %>% \n  group_by(decade, category) %>%\n  count(group) %>%\n  ungroup() %>%\n  \n  ggplot(aes(x = decade, y = n, fill = group)) +\n  geom_bar(position = \"fill\", stat = \"identity\", color = NA) +\n  facet_wrap(~category, nrow = 2, scales = \"fixed\") +\n  labs(\n    title = \"Western win\",\n    subtitle = \"Laureates' country of birth under contemporary borders, by decade\",\n    caption = \"Source: Nobel Foundation\"\n  ) +\n  scale_x_continuous(breaks = c(1950, 2020)) +\n  scale_fill_manual(\n    name = \"\",\n    values = c(\"#4889ab\", \"#84b0c5\", \"#f697bb\", \"#c85b89\", \"#b13d70\")\n  ) +\n  guides(fill = guide_legend(nrow = 2)) +\n  theme(\n    text = element_text(family = \"karla\"),\n    axis.title = element_blank(),\n    axis.ticks = element_blank(),\n    axis.text.x = element_text(size = 10, hjust = .5),\n    axis.text.y = element_blank(),\n    legend.position = \"bottom\",\n    legend.text = element_text(size = 12, margin = margin(r = 10)),\n    panel.background = element_rect(fill = \"gray97\", color = NA),\n    panel.grid = element_blank(),\n    plot.title = element_text(size = 16, face = \"bold\", hjust = .5),\n    plot.subtitle = element_text(size = 14, hjust = .5, margin = margin(b = 12)),\n    plot.caption = element_text(size = 8, hjust = 0, margin = margin(t = 10)),\n    strip.background = element_rect(fill = \"gray92\", color = NA),\n    strip.text = element_text(size = 12, face = \"bold\", color = \"gray40\")\n  )\n\n\n\n\n\nLikewise, the greater participation of women in STEM fields should hopefully go some ways in bridging the sex gap among laureates. My field of economics has a particularly atrocious record, with just two female laureates (Elinor Ostrom and Esther Duflo) in 54 years.2 Literature has made the most progress here, though women still only won one-third of the prizes since 2000.\n\n\nCode\nnobel %>%\n  mutate(decade = plyr::round_any(year, 10, floor)) %>%\n  drop_na(sex) %>%\n  group_by(decade, category) %>%\n  count(sex) %>%\n  mutate(share = n / sum(n)) %>% \n  ungroup() %>%\n  complete(decade, category, sex, fill = list(n = 0, share = 0)) %>% \n  filter(sex == \"female\" & !(category == \"Economics\" & decade < 1960)) %>% \n  \n  ggplot(aes(x = decade, y = share)) +\n  geom_step(direction = \"mid\", linewidth = 1, color = \"#b13d70\") +\n  facet_wrap(~category, nrow = 2, scales = \"fixed\") +\n  labs(\n    title = \"The second sex\",\n    subtitle = \"Share of female laureates, by decade\",\n    caption = \"Source: Nobel Foundation\"\n  ) +\n  scale_x_continuous(breaks = c(1950, 2020)) +\n  scale_y_continuous(limits = c(-.1, .8), breaks = c(0, .5), labels = scales::label_percent()) +\n  theme(\n    text = element_text(family = \"karla\"),\n    axis.title = element_blank(),\n    axis.ticks = element_blank(),\n    axis.text = element_text(size = 10),\n    legend.position = \"bottom\",\n    legend.text = element_text(size = 12, margin = margin(r = 10)),\n    panel.background = element_rect(fill = \"gray97\", color = NA),\n    panel.grid.major.x = element_blank(),\n    panel.grid.major.y = element_line(linewidth = .15, linetype = \"dashed\", color = \"gray60\"),\n    panel.grid.minor.x = element_blank(),\n    panel.grid.minor.y = element_blank(),\n    plot.title = element_text(size = 16, face = \"bold\", hjust = .5),\n    plot.subtitle = element_text(size = 14, hjust = .5, margin = margin(b = 12)),\n    plot.caption = element_text(size = 8, hjust = 0, margin = margin(t = 10)),\n    strip.background = element_rect(fill = \"gray92\", color = NA),\n    strip.text = element_text(size = 12, face = \"bold\", color = \"gray40\")\n  )\n\n\n\n\n\nBeyond problems of representation in the arts and sciences, another major issue is the composition of the prize selection committees themselves. These comprise just a handful of elite Swedes and Norwegians, and though they ostensibly solicit nominations from thousands of outside experts and institutions, theirs is the final say, in deliberations that are kept secret for 50 years. And insularity may not even be their biggest problem: a sexual assault scandal in 2017 hinted at moral bankruptcy within the Swedish Academy, which decides the Literature Prize.\nNo doubt the Nobel Prizes are held in high reverence around the world, but I suspect it has more to do with the distinction of the men and women who have received them in the past than the esteem held for the judgment of a few elite Scandinavians. As a hilarious corrective to Nobel worship, let’s turn to Bob Dylan, winner of the 2016 Literature Prize, who seenzoned the Swedish Academy, didn’t bother to attend the ceremony, and cribbed off SparkNotes for his Nobel lecture. I know Dylan was a controversial choice, but look: anyone who accepts a Nobel in a hoodie deserves ten of them. \n\n\n\n\nFootnotes\n\n\nKey winners under 40 include Werner Heisenberg (31), Paul Dirac (31), Enrico Fermi (37), and Niels Bohr (37). This period in physics is covered in one of my favorite books, The Making of the Atomic Bomb by Richard Rhodes.↩︎\nA 2019 symposium by the American Economic Association on “Women in Economics” has three interesting papers on the topic. But speaking to economics’ legendary tone-deafness, it was followed by a symposium on “The Problems of Men”.↩︎\n\nReusehttps://creativecommons.org/licenses/by/4.0/"
  },
  {
    "objectID": "posts/2022-11-10-dual-wield/index.html",
    "href": "posts/2022-11-10-dual-wield/index.html",
    "title": "Should you dual wield y axes?",
    "section": "",
    "text": "Consider this: all charts are essentially squiggles on a Cartesian plane. There’s a horizontal, or x, axis and there’s a vertical, or y, axis. This implies that the underlying datasets ever only need two columns, corresponding to the two axes. Many chart enthusiasts seem to be guided by this principle, which is why they detest charts that violate this setup, like pie charts.\nAnother chart that maybe violates this setup are those with two different y axes, or dual axis charts. These are very popular. Today, Planning Secretary Arsenio Balisacan accompanied his tweet on the Philippine third quarter GDP numbers with this chart:\n\n\n\n\n\n\n\n      \n\n\n\n\n\nWhat’s wrong with it?\nThe first problem is that there isn’t really a reason why it has to be a dual axis chart at all. The level of real GDP is not meaningful to most people and visualizing it doesn’t provide much insight.\nThe second problem is that it’s sloppily made. In the legend, “Real GDP” (the bars) is on the left and “GDP growth” (the line) is on the right, so the natural inclination is to use the left axis for the bars and the right axis for the line. But woe to you if you do—the positions are reversed. This is because for “combo charts” in Excel (i.e. where you combine two chart types), bar layers always go first before lines, hence they are listed first in the legend.1 But you can choose which axis the bar series is assigned to, so it should have been assigned to the left one.\nMore importantly: the two axes clash. Look at 5.0 on the left axis. If you follow the grid line all the way to the right axis, you get… 4.something. You quickly realize that the grid lines really just mark the axis labels on the left, not the right. The right axis exists in its own parallel grid in the nether regions of the chart. That’s confusing! This is again a trait of Excel. If you tick the check box that puts a series on the secondary axis, it automatically scales its axis independent of the primary axis. So you basically end up with two charts sharing the same x axis superimposed on top of each other.\nBelow is my own quick fix of the chart (data source here).\n\n\nCode\nlibrary(tidyverse)\nlibrary(tsibble)\nlibrary(ggplot2)\n\nhere::here(\"datasets\", \"phgdp.csv\") %>% \n  read_csv() %>%\n  mutate(\n    date = as.Date(date, format = \"%d/%m/%Y\"),\n    quarter = yearquarter(date),\n    qtr = as.character(quarter),\n    growth = 100 * (gdp / lag(gdp, 4) - 1)\n  ) %>% \n  filter(date >= \"2019-03-01\") %>% \n  \n  ggplot() +\n  geom_bar(aes(x = qtr, y = gdp / 1000000, fill = \"LHS - Real GDP (in constant 2018 trillion pesos)\"), stat = \"identity\", width = .5) +\n  geom_line(aes(x = qtr, y = growth / 5 + 4, color = \"RHS - GDP growth (in %)\"), group = 1, linewidth = 1.5) +\n  geom_point(aes(x = qtr, y = growth / 5 + 4, color = \"RHS - GDP growth (in %)\", line = \"RHS - GDP growth (in %)\"), size = 3.5) +\n  geom_hline(yintercept = 0, size = .25, color = \"gray25\") +\n  scale_fill_manual(values = \"#fcc954\") +\n  scale_color_manual(values = \"#0b3f90\") +\n  guides(fill = guide_legend(order = 1)) +\n  scale_y_continuous(\n    limits = c(0, 7), breaks = 0:7,\n    sec.axis = sec_axis(~ (. - 4) * 5, breaks = seq(-20, 15, 5))\n  ) +\n  theme(\n    axis.title = element_blank(),\n    axis.text.x = element_text(size = 12, angle = 90, margin = margin(-3, 0, 0, 0)),\n    axis.text.y = element_text(size = 12, margin = margin(0, 5, 0, 0)),\n    axis.ticks = element_blank(),\n    legend.position = \"top\",\n    legend.title = element_blank(),\n    legend.key = element_blank(),\n    legend.key.height = unit(.75, \"lines\"),\n    legend.key.width = unit(1.5, \"lines\"),\n    legend.text = element_text(size = 12),\n    panel.background = element_blank(),\n    panel.grid.major.x = element_blank(),\n    panel.grid.major.y = element_line(size = .25, color = \"gray85\"),\n    panel.grid.minor.x = element_blank(),\n    panel.grid.minor.y = element_blank()\n  )\n\n\n\n\n\nThere’s still one last problem with this chart, which is that the right y axis really ought to cross the x axis at zero. Positive growth rates fundamentally differ from negative growth rates, but a quick glance at the chart gives the impression that Philippine growth just took a dip in 2020. But! If you cross the right y axis at zero, the left y axis will have to extend to the negative numbers. This would make no sense for GDP. So there’s the dilemma: one y axis ends up compromising the other. I don’t know if there’s a way to fix this.\nI personally don’t have anything against dual axis charts, and I have used them a lot in my work. What I am against are sloppily made charts, and perhaps, by being inherently more complex, sloppiness in dual axis charts tends to be extra noticeable.\nOne essential to keep in mind is that both y axes must coexist in the same Cartesian plane, meaning one is just a transformation of the other. In the chart I made, \\(y_{\\text{right}} = ( y_{\\text{left}} - 4 ) \\times 5\\). This is something you manually have to specify in ggplot, making it harder to make dual axis charts there. But that’s by design. Excel makes it too easy, and so you get people hitting that secondary axis check box and calling it a day.\n\n\n\n\nFootnotes\n\n\nFor some reason, Excel is adamant that you should never be able to change the order of chart layers, or the order of legend items.↩︎\n\nReusehttps://creativecommons.org/licenses/by/4.0/"
  },
  {
    "objectID": "posts/2023-02-14-standard-age/index.html",
    "href": "posts/2023-02-14-standard-age/index.html",
    "title": "The standard age",
    "section": "",
    "text": "A super spy races to stop terrorists from bombing a national landmark. A dour careerist falls in love with a reckless bohemian. A genius overcomes a disability to make revolutionary discoveries. A dorky scientist gains superpowers after a lab accident. When you picture these movie plots in your head, how old do you make the protagonist out to be?\nWe all have a sense of what the age of a “standard” adult is—the age when someone is neither too young nor too old, neither juvenile nor decaying, neither coming nor going. The age that a generic protagonist ought to be for a generic popcorn flick.\nWhat is this age? We can get an idea by looking at the actual ages of actors cast in mainstream movies. For this, I use the Hollywood Age Gap dataset featured in this week’s TidyTuesday. We load it up as follows:\n\nlibrary(tidytuesday)\nage_gaps <- tidytuesdayR::tt_load(2023, week = 7)$age_gaps\n\nIt contains actors’ ages for movies where they are part of a romantic couple. The dataset highlights the often egregious age gaps between men and their female love interests. For example, here is Humphrey Bogart:\n\nlibrary(tidyverse)\n\nage_gaps %>%\n  filter(actor_1_name == \"Humphrey Bogart\") %>%\n  select(movie_name, release_year, actor_1_name, actor_1_age, actor_2_name, actor_2_age, age_difference) %>%\n  knitr::kable(align = \"lclclcc\")\n\n\n\n\n\n\n\n\n\n\n\n\n\nmovie_name\nrelease_year\nactor_1_name\nactor_1_age\nactor_2_name\nactor_2_age\nage_difference\n\n\n\n\nSabrina\n1954\nHumphrey Bogart\n55\nAudrey Hepburn\n25\n30\n\n\nBeat the Devil\n1953\nHumphrey Bogart\n54\nGina Lollobrigida\n26\n28\n\n\nDark Passage\n1947\nHumphrey Bogart\n48\nLauren Bacall\n23\n25\n\n\nKey Largo\n1948\nHumphrey Bogart\n49\nLauren Bacall\n24\n25\n\n\nThe Big Sleep\n1946\nHumphrey Bogart\n47\nLauren Bacall\n22\n25\n\n\nTo Have and Have Not\n1944\nHumphrey Bogart\n45\nLauren Bacall\n20\n25\n\n\nIn a Lonely Place\n1950\nHumphrey Bogart\n51\nGloria Grahame\n27\n24\n\n\nCasablanca\n1942\nHumphrey Bogart\n43\nIngrid Bergman\n27\n16\n\n\nThe African Queen\n1951\nHumphrey Bogart\n52\nKatharine Hepburn\n44\n8\n\n\n\n\n\n“Here’s looking at you kid” indeed.\nBut my focus right now is solely on the actors’ ages, so I reconfigure the dataset as follows:\n\ndf1 <- age_gaps %>%\n  select(movie_name:director,\n    actor = actor_1_name,\n    character_gender = character_1_gender,\n    actor_birthdate = actor_1_birthdate,\n    actor_age = actor_1_age\n  )\n\ndf2 <- age_gaps %>%\n  select(movie_name:director,\n    actor = actor_2_name,\n    character_gender = character_2_gender,\n    actor_birthdate = actor_2_birthdate,\n    actor_age = actor_2_age\n  )\n\ndf <- df1 %>%\n  bind_rows(df2) %>%\n  distinct() %>%\n  arrange(movie_name, actor_age)\n\ndf %>%\n  head() %>%\n  select(-director) %>%\n  knitr::kable(align = \"lcllcc\")\n\n\n\n\n\n\n\n\n\n\n\n\nmovie_name\nrelease_year\nactor\ncharacter_gender\nactor_birthdate\nactor_age\n\n\n\n\n10 Things I Hate About You\n1999\nJoseph Gordon-Levitt\nman\n1981-02-17\n18\n\n\n10 Things I Hate About You\n1999\nJulia Stiles\nwoman\n1981-03-28\n18\n\n\n10 Things I Hate About You\n1999\nLarisa Oleynik\nwoman\n1981-06-07\n18\n\n\n10 Things I Hate About You\n1999\nHeath Ledger\nman\n1979-04-24\n20\n\n\n13 Going on 30\n2004\nJennifer Garner\nwoman\n1972-04-17\n32\n\n\n13 Going on 30\n2004\nMark Ruffalo\nman\n1967-11-22\n37\n\n\n\n\n\nThis gives 2,103 entries on 1,031 unique actors. Because this was originally a couples dataset, there is an even split between men and women. It’s worth pointing out that the dataset seems to have been collected rather haphazardly. It’s mostly American films, though there are occasional foreign inclusions like Blue Is the Warmest Colour. For some reason, only five films each are included for 2020, 2021, and 2022—this may have a bearing on the decade medians I compute below. Major films of the last three years like Tenet, Spider-Man: No Way Home, Shang-Chi, F9, and The Batman are inexplicably omitted.\nWith those limitations in mind, let’s see what the data say. Here is a histogram of actors’ ages, grouped by sex:\n\n\nCode\nlibrary(ggplot2)\n\ndf %>%\n  ggplot(aes(x = actor_age, fill = character_gender)) +\n  geom_histogram(binwidth = 1, position = \"identity\", color = \"gray97\", alpha = .6) +\n\n  # Labels\n  labs(\n    title = \"The wonder years\",\n    subtitle = \"Distribution of leading actors' ages in selected movies, 1935-2022\",\n    caption = \"Source: Hollywood Age Gap dataset\"\n  ) +\n  scale_x_continuous(breaks = seq(20, 90, 10)) +\n  scale_y_continuous(limits = c(0, 80)) +\n  geom_rect(xmin = 36.5, xmax = 37.5, ymin = 0, ymax = 59, fill = \"#1046b1\", color = \"gray97\") +\n  geom_rect(xmin = 27.5, xmax = 28.5, ymin = 0, ymax = 68, fill = \"#ffa600\", color = \"gray97\") +\n  annotate(\"text\", label = \"37\", size = 12 / .pt, fontface = \"bold\", x = 37, y = 61, vjust = 0) +\n  annotate(\"text\", label = \"28\", size = 12 / .pt, fontface = \"bold\", x = 28, y = 70, vjust = 0) +\n\n  # Themes\n  scale_fill_manual(\n    values = c(\"#1046b1\", \"#ffa600\"),\n    labels = c(\"Men\", \"Women\")\n  ) +\n  guides(fill = guide_legend(\n    title = NULL,\n    override.aes = list(alpha = 1)\n  )) +\n  theme_minimal(base_family = \"karla\") +\n  theme(\n    plot.title = element_text(size = 16, face = \"bold\", hjust = .5),\n    plot.subtitle = element_text(size = 14, hjust = .5, margin = margin(b = 12)),\n    plot.caption = element_text(size = 8, hjust = 0, margin = margin(t = 15)),\n    axis.ticks = element_blank(),\n    axis.title = element_blank(),\n    axis.text.x = element_text(size = 12, margin = margin(t = 5)),\n    axis.text.y = element_blank(),\n    legend.position = c(.8, .8),\n    legend.text = element_text(size = 12),\n    panel.background = element_rect(fill = \"gray97\", color = NA),\n    panel.grid.major.x = element_blank(),\n    panel.grid.major.y = element_blank(),\n    panel.grid.minor.x = element_blank(),\n    panel.grid.minor.y = element_blank()\n  )\n\n\n\n\n\nHollywood’s idea of the standard age clusters at around 37 for men and 28 for women (implying that the standard age gap for romantic couples is 9). Some examples are, for men: Russell Crowe in A Beautiful Mind, George Clooney in Out of Sight, Jack Nicholson in Chinatown, Robert De Niro in Raging Bull, Gregory Peck in Roman Holiday; and for women: Robin Wright in Forrest Gump, Marisa Tomei in My Cousin Vinny, Demi Moore in Ghost, Meg Ryan in When Harry Met Sally, Léa Seydoux in Blue Is the Warmest Color.\nTimes seem to be changing, however, as the median ages of actors have been rising over the decades. The median actress, in particular, is the oldest she’s ever been (though with the caveat mentioned above that unusually few 2020s films are in the dataset).\n\n\nCode\ndf %>%\n  mutate(decade = plyr::round_any(release_year, 10, floor)) %>%\n  group_by(decade, character_gender) %>%\n  summarize(actor_age = median(actor_age)) %>%\n  ungroup() %>%\n  ggplot(aes(x = decade, y = actor_age, group = character_gender, fill = character_gender, color = character_gender)) +\n  geom_line(linewidth = 1) +\n  geom_point(size = 7.5, shape = 21, stroke = 1.5, color = \"gray97\") +\n  geom_text(aes(label = round(actor_age)),\n    family = \"karla\", size = 9 / .pt, fontface = \"bold\", color = \"white\"\n  ) +\n\n  # Labels\n  labs(\n    title = \"Signs of aging\",\n    subtitle = \"Median age of leading actors by decade\",\n    caption = \"Source: Hollywood Age Gap dataset\"\n  ) +\n  scale_x_continuous(breaks = seq(1930, 2020, 10)) +\n  scale_y_continuous(limits = c(20, 53)) +\n  guides(color = guide_legend(title = NULL), fill = FALSE) +\n\n  # Themes\n  scale_fill_manual(\n    values = c(\"#1046b1\", \"#ffa600\"),\n    labels = c(\"Men\", \"Women\")\n  ) +\n  scale_color_manual(\n    values = c(\"#1046b1\", \"#ffa600\"),\n    labels = c(\"Men\", \"Women\")\n  ) +\n  theme_minimal(base_family = \"karla\") +\n  theme(\n    plot.title = element_text(size = 16, face = \"bold\", hjust = .5),\n    plot.subtitle = element_text(size = 14, hjust = .5, margin = margin(b = 12)),\n    plot.caption = element_text(size = 8, hjust = 0, margin = margin(t = 15)),\n    axis.ticks = element_blank(),\n    axis.title = element_blank(),\n    axis.text.x = element_text(size = 12, margin = margin(t = 5)),\n    axis.text.y = element_text(size = 12, margin = margin(r = 5)),\n    legend.position = c(.75, .85),\n    legend.text = element_text(size = 12),\n    panel.background = element_rect(fill = \"gray97\", color = NA),\n    panel.grid.major.x = element_blank(),\n    panel.grid.major.y = element_blank(),\n    panel.grid.minor.x = element_blank(),\n    panel.grid.minor.y = element_blank()\n  )\n\n\n\n\n\nThis idea of a standard age has some grounding in developmental psychology. Clare Mehta and her colleagues coined the term “established adulthood” to refer to our 30s and early 40s, a period in our lives that most look back on—or look forward to—as their golden years. She writes:\n\nPeople talked about being in the prime of their lives and feeling at their peak. After years of working to develop careers and relationships, people reported feeling as though they had finally arrived.\n\nIf you who are reading this are an established adult, or even better, are close to the Hollywood standard age, then feel free to defeat some terrorists, fall in love with a bohemian, or gain some superpowers. This time in your life calls for it.\n\n\n\nReusehttps://creativecommons.org/licenses/by/4.0/"
  },
  {
    "objectID": "posts/2022-11-08-metro-manila-subway/index.html",
    "href": "posts/2022-11-08-metro-manila-subway/index.html",
    "title": "Mapping the Metro Manila subway",
    "section": "",
    "text": "Today I’ll experiment with making maps via leaflet, which I’m using for the first time. I’m relying mainly on this tutorial.\n\nlibrary(tidyverse)\nlibrary(leaflet)\n\nBelow is a map pointing out some of the planned stations of the future Metro Manila Subway, which will be built… sometime… maybe? Back in June the first tunnel boring machine was “ceremonially lowered” but no digging has actually taken place.\nAnyway, I map the stations from Quirino Highway to 11th Avenue in BGC. I got the locations from trawling through news articles and project documents, then I used Google Maps to get their coordinates.\n\nleaflet(options = leafletOptions(minZoom = 10, maxZoom = 15)) %>%\n  addTiles() %>%\n  addMarkers(lng=121.028460, lat=14.689541, label=\"Quirino Highway Station\") %>%\n  addMarkers(lng=121.032355, lat=14.676936, label=\"Tandang Sora Station\") %>%\n  addMarkers(lng=121.035685, lat=14.654850, label=\"North Avenue Station\") %>%\n  addMarkers(lng=121.037591, lat=14.644747, label=\"Quezon Avenue Station\") %>%\n  addMarkers(lng=121.051628, lat=14.640692, label=\"East Avenue Station\") %>%\n  addMarkers(lng=121.065282, lat=14.627151, label=\"Anonas Station\") %>%\n  addMarkers(lng=121.069868, lat=14.613690, label=\"Camp Aguinaldo Station\") %>%\n  addMarkers(lng=121.063565, lat=14.588103, label=\"Ortigas Station\") %>%\n  addMarkers(lng=121.061238, lat=14.575162, label=\"Shaw Station\") %>%\n  addMarkers(lng=121.055859, lat=14.558327, label=\"11th Avenue Station\")\n\n\n\n\n\nAnd here’s the map! It’s fine? It’s a little busy, so let’s change the map tile from the default OpenStreetMap to a nice minimalist one from this list.\n\nleaflet(options = leafletOptions(minZoom = 10, maxZoom = 15)) %>%\n  addProviderTiles(providers$CartoDB.Voyager) %>%\n  addMarkers(lng=121.028460, lat=14.689541, label=\"Quirino Highway Station\") %>%\n  addMarkers(lng=121.032355, lat=14.676936, label=\"Tandang Sora Station\") %>%\n  addMarkers(lng=121.035685, lat=14.654850, label=\"North Avenue Station\") %>%\n  addMarkers(lng=121.037591, lat=14.644747, label=\"Quezon Avenue Station\") %>%\n  addMarkers(lng=121.051628, lat=14.640692, label=\"East Avenue Station\") %>%\n  addMarkers(lng=121.065282, lat=14.627151, label=\"Anonas Station\") %>%\n  addMarkers(lng=121.069868, lat=14.613690, label=\"Camp Aguinaldo Station\") %>%\n  addMarkers(lng=121.063565, lat=14.588103, label=\"Ortigas Station\") %>%\n  addMarkers(lng=121.061238, lat=14.575162, label=\"Shaw Station\") %>%\n  addMarkers(lng=121.055859, lat=14.558327, label=\"11th Avenue Station\")\n\n\n\n\n\nNeat. I’ll revisit this later on to see what else I can add.\nUpdate 17 Nov 2022: Transportation Undersecretary Cesar Chavez has said that “the actual excavation is on December 12”. He added: “Actually, this is for real. The excavation is real.” Well, there you have it. The excavation is “real”.\n\n\n\nReusehttps://creativecommons.org/licenses/by/4.0/"
  },
  {
    "objectID": "posts/2022-12-03-war-is-over/index.html",
    "href": "posts/2022-12-03-war-is-over/index.html",
    "title": "War is over (if you want it?)",
    "section": "",
    "text": "People’s feelings about the Christmas season span a wide range, from very positive to very negative. As for where I fall, well:\n\n\nCode\nlibrary(tidyverse)\nlibrary(lubridate)\n\ndf <- here::here(\"datasets\", \"ucdp-prio-acd-221.csv\") %>%\n  read_csv() %>%\n  select(conflict_id, location, year, type_of_conflict, region, ep_end_date, region) %>%\n  mutate(\n    type_of_conflict = factor(type_of_conflict),\n    xmas = as.Date(paste0(year, \"-12-25\")),\n    count = ifelse(!(ep_end_date > xmas), 0, 1)\n  ) %>%\n  replace_na(list(count = 1))\n\nconflicts <- df %>%\n  group_by(year, type_of_conflict) %>%\n  summarize(count = sum(count)) %>%\n  ungroup()\n\nggplot(conflicts, aes(x = year, y = count, fill = type_of_conflict)) +\n  geom_bar(stat = \"identity\", position = \"stack\", width = .7) +\n  geom_hline(yintercept = 0, linewidth = .25, color = \"black\") +\n  labs(\n    title = \"Another year over\",\n    subtitle = \"Active armed conflicts as of Christmas Day, 1946-2021\",\n    caption = \"Source: UCDP/PRIO Armed Conflict Dataset v.22.1\"\n  ) +\n  scale_fill_manual(\n    name = \"Type of conflict\",\n    labels = c(\"Extrasystemtic\", \"Interstate\", \"Intrastate\", \"Internationalized intrastate\"),\n    values = rev(c(\"#1046b1\", \"#c52e9b\", \"#ff505b\", \"#ffa600\"))\n  ) +\n  theme_minimal(base_family = \"karla\") +\n  theme(\n    plot.title = element_text(size = 16, face = \"bold\", hjust = .5),\n    plot.subtitle = element_text(size = 14, hjust = .5, margin = margin(b = 15)),\n    plot.caption = element_text(size = 8, hjust = 0, margin = margin(t = 10)),\n    axis.ticks = element_blank(),\n    axis.title = element_blank(),\n    axis.text.x = element_text(size = 12, margin = margin(t = 5)),\n    axis.text.y = element_text(size = 12, margin = margin(r = 5)),\n    legend.position = \"bottom\",\n    legend.title = element_text(size = 11, face = \"bold\", margin = margin(r = 10)),\n    legend.text = element_text(size = 11),\n    legend.key.size = unit(.4, \"lines\"),\n    panel.background = element_rect(fill = \"gray97\", color = NA),\n    panel.grid.major.x = element_blank(),\n    panel.grid.major.y = element_line(color = \"white\"),\n    panel.grid.minor.x = element_blank(),\n    panel.grid.minor.y = element_blank()\n  )\n\n\n\n\n\nThe data is from the UCDP/PRIO Armed Conflict Dataset. I’ll go through how I constructed the above chart.\nFirst, some words about the dataset. Each observation is a conflict-year. A conflict is dated from its first battle-related death, but only active “episodes”—defined as 25 battle-related deaths—are recorded in the database. For example, the Basque conflict has the following entries:\n\nhere::here(\"datasets\", \"ucdp-prio-acd-221.csv\") %>%\n  read_csv() %>%\n  select(conflict_id, side_a, side_b, year, start_date, start_date2, ep_end_date) %>%\n  filter(conflict_id == \"342\") %>%\n  knitr::kable(align = \"c\")\n\n\n\n\n\n\n\n\n\n\n\n\n\nconflict_id\nside_a\nside_b\nyear\nstart_date\nstart_date2\nep_end_date\n\n\n\n\n342\nGovernment of Spain\nETA\n1978\n1968-06-07\n1978-10-22\nNA\n\n\n342\nGovernment of Spain\nETA\n1979\n1968-06-07\n1978-10-22\nNA\n\n\n342\nGovernment of Spain\nETA\n1980\n1968-06-07\n1978-10-22\nNA\n\n\n342\nGovernment of Spain\nETA\n1981\n1968-06-07\n1978-10-22\nNA\n\n\n342\nGovernment of Spain\nETA\n1982\n1968-06-07\n1978-10-22\n1982-12-29\n\n\n342\nGovernment of Spain\nETA\n1985\n1968-06-07\n1985-12-23\nNA\n\n\n342\nGovernment of Spain\nETA\n1986\n1968-06-07\n1985-12-23\nNA\n\n\n342\nGovernment of Spain\nETA\n1987\n1968-06-07\n1985-12-23\n1987-12-31\n\n\n342\nGovernment of Spain\nETA\n1991\n1968-06-07\n1991-06-28\n1991-12-13\n\n\n\n\n\nWhile it is recorded as starting on 7 June 1968, its first active episode started on 22 October 1978 and lasted until 29 December 1982. A second episode occurred from 23 December 1985 to 31 December 1987, then a third from 28 June to 13 December 1991. For my purposes, this would count as an active conflict for the Christmas Days of 1978-1982 and 1985-1987. Not 1991 however, since that episode ended right before Christmas.\nFor each conflict-year, I therefore need to construct a dummy to indicate whether it is a Christmas conflict or not. I do it in three steps. First, I construct the variable xmas to set the Christmas Day for each year. Second, I set the variable count to 0 if the conflict-year’s ep_end_date occurs before Christmas. Finally, for all cases where ep_end_date is NA, I set count to 1.\n\ndf <- here::here(\"datasets\", \"ucdp-prio-acd-221.csv\") %>%\n  read_csv() %>%\n  mutate(\n    xmas = as.Date(paste0(year, \"-12-25\")),\n    count = ifelse(!(ep_end_date > xmas), 0, 1)\n  ) %>%\n  replace_na(list(count = 1))\n\nThen it’s a simple matter of counting the active conflicts per year and constructing a bar chart. to illustrate the depressing fact that Christmas 2021 saw an all-time high in active conflicts worldwide.\nTo end, here’s the song that inspired this post. Have a bad Christmas season everybody.\n\n\n\n\n\n\n\nReusehttps://creativecommons.org/licenses/by/4.0/"
  },
  {
    "objectID": "posts/2022-12-15-mountains/index.html",
    "href": "posts/2022-12-15-mountains/index.html",
    "title": "Luzon’s hiking trails",
    "section": "",
    "text": "I have lately been experimenting with R’s map-making capabilities, and as a project I wanted to try visualizing the great mountain ranges of Luzon. The Philippines has some remarkable mountain ranges, and hiking through them is a unique sort of pleasure that I only discovered recently.\nAn obvious approach would be to make a relief map, with colors corresponding to elevation, but to make it more interesting I decided to create a more stylized ridgeline-style map. A ridge plot is… hard to describe. Look up the album cover of Joy Division’s Unknown Pleasures and you’ll understand. I am indebted to dieghernan’s tutorial on mapping with ridgelines.1\nLet’s start by loading up the basic packages.\n\nlibrary(tidyverse)\nlibrary(sf)\nlibrary(terra)\n\nThe coastline of the Philippines can be obtained from the rnaturalearth package.\n\nlibrary(rnaturalearth)\nlibrary(rnaturalearthdata)\nlibrary(rnaturalearthhires)\n\nph <- ne_countries(scale = 10, country = \"Philippines\", returnclass = \"sf\")\n\nluzon <- ph %>%\n  st_crop(\n    xmin = st_bbox(ph)$xmin %>% as.numeric(),\n    xmax = st_bbox(ph)$xmax %>% as.numeric(),\n    ymin = 13.5,\n    ymax = 18.5\n  ) %>%\n  st_transform(25391)\n\nThis returns a simple features or sf object, which has a geometry column that draws the coastline of the Philippines. The st_crop() function subsets the polygon to our area of interest while the st_transform() function sets the coordinate reference system to “Luzon 1911 / Philippines zone I” (EPSG code 25391).\nBecause this only draws the coastline, the major Luzon lakes of Laguna de Bay and Taal are not defined. We can load their polygons from rnaturalearth as well:\n\nlakes <- ne_download(scale = 10, type = \"lakes\", category = \"physical\", returnclass = \"sf\") %>%\n  mutate(in_luzon = str_detect(name, \"Laguna de Bay|Taal\")) %>%\n  filter(in_luzon == TRUE) %>%\n  st_transform(25391) %>%\n  summarize()\n\nWe can then use lakes to “punch holes” into the luzon polygon:\n\nluzon <- st_difference(st_geometry(luzon), st_geometry(lakes))\n\nplot(luzon)\n\n\n\n\nTo draw the ridges that symbolize Luzon’s mountain ranges, we need elevation raster data. This is taken from the elevatr package using the get_elev_raster() function.\n\nlibrary(elevatr)\n\ndem <- get_elev_raster(luzon, z = 7, clip = \"bbox\", expand = NULL) %>%\n  rast() %>%\n  mask(vect(luzon))\n\nnames(dem) <- \"elev\"\n\nThe rast() function converts it into a SpatRaster object, which is native to the terra package. The mask() function removes all cells outside the luzon polygon.\nThis raster actually provides more granularity than we want, so we aggregate the cells up to get a lower resolution. Then we convert it to a data.frame for plotting with ggplot2.\n\ndem_agg <- aggregate(dem, round(nrow(dem) / 200))\ndem_df <- as.data.frame(dem_agg, xy = TRUE, na.rm = FALSE)\n\nThe luzon polygon is plotted using geom_sf() while the ridgelines obtained from elevated data are plotted using geom_ridgeline() from the ggridges packages.\n\nlibrary(ggplot2)\nlibrary(ggridges)\n\n# Set expanded boundaries\ncoords <- st_bbox(c(xmin = 118.75, xmax = 125.75, ymin = 13.75, ymax = 18.25),\n  crs = 4326\n) %>%\n  st_as_sfc() %>%\n  st_transform(25391) %>%\n  st_coordinates()\n\nmap <- ggplot() +\n  geom_sf(data = luzon, color = NA, fill = \"#069801\") +\n  geom_ridgeline(\n    data = dem_df,\n    aes(x = x, y = y, group = y, height = elev),\n    scale = 25, fill = \"#84502e\", color = \"#4f3321\"\n  ) +\n  coord_sf(\n    xlim = coords[c(1, 2), 1],\n    ylim = coords[c(2, 3), 2],\n    expand = FALSE\n  ) +\n  scale_x_continuous(expand = c(0, 0)) +\n  scale_y_continuous(expand = c(0, 0)) +\n  theme_ridges() +\n  theme(\n    plot.margin = margin(0, 0, 0, 0),\n    panel.background = element_rect(fill = \"#b8dfff\"),\n    panel.grid.major = element_line(color = \"#a5d0f3\"),\n    axis.title = element_blank(),\n    axis.text = element_blank(),\n    axis.ticks.length = unit(0, \"cm\"),\n  )\nmap\n\n\n\n\nYou can see how vividly the ridgelines capture Luzon’s mountains. It’s practically 3D!\nI now want to add markers for some of the more famous hiking trails in Luzon. I can easily get their coordinates using Google Maps, but a complication to deal with is that the coordinate reference system (CRS) of Google Maps is different from the one I’m using here. I must therefore use st_transform() to reproject them first.\n\nspots <- here::here(\"datasets\", \"hikingspots.csv\") %>% \n  read_csv() %>%\n  mutate(label = toupper(label))\n\ncoords <- spots %>%\n  st_as_sf(agr = \"constant\", coords = c(\"x\", \"y\"), crs = 4326) %>%\n  st_transform(25391) %>%\n  st_coordinates()\n\nspots <- cbind(spots, coords)\n\nFinally, I downloaded some Google fonts for some added fanciness. Here is the final chart:\n\n\nCode\nlibrary(ggrepel)\n\nmap +\n  geom_point(\n    data = spots,\n    aes(x = X, y = Y),\n    size = 2.5, shape = 24, linewidth = .75, color = \"white\", fill = \"black\"\n  ) +\n  geom_label_repel(\n    data = spots,\n    aes(x = X, y = Y, label = label),\n    family = \"karla\", fontface = \"bold\", size = 8 / .pt,\n    hjust = .5, vjust = .5, nudge_x = 10000, min.segment.length = 1, label.r = unit(0, \"lines\"), label.size = NA, label.padding = unit(.2, \"lines\"), alpha = .6\n  ) +\n\n  # Fancy plot title\n  annotate(\"text\",\n    x = 1.27 * 10^6, y = 1.855 * 10^6, hjust = .5,\n    label = \"HIKING DESTINATIONS\", family = \"lora\", size = 12 / .pt\n  ) +\n  annotate(\"text\",\n    x = 1.27 * 10^6, y = 1.835 * 10^6, hjust = .5,\n    label = \"in\", family = \"lora\", fontface = \"italic\", size = 12 / .pt\n  ) +\n  annotate(\"text\",\n    x = 1.27 * 10^6, y = 1.803 * 10^6, hjust = .5,\n    label = \"L U Z O N\", family = \"lora\", size = 30 / .pt\n  )\n\n\n\n\n\nMy one hiking experience so far was at Nagpatong Rock, near Masungi. It was arduous and muddy and I slept for 12 hours afterwards. But for that brief moment at the peak, as I sipped cold coffee and braced myself against the wind, I looked out at the view and found it absolutely grand.\n\n\n\n\n\nStay elevated!\n\n\n\n\nFootnotes\n\n\nAnd let me just say that learning to make maps in R has been bewilderingly difficult. I have found Geocomputation with R useful, but much of it remains mysterious to me.↩︎\n\nReusehttps://creativecommons.org/licenses/by/4.0/"
  },
  {
    "objectID": "posts/2022-11-25-roots/index.html",
    "href": "posts/2022-11-25-roots/index.html",
    "title": "The roots of economic development",
    "section": "",
    "text": "One of the most interesting economics papers I’ve ever read is the 2013 survey by Enrico Spolaore and Romain Wacziarg (SW) titled “How Deep Are the Roots of Economic Development?” There has long been an active, highly contentious discussion over why some countries today are rich while others are poor. As a citizen of a “poor” country, this was a big motivation for me to study economics.1\nThe proximate causes are relatively uncontroversial—Solow had it all laid out in 1956. Production turns inputs into output. More inputs mean more output. Some output are consumed, some are saved (“invested”) and turned into capital, which are then used as inputs to produce more output. You can keep accumulating capital to grow your output, but over time, for a given state of technology, capital accumulation will hit diminishing returns. You will then need to move up the technological ladder to continue increasing output. Repeat until rich.\nThe Solow model is elegant, but it has the flavor of saying that a business is successful because it makes a lot of money. The deeper question is why some countries have managed to perform these pro-growth activities while others have not. Is it something in their culture? Maybe their geography? Maybe they had a Great Leader who put all the pieces in place?\nThis has been the research agenda of a number of empirical economic historians. Their work supplements that of traditional economic historians by quantifying the evidence for various hypothesized root causes of development. SW survey their findings as of 2013 using a unified dataset available here. What I want to do is chart some of the more interesting results.\nGeography is a natural candidate for explaining the relative wealth of nations. Ever notice that cold countries tend to be richer than hot ones? In fact, it’s empirically well-founded:\nWhat explains this intriguing correlation? SW divide proposed mechanisms into direct and indirect channels. Geography may have a direct influence on economic development through the effects of climate and diseases on agricultural and labor productivity. Or in cruder form, this is the argument that hotter weather makes for lazier people, which Rizal refuted in “The Indolence of the Filipino”.\nArguments for an indirect channel are, for me, more convincing. Geography influenced x, and x in turn influenced economic development. There may even be additional layers (x influenced y, y influenced z, etc.). A famous hypothesis comes from Jared Diamond’s 1997 book Guns, Germs, and Steel, which argues that climate and the ecosystems it supported influenced the onset of agriculture and domestication in a society, what is known as the Neolithic Revolution. In turn, societies that transitioned earlier would have had a head start in technological progress and centralized governments. This explains why Europeans had the advantage of “guns, germs, and steel” as they were conquering the civilizations of New World America in the 16th century.\nTo illustrate the Diamond hypothesis, the following plots population density in the year 1500 against the years since a country had undergone its Neolithic Revolution—population density being the best proxy available for relative economic development in a pre-industrial world. Again, a positive correlation is established.\nThere is another reason why it makes more sense to use economic development as of 1500 rather than as of today. If geography shapes economic destinies, then how do we account for countries whose peoples are, in the grand scale of things, relative newcomers to the environments they now inhabit? These include European migrants to the New World as well as African slaves forcibly transported to New World colonies. If it takes thousands of years for geography to shape human cultures and institutions, then an English colonist who settled in what is now the United States would have been influenced by English rather than American geography.\nIn short, one must take into account the historical composition of a given country’s population when correlating geographic factors to contemporary development. This motivates the World Migration Matrix constructed by Louis Putterman and David N. Weil, which, for 165 countries, gives “an estimate of the proportion of the ancestors in 1500 of that country’s population today that were living within what are now the borders of that and each of the other countries”. To take one example, among the present-day inhabitants of Cuba, Putterman and Weil estimate that 63% of their ancestors originate from Spain, 5.6% from Nigeria, 5.1% from Ghana, 4.9% from Angola, and so on. Cuba today would exhibit the effects of the weighted average of all these different geographies.\nThe following map shows the countries with the highest proportion of “immigrants” relative to their present-day populations. In countries like Australia, Singapore, Taiwan, and Jamaica, very few of their current citizens have ancestors that were living in that country in 1500. On the opposite extreme are countries like China, Japan, Algeria, and Greece.\nApplying an “ancestry adjustment” to the Diamond hypothesis makes a significant difference. The first chart below plots GDP per capita today and the years since the Neolithic Revolution. There is a positive correlation, albeit a weak one. The second chart plots GDP per capita against the ancestry-adjusted years since the Neolithic Revolution. Doing this strengthens the correlation. This suggests that (1) people were shaped by their environment, and (2) they brought their cultures and institutions with them during the great post-1500 migrations.\nThe correlations above provide pretty fascinating insights. But they are all flawed, of course. Countries are not random realizations of a well-defined stochastic process. Nor are they equal: when generalizing about long-run economic development, it’s not clear that the experiences of a Singapore or a Cape Verde should hold equal weight to the experiences of an India or a China. Which are the exceptions and which are the rules? Do rules even exist?\nThe field of empirical economic history has done much to extend, refine, and qualify the basic results shown here. Hopefully I’ll write about them in future posts."
  },
  {
    "objectID": "posts/2022-11-25-roots/index.html#unadjusted",
    "href": "posts/2022-11-25-roots/index.html#unadjusted",
    "title": "The roots of economic development",
    "section": "Unadjusted",
    "text": "Unadjusted\n\n\nCode\ndf1 <- df %>%\n  select(country, rgdpch_2005, agyears) %>%\n  drop_na() %>%\n  mutate(\n    rgdpch_2005_pretty = pretty(rgdpch_2005, 0),\n    agyears_pretty = pretty(agyears, 0)\n  )\n\nfit <- lm(log10(rgdpch_2005) ~ agyears, data = df1) %>%\n  augment() %>%\n  arrange(agyears) %>%\n  slice(c(1, nrow(df1)))\n\nx <- c(\"Country\", \"GDP per capita\", \"Years since Neolithic Revolution\")\ny <- c(\"{point.country:s}\", \"${point.rgdpch_2005_pretty:s}\", \"{point.agyears_pretty:s}\")\ntltip <- tooltip_table(x, y)\n\nhchart(df1, \"scatter\",\n  hcaes(x = agyears, y = rgdpch_2005),\n  color = hex_to_rgba(\"#1046b1\", 0.5),\n  size = 20,\n  stickyTracking = FALSE\n) %>%\n  hc_xAxis(\n    title = list(text = \"Years since Neolithic Revolution\"),\n    gridLineWidth = 1,\n    min = 0, max = 11000\n  ) %>%\n  hc_yAxis(\n    title = list(text = \"GDP per capita 2005\"),\n    type = \"logarithmic\",\n    gridLineWidth = 1\n  ) %>%\n  hc_tooltip(\n    useHTML = TRUE,\n    pointFormat = tltip,\n    headerFormat = \"\"\n  ) %>%\n  hc_add_series(\n    data = fit,\n    type = \"spline\",\n    hcaes(x = agyears, y = 10^.fitted),\n    color = \"black\",\n    lineWidth = 1,\n    marker = FALSE,\n    enableMouseTracking = FALSE\n  )"
  },
  {
    "objectID": "posts/2022-11-25-roots/index.html#ancestry-adjusted",
    "href": "posts/2022-11-25-roots/index.html#ancestry-adjusted",
    "title": "The roots of economic development",
    "section": "Ancestry-adjusted",
    "text": "Ancestry-adjusted\n\n\nCode\ndf1 <- df %>%\n  select(country, rgdpch_2005, adjagyears) %>%\n  drop_na() %>%\n  mutate(\n    rgdpch_2005_pretty = pretty(rgdpch_2005, 0),\n    adjagyears_pretty = pretty(adjagyears, 0)\n  )\n\nfit <- lm(log10(rgdpch_2005) ~ adjagyears, data = df1) %>%\n  augment() %>%\n  arrange(adjagyears) %>%\n  slice(c(1, nrow(df1)))\n\nx <- c(\"Country\", \"GDP per capita\", \"Years since Neolithic Revolution\")\ny <- c(\"{point.country:s}\", \"${point.rgdpch_2005_pretty:s}\", \"{point.adjagyears_pretty:s}\")\ntltip <- tooltip_table(x, y)\n\nhchart(df1, \"scatter\",\n  hcaes(x = adjagyears, y = rgdpch_2005),\n  color = hex_to_rgba(\"#1046b1\", 0.5),\n  size = 20,\n  stickyTracking = FALSE\n) %>%\n  hc_xAxis(\n    title = list(text = \"Years since Neolithic Revolution (ancestry-adjusted)\"),\n    gridLineWidth = 1,\n    min = 0, max = 11000\n  ) %>%\n  hc_yAxis(\n    title = list(text = \"GDP per capita 2005\"),\n    type = \"logarithmic\",\n    gridLineWidth = 1\n  ) %>%\n  hc_tooltip(\n    useHTML = TRUE,\n    pointFormat = tltip,\n    headerFormat = \"\"\n  ) %>%\n  hc_add_series(\n    data = fit,\n    type = \"spline\",\n    hcaes(x = adjagyears, y = 10^.fitted),\n    color = \"black\",\n    lineWidth = 1,\n    marker = FALSE,\n    enableMouseTracking = FALSE\n  )"
  },
  {
    "objectID": "subscribe.html",
    "href": "subscribe.html",
    "title": "Subscribe",
    "section": "",
    "text": "Subscribe\n\n\nYou will receive an email whenever there is a new post. Unsubscribe anytime.\n\n\n\n\n\n\n\n\n\n  \n    \n      \n        \n          \n        \n        \n                          Oops! Something's wrong.\n                      \n      \n    \n    \n    \n      \n        \n          \n        \n        \n                          Confirmation link sent!\n                      \n      \n    \n    \n    \n      \n        \n          \n            \n              \n\n                \n                  \n                \n              \n\n              \n              \n            \n          \n        \n        \n          \n            \n              \n\n                \n                  \n                \n              \n\n              \n              \n            \n          \n        \n        \n          \n            \n              \n\n                \n                  \n                \n              \n\n              \n              \n            \n          \n        \n        \n          \n            \n              \n                \n                \n              \n              \n              \n            \n          \n        \n        \n          \n            \n              \n                \n              \n              SIGN ME UP!\n            \n          \n        \n        \n          \n            \n          \n        \n        \n          \n            \n              \n                \n                  \n                    \n                  \n                \n              \n              \n                \n              \n            \n            \n              We use Sendinblue as our marketing platform. By Clicking below to submit this form, you acknowledge that the information you provided will be transferred to Sendinblue for processing in accordance with their terms of use"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Home",
    "section": "",
    "text": "The demographics of Nobel laureates\n\n\nI’m starting to think there might be privileges to being old, white, and male\n\n\n\n\nline\n\n\nbar\n\n\n \n\n\n\n\nMar 3, 2023\n\n\n\n\n\n\n  \n\n\n\n\nPutin’s leverage, Putin’s folly\n\n\nA newly released dataset lets us visualize the patterns of global trade on the eve of Russia’s invasion of Ukraine\n\n\n\n\nbar\n\n\nnetwork\n\n\n \n\n\n\n\nFeb 22, 2023\n\n\n\n\n\n\n  \n\n\n\n\nThe standard age\n\n\nAt what age are we our “standard” selves, when we are neither too young nor too old?\n\n\n\n\nhistogram\n\n\nline\n\n\n \n\n\n\n\nFeb 14, 2023\n\n\n\n\n\n\n  \n\n\n\n\nFrancis is an old pope\n\n\nAt 86, the current supreme pontiff is making his mark as one of history’s oldest. How long can he go on?\n\n\n\n\nhistogram\n\n\nlollipop\n\n\nsurvival\n\n\n \n\n\n\n\nFeb 6, 2023\n\n\n\n\n\n\n  \n\n\n\n\nWill people care about this Oscars?\n\n\nOn the surprising popularity of the 2023 nominations for Best Picture\n\n\n\n\nbar\n\n\nscatter\n\n\ninteractive\n\n\n \n\n\n\n\nJan 26, 2023\n\n\n\n\n\n\n  \n\n\n\n\nSomehow, Avatar has returned\n\n\nThe highest grossing movie of all time got to the top gradually rather than all at once\n\n\n\n\nline\n\n\n \n\n\n\n\nDec 21, 2022\n\n\n\n\n\n\n  \n\n\n\n\nLuzon’s hiking trails\n\n\nCreating a stylized map of mountains using ridgelines\n\n\n\n\nmap\n\n\nridges\n\n\n \n\n\n\n\nDec 15, 2022\n\n\n\n\n\n\n  \n\n\n\n\nI’m gonna carry that weight\n\n\nUsing a massive dataset of powerlifting competitors to set my gym goals for next year\n\n\n\n\n2d-density\n\n\n \n\n\n\n\nDec 7, 2022\n\n\n\n\n\n\n  \n\n\n\n\nWar is over (if you want it?)\n\n\nA tally of active armed conflicts as of Christmas Day, since 1946\n\n\n\n\nbar\n\n\n \n\n\n\n\nDec 3, 2022\n\n\n\n\n\n\n  \n\n\n\n\nMore on the great post-1500 migrations\n\n\nWhich countries have the most diverse ancestors? Which countries have the most descendants around the world today?\n\n\n\n\nmap\n\n\nbar\n\n\nscatter\n\n\ninteractive\n\n\n \n\n\n\n\nNov 26, 2022\n\n\n\n\n\n\n  \n\n\n\n\nThe roots of economic development\n\n\nVisualizing some key results in Spolaore and Wacziarg’s 2013 survey\n\n\n\n\nscatter\n\n\nmap\n\n\ninteractive\n\n\n \n\n\n\n\nNov 25, 2022\n\n\n\n\n\n\n  \n\n\n\n\nThe emotional shape of novels\n\n\nUsing sentiment analysis, I chart the emotional highs and lows of three classic novels\n\n\n\n\nwaterfall\n\n\n \n\n\n\n\nNov 19, 2022\n\n\n\n\n\n\n  \n\n\n\n\nThat FTX balance sheet\n\n\nSBF shops around for investors with a balance sheet that is emphatically not GAAP\n\n\n\n\nbar\n\n\n \n\n\n\n\nNov 15, 2022\n\n\n\n\n\n\n  \n\n\n\n\nVisualizing Elon Musk’s Twitter addiction\n\n\nThe world’s busiest billionaire finds the time to tweet at all hours of the day\n\n\n\n\nbar\n\n\nhistogram\n\n\n \n\n\n\n\nNov 13, 2022\n\n\n\n\n\n\n  \n\n\n\n\nShould you dual wield y axes?\n\n\nPoints to keep in mind when resorting to a secondary axis\n\n\n\n\nbar\n\n\nline\n\n\n \n\n\n\n\nNov 10, 2022\n\n\n\n\n\n\n  \n\n\n\n\nMapping the Metro Manila subway\n\n\nIn a fit of wishful thinking, I use Leaflet to map the Metro Manila subway as if it existed\n\n\n\n\nmap\n\n\ninteractive\n\n\n \n\n\n\n\nNov 8, 2022\n\n\n\n\n\n\n  \n\n\n\n\nExercises in plotting WDI data\n\n\nPull the data with R instead of downloading spreadsheet after spreadsheet\n\n\n\n\nline\n\n\nscatter\n\n\n \n\n\n\n\nNov 5, 2022\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About\n\n\n\nHello! My name is Ken.\n\n\n    \n\n\nI work a lot with data, which means I often engage in the fun, frustrating, highly consequential—yet frequently dismissed!—art of data visualization.\n\n\nTwo Points Make a Line documents my journey in mastering this art. I take an interesting dataset and tell a story about it using charts. Along the way, I share my thoughts on what makes a chart work and what doesn’t, the tools I use, and other tidbits. Enjoy!\n\n\n\nSyndication onR-Bloggers pending\n\n\n\n\nThis website was built in Quarto using R and published via GitHub Pages. View the source code here. “The Plotting Cats” artwork that peppers the site is by Issa Cruz."
  },
  {
    "objectID": "subscribed.html",
    "href": "subscribed.html",
    "title": "Subscription confirmed",
    "section": "",
    "text": "Subscription confirmed\n\n\nYou’re all set!"
  }
]