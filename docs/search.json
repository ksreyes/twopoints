[
  {
    "objectID": "posts/2022-11-08-metro-manila-subway/index.html",
    "href": "posts/2022-11-08-metro-manila-subway/index.html",
    "title": "Mapping the Metro Manila subway",
    "section": "",
    "text": "Today I’ll experiment with making maps via leaflet, which I’m using for the first time. I’m relying mainly on this tutorial.\n\nlibrary(tidyverse)\nlibrary(leaflet)\n\nBelow is a map pointing out some of the planned stations of the future Metro Manila Subway, which will be built… sometime… maybe? Back in June the first tunnel boring machine was “ceremonially lowered” but no digging has actually taken place.\nAnyway, I map the stations from Quirino Highway to 11th Avenue in BGC. I got the locations from trawling through news articles and project documents, then I used Google Maps to get their coordinates.\n\nleaflet(options = leafletOptions(minZoom = 10, maxZoom = 15)) %&gt;%\n  addTiles() %&gt;%\n  addMarkers(lng=121.028460, lat=14.689541, label=\"Quirino Highway Station\") %&gt;%\n  addMarkers(lng=121.032355, lat=14.676936, label=\"Tandang Sora Station\") %&gt;%\n  addMarkers(lng=121.035685, lat=14.654850, label=\"North Avenue Station\") %&gt;%\n  addMarkers(lng=121.037591, lat=14.644747, label=\"Quezon Avenue Station\") %&gt;%\n  addMarkers(lng=121.051628, lat=14.640692, label=\"East Avenue Station\") %&gt;%\n  addMarkers(lng=121.065282, lat=14.627151, label=\"Anonas Station\") %&gt;%\n  addMarkers(lng=121.069868, lat=14.613690, label=\"Camp Aguinaldo Station\") %&gt;%\n  addMarkers(lng=121.063565, lat=14.588103, label=\"Ortigas Station\") %&gt;%\n  addMarkers(lng=121.061238, lat=14.575162, label=\"Shaw Station\") %&gt;%\n  addMarkers(lng=121.055859, lat=14.558327, label=\"11th Avenue Station\")\n\n\n\n\n\nAnd here’s the map! It’s fine? It’s a little busy, so let’s change the map tile from the default OpenStreetMap to a nice minimalist one from this list.\n\nleaflet(options = leafletOptions(minZoom = 10, maxZoom = 15)) %&gt;%\n  addProviderTiles(providers$CartoDB.Voyager) %&gt;%\n  addMarkers(lng=121.028460, lat=14.689541, label=\"Quirino Highway Station\") %&gt;%\n  addMarkers(lng=121.032355, lat=14.676936, label=\"Tandang Sora Station\") %&gt;%\n  addMarkers(lng=121.035685, lat=14.654850, label=\"North Avenue Station\") %&gt;%\n  addMarkers(lng=121.037591, lat=14.644747, label=\"Quezon Avenue Station\") %&gt;%\n  addMarkers(lng=121.051628, lat=14.640692, label=\"East Avenue Station\") %&gt;%\n  addMarkers(lng=121.065282, lat=14.627151, label=\"Anonas Station\") %&gt;%\n  addMarkers(lng=121.069868, lat=14.613690, label=\"Camp Aguinaldo Station\") %&gt;%\n  addMarkers(lng=121.063565, lat=14.588103, label=\"Ortigas Station\") %&gt;%\n  addMarkers(lng=121.061238, lat=14.575162, label=\"Shaw Station\") %&gt;%\n  addMarkers(lng=121.055859, lat=14.558327, label=\"11th Avenue Station\")\n\n\n\n\n\nNeat. I’ll revisit this later on to see what else I can add. \nUpdate 17 Nov 2022: Transportation Undersecretary Cesar Chavez has said that “the actual excavation is on December 12”. He added: “Actually, this is for real. The excavation is real.” Well, there you have it. The excavation is “real”.\n\n\n\nReusehttps://creativecommons.org/licenses/by/4.0/"
  },
  {
    "objectID": "posts/2022-12-03-war-is-over/index.html",
    "href": "posts/2022-12-03-war-is-over/index.html",
    "title": "War is over (if you want it?)",
    "section": "",
    "text": "People’s feelings about the Christmas season span a wide range, from very positive to very negative. As for where I fall, well:\n\n\nCode\nlibrary(tidyverse)\nlibrary(ggplot2)\nlibrary(lubridate)\n\ndf &lt;- here::here(\"datasets\", \"ucdp-prio-acd-221.csv\") %&gt;%\n  read_csv() %&gt;%\n  select(conflict_id, location, year, type_of_conflict, region, ep_end_date, region) %&gt;%\n  mutate(\n    type_of_conflict = factor(type_of_conflict),\n    xmas = as.Date(paste0(year, \"-12-25\")),\n    count = ifelse(!(ep_end_date &gt; xmas), 0, 1)\n  ) %&gt;%\n  replace_na(list(count = 1))\n\nconflicts &lt;- df %&gt;%\n  group_by(year, type_of_conflict) %&gt;%\n  summarize(count = sum(count)) %&gt;%\n  ungroup()\n\nggplot(conflicts, aes(x = year, y = count, fill = type_of_conflict)) +\n  geom_bar(stat = \"identity\", position = \"stack\", width = .7) +\n  geom_hline(yintercept = 0, linewidth = .25, color = \"black\") +\n  labs(\n    title = \"Another year over\",\n    subtitle = \"Active armed conflicts as of Christmas Day, 1946-2021\",\n    caption = \"Source: UCDP/PRIO Armed Conflict Dataset v.22.1\"\n  ) +\n  scale_fill_manual(\n    name = \"Type of conflict\",\n    labels = c(\"Extrasystemtic\", \"Interstate\", \"Intrastate\", \"Internationalized intrastate\"),\n    values = rev(c(\"#1046b1\", \"#c52e9b\", \"#ff505b\", \"#ffa600\"))\n  ) +\n  theme_minimal(base_family = \"karla\") +\n  theme(\n    plot.title = element_text(size = 16, face = \"bold\", hjust = .5),\n    plot.subtitle = element_text(size = 14, hjust = .5, margin = margin(b = 15)),\n    plot.caption = element_text(size = 8, hjust = 0, margin = margin(t = 10)),\n    axis.ticks = element_blank(),\n    axis.title = element_blank(),\n    axis.text.x = element_text(size = 12, margin = margin(t = 5)),\n    axis.text.y = element_text(size = 12, margin = margin(r = 5)),\n    legend.position = \"bottom\",\n    legend.title = element_text(size = 11, face = \"bold\", margin = margin(r = 10)),\n    legend.text = element_text(size = 11),\n    legend.key.size = unit(.4, \"lines\"),\n    panel.background = element_rect(fill = \"gray97\", color = NA),\n    panel.grid.major.x = element_blank(),\n    panel.grid.major.y = element_line(color = \"white\"),\n    panel.grid.minor.x = element_blank(),\n    panel.grid.minor.y = element_blank()\n  )\n\n\n\n\n\nThe data is from the UCDP/PRIO Armed Conflict Dataset. I’ll go through how I constructed the above chart.\nFirst, some words about the dataset. Each observation is a conflict-year. A conflict is dated from its first battle-related death, but only active “episodes” — defined as 25 battle-related deaths — are recorded in the database. For example, the Basque conflict has the following entries:\n\nhere::here(\"datasets\", \"ucdp-prio-acd-221.csv\") %&gt;%\n  read_csv() %&gt;%\n  select(conflict_id, side_a, side_b, year, start_date, start_date2, ep_end_date) %&gt;%\n  filter(conflict_id == \"342\") %&gt;%\n  knitr::kable(align = \"c\")\n\n\n\n\n\n\n\n\n\n\n\n\n\nconflict_id\nside_a\nside_b\nyear\nstart_date\nstart_date2\nep_end_date\n\n\n\n\n342\nGovernment of Spain\nETA\n1978\n1968-06-07\n1978-10-22\nNA\n\n\n342\nGovernment of Spain\nETA\n1979\n1968-06-07\n1978-10-22\nNA\n\n\n342\nGovernment of Spain\nETA\n1980\n1968-06-07\n1978-10-22\nNA\n\n\n342\nGovernment of Spain\nETA\n1981\n1968-06-07\n1978-10-22\nNA\n\n\n342\nGovernment of Spain\nETA\n1982\n1968-06-07\n1978-10-22\n1982-12-29\n\n\n342\nGovernment of Spain\nETA\n1985\n1968-06-07\n1985-12-23\nNA\n\n\n342\nGovernment of Spain\nETA\n1986\n1968-06-07\n1985-12-23\nNA\n\n\n342\nGovernment of Spain\nETA\n1987\n1968-06-07\n1985-12-23\n1987-12-31\n\n\n342\nGovernment of Spain\nETA\n1991\n1968-06-07\n1991-06-28\n1991-12-13\n\n\n\n\n\nWhile it is recorded as starting on 7 June 1968, its first active episode started on 22 October 1978 and lasted until 29 December 1982. A second episode occurred from 23 December 1985 to 31 December 1987, then a third from 28 June to 13 December 1991. For my purposes, this would count as an active conflict for the Christmas Days of 1978-1982 and 1985-1987. Not 1991 however, since that episode ended right before Christmas.\nFor each conflict-year, I therefore need to construct a dummy to indicate whether it is a Christmas conflict or not. I do it in three steps. First, I construct the variable xmas to set the Christmas Day for each year. Second, I set the variable count to 0 if the conflict-year’s ep_end_date occurs before Christmas. Finally, for all cases where ep_end_date is NA, I set count to 1.\n\ndf &lt;- here::here(\"datasets\", \"ucdp-prio-acd-221.csv\") %&gt;%\n  read_csv() %&gt;%\n  mutate(\n    xmas = as.Date(paste0(year, \"-12-25\")),\n    count = ifelse(!(ep_end_date &gt; xmas), 0, 1)\n  ) %&gt;%\n  replace_na(list(count = 1))\n\nThen it’s a simple matter of counting the active conflicts per year and constructing a bar chart. to illustrate the depressing fact that Christmas 2021 saw an all-time high in active conflicts worldwide.\nTo end, here’s the song that inspired this post. Have a bad Christmas season everybody. \n\n\n\n\nReusehttps://creativecommons.org/licenses/by/4.0/"
  },
  {
    "objectID": "posts/2022-12-15-mountains/index.html",
    "href": "posts/2022-12-15-mountains/index.html",
    "title": "Luzon’s hiking trails",
    "section": "",
    "text": "I have lately been experimenting with R’s map-making capabilities, and as a project I wanted to try visualizing the great mountain ranges of Luzon. The Philippines has some remarkable mountain ranges, and hiking through them is a unique sort of pleasure that I only discovered recently.\nAn obvious approach would be to make a relief map, with colors corresponding to elevation, but to make it more interesting I decided to create a more stylized ridgeline-style map. A ridge plot is… hard to describe. Look up the album cover of Joy Division’s Unknown Pleasures and you’ll understand. I am indebted to dieghernan’s tutorial on mapping with ridgelines.1\nLet’s start by loading up the basic packages.\nlibrary(tidyverse)\nlibrary(sf)\nlibrary(terra)\nThe coastline of the Philippines can be obtained from the rnaturalearth package.\nlibrary(rnaturalearth)\nlibrary(rnaturalearthdata)\nlibrary(rnaturalearthhires)\n\nph &lt;- ne_countries(scale = 10, country = \"Philippines\", returnclass = \"sf\")\n\nluzon &lt;- ph %&gt;%\n  st_crop(\n    xmin = st_bbox(ph)$xmin %&gt;% as.numeric(),\n    xmax = st_bbox(ph)$xmax %&gt;% as.numeric(),\n    ymin = 13.5,\n    ymax = 18.5\n  ) %&gt;%\n  st_transform(25391)\nThis returns a simple features or sf object, which has a geometry column that draws the coastline of the Philippines. The st_crop() function subsets the polygon to our area of interest while the st_transform() function sets the coordinate reference system to “Luzon 1911 / Philippines zone I” (EPSG code 25391).\nBecause this only draws the coastline, the major Luzon lakes of Laguna de Bay and Taal are not defined. We can load their polygons from rnaturalearth as well:\nlakes &lt;- ne_download(scale = 10, type = \"lakes\", category = \"physical\", returnclass = \"sf\") %&gt;%\n  mutate(in_luzon = str_detect(name, \"Laguna de Bay|Taal\")) %&gt;%\n  filter(in_luzon == TRUE) %&gt;%\n  st_transform(25391) %&gt;%\n  summarize()\nWe can then use lakes to “punch holes” into the luzon polygon:\nluzon &lt;- st_difference(st_geometry(luzon), st_geometry(lakes))\n\nplot(luzon)\nTo draw the ridges that symbolize Luzon’s mountain ranges, we need elevation raster data. This is taken from the elevatr package using the get_elev_raster() function.\nlibrary(elevatr)\n\ndem &lt;- get_elev_raster(luzon, z = 7, clip = \"bbox\", expand = NULL) %&gt;%\n  rast() %&gt;%\n  mask(vect(luzon))\n\nnames(dem) &lt;- \"elev\"\nThe rast() function converts it into a SpatRaster object, which is native to the terra package. The mask() function removes all cells outside the luzon polygon.\nThis raster actually provides more granularity than we want, so we aggregate the cells up to get a lower resolution. Then we convert it to a data.frame for plotting with ggplot2.\ndem_agg &lt;- aggregate(dem, round(nrow(dem) / 200))\ndem_df &lt;- as.data.frame(dem_agg, xy = TRUE, na.rm = FALSE)\nThe luzon polygon is plotted using geom_sf() while the ridgelines obtained from elevated data are plotted using geom_ridgeline() from the ggridges packages.\nlibrary(ggplot2)\nlibrary(ggridges)\n\n# Set expanded boundaries\ncoords &lt;- st_bbox(c(xmin = 118.75, xmax = 125.75, ymin = 13.75, ymax = 18.25),\n  crs = 4326\n) %&gt;%\n  st_as_sfc() %&gt;%\n  st_transform(25391) %&gt;%\n  st_coordinates()\n\nmap &lt;- ggplot() +\n  geom_sf(data = luzon, color = NA, fill = \"#069801\") +\n  geom_ridgeline(\n    data = dem_df,\n    aes(x = x, y = y, group = y, height = elev),\n    scale = 25, fill = \"#84502e\", color = \"#4f3321\"\n  ) +\n  coord_sf(\n    xlim = coords[c(1, 2), 1],\n    ylim = coords[c(2, 3), 2],\n    expand = FALSE\n  ) +\n  scale_x_continuous(expand = c(0, 0)) +\n  scale_y_continuous(expand = c(0, 0)) +\n  theme_ridges() +\n  theme(\n    plot.margin = margin(0, 0, 0, 0),\n    panel.background = element_rect(fill = \"#b8dfff\"),\n    panel.grid.major = element_line(color = \"#a5d0f3\"),\n    axis.title = element_blank(),\n    axis.text = element_blank(),\n    axis.ticks.length = unit(0, \"cm\"),\n  )\nmap\nYou can see how vividly the ridgelines capture Luzon’s mountains. It’s practically 3D!\nI now want to add markers for some of the more famous hiking trails in Luzon. I can easily get their coordinates using Google Maps, but a complication to deal with is that the coordinate reference system (CRS) of Google Maps is different from the one I’m using here. I must therefore use st_transform() to reproject them first.\nspots &lt;- here::here(\"datasets\", \"hikingspots.csv\") %&gt;% \n  read_csv() %&gt;%\n  mutate(label = toupper(label))\n\ncoords &lt;- spots %&gt;%\n  st_as_sf(agr = \"constant\", coords = c(\"x\", \"y\"), crs = 4326) %&gt;%\n  st_transform(25391) %&gt;%\n  st_coordinates()\n\nspots &lt;- cbind(spots, coords)\nFinally, I downloaded some Google fonts for some added fanciness. Here is the final chart:\nCode\nlibrary(ggrepel)\n\nmap +\n  geom_point(\n    data = spots,\n    aes(x = X, y = Y),\n    size = 2.5, shape = 24, linewidth = .75, color = \"white\", fill = \"black\"\n  ) +\n  geom_label_repel(\n    data = spots,\n    aes(x = X, y = Y, label = label),\n    family = \"karla\", fontface = \"bold\", size = 8 / .pt,\n    hjust = .5, vjust = .5, nudge_x = 10000, min.segment.length = 1, label.r = unit(0, \"lines\"), label.size = NA, label.padding = unit(.2, \"lines\"), alpha = .6\n  ) +\n\n  # Fancy plot title\n  annotate(\"text\",\n    x = 1.27 * 10^6, y = 1.855 * 10^6, hjust = .5,\n    label = \"HIKING DESTINATIONS\", family = \"lora\", size = 12 / .pt\n  ) +\n  annotate(\"text\",\n    x = 1.27 * 10^6, y = 1.835 * 10^6, hjust = .5,\n    label = \"in\", family = \"lora\", fontface = \"italic\", size = 12 / .pt\n  ) +\n  annotate(\"text\",\n    x = 1.27 * 10^6, y = 1.803 * 10^6, hjust = .5,\n    label = \"L U Z O N\", family = \"lora\", size = 30 / .pt\n  )\nMy one hiking experience so far was at Nagpatong Rock, near Masungi. It was arduous and muddy and I slept for 12 hours afterwards. But for that brief moment at the peak, as I sipped cold coffee and braced myself against the wind, I looked out at the view and found it absolutely grand.\nStay elevated!"
  },
  {
    "objectID": "posts/2022-12-15-mountains/index.html#footnotes",
    "href": "posts/2022-12-15-mountains/index.html#footnotes",
    "title": "Luzon’s hiking trails",
    "section": "Footnotes",
    "text": "Footnotes\n\n\nAnd let me just say that learning to make maps in R has been bewilderingly difficult. I have found Geocomputation with R useful, but much of it remains mysterious to me.↩︎"
  },
  {
    "objectID": "posts/2023-03-29-people-as-particles/index.html",
    "href": "posts/2023-03-29-people-as-particles/index.html",
    "title": "People as particles",
    "section": "",
    "text": "Manila is the densest city on Earth,1 fitting 1.8 million people into a 43 square-kilometer crucible. The 16 other cities that constitute Metro Manila, the Philippine capital, are extraordinarily crowded as well, resulting in an overall density of 22,000/km². This is twice that of New York and almost three times that of Singapore. Dysfunctional urban planning has failed to cope. Suburbs-style neighborhoods and private golf courses sprawl incongruously in city centers while open green spaces remain limited. The state of transportation is dystopian. A much needed subway intended for partial operability in 2022 only started construction last January.\nLiving in such a crowded place means shoving, squeezing, and cartwheeling your way through the chaos of gridlocked streets and packed trains, a daily collision of body against body that brings to mind Radiohead at their most anxious: “everyone is so near”. It’s an experience that isn’t quite captured by the metric “22,000/km²”. I wanted to make this number more evocative through a visualization, but how? I’ve seen population density plotted on bar charts, on choropleth maps, even on a 3D histogram, but none of these, I feel, do justice to the absolute pressure cooker that is Manila.\nI decided to try something novel. I call it a particles chart, and it consists of a D3 force simulation of balls bouncing off each other in a box. It’s relatively simple to construct — I am indebted to Vasco Asturiano’s modules in particular — yet it captures so effectively what “densest city on the planet” means. It means countless agitated bodies jockeying and jittering in a tight space, searching endlessly for room to breathe.2\nI’ve set the balls to generate at various sizes, reflecting the fact that some people take up more space than others. Think private vehicles versus public transport, detached homes versus high-rise condominiums. The balls are also colored in proportion to ethnic makeup, as recorded in Putterman and Weil’s World Migration Matrix. I’ve written about this dataset here and here, but to recap, the matrix breaks down a country’s population according to where their ancestors were in the year 1500. Migrant ancestor balls are colored by originating continent, ordered from largest to smallest shares.\nTo be clear, density is not inherently bad. In fact, density is indicative of a successful city since it means people want to move there. Density itself also confers benefits through agglomeration effects: proximity among firms and laborers brings down production costs and increases knowledge spillovers. But these benefits surely fall short of potential in Metro Manila. How great can proximity advantages be if it takes two hours to get anywhere? If there were an optimal level of density for a given level of infrastructure quality, Manila has blown way past it.\nThe particles chart can be used in any number of applications, with three levers (the number, colors, and sizes of the particles) available for mapping to variables. I’ll end this post with an additional example, this time tackling a different aspect of modern city living. It’s not a statistic, but a feeling. The kind that creeps up on you late at night under certain moods, when the veil lifts and you momentarily perceive the Camusian absurdity of all your life’s endeavors. A feeling best encapsulated, I think, by another song lyric:\nCode\n{\n    // Generate points\n    const widthFishbowl = width\n    const rFishbowl = widthFishbowl * .01\n    const vFishbowl = rFishbowl * .1\n    \n    const dummynodes = Array.from(\n        { length: 300 }, (_, i) =&gt; ({\n            x: d3.randomUniform((widthFishbowl * .05), (widthFishbowl * .95))(),\n            y: d3.randomUniform(height * .05, height * .95)(),\n            r: d3.randomNormal(rMean, rSD)(),\n            vx: d3.randomUniform(-1, 1)() * velocity,\n            vy: d3.randomUniform(-1, 1)() * velocity,\n            color: \"#eeeeee\"\n        })\n    );\n    \n    dummynodes.push(\n        { x: widthFishbowl * .05, y: height * .95, r: rFishbowl, vx: vFishbowl, vy: -vFishbowl, color: \"#4889ab\" },\n        { x: widthFishbowl * .95, y: height * .05, r: rFishbowl, vx: -vFishbowl, vy: vFishbowl, color: \"#C85B89\" }\n    );\n    \n    const nodes = dummynodes.map(Object.create);\n\n    // Panel\n    const container = d3.create(\"div\")\n        .attr(\"style\", \"display: flex; justify-content: center\");\n\n    const svg = container.append(\"svg\")\n        .attr(\"width\", widthFishbowl)\n        .attr(\"height\", height)\n        .attr(\"viewBox\", [0, 0, widthFishbowl, height])\n        .attr(\"style\", \"max-width: 100%; height: auto; height: intrinsic\");\n\n    // Chart box\n    svg.append(\"rect\")\n        .attr(\"width\", widthFishbowl)\n        .attr(\"height\", height)\n        .attr(\"fill\", \"#f7f7f7\");\n\n    const node = svg.append(\"g\")\n        .selectAll(\"circle\")\n        .data(nodes)\n        .join(\"circle\")\n        .attr(\"cx\", d =&gt; d.x)\n        .attr(\"cy\", d =&gt; d.y)\n        .attr(\"r\", d =&gt; d.r)\n        .attr(\"fill\", (d) =&gt; d.color);\n    \n    // Define forces\n    const simulation = d3.forceSimulation(nodes)\n        .force(\"bounce\", d3.forceBounce()\n            .radius(d =&gt; d.r + .5))\n        .force(\"surface\", d3.forceSurface()\n            .surfaces(bbox([[0, 0], [widthFishbowl, height]]))\n            .oneWay(true)\n            .radius(d =&gt; d.r + 1))\n        .force('limit', d3.forceLimit()\n            .x0(0).x1(widthFishbowl).y0(0).y1(height))\n        .alphaDecay(0)\n        .velocityDecay(0)\n        .on(\"tick\", () =&gt; { node.attr(\"cx\", d =&gt; d.x).attr(\"cy\", d =&gt; d.y) });\n    \n    return container.node()\n}\nWe’re just two lost souls swimming in a fish bowlyear after year"
  },
  {
    "objectID": "posts/2023-03-29-people-as-particles/index.html#data",
    "href": "posts/2023-03-29-people-as-particles/index.html#data",
    "title": "People as particles",
    "section": "Data",
    "text": "Data\n\n\ndensity.csv\nparticles.R / group_assign.csv"
  },
  {
    "objectID": "posts/2023-03-29-people-as-particles/index.html#appendix-d3-observable-code",
    "href": "posts/2023-03-29-people-as-particles/index.html#appendix-d3-observable-code",
    "title": "People as particles",
    "section": "Appendix: D3 / Observable code",
    "text": "Appendix: D3 / Observable code\n\n\n\nCode\nd3 = require('d3@7', 'd3-force-bounce', 'd3-force-surface', 'd3-force-limit');\n\n// Import data\ndensity = FileAttachment('../../datasets/particles/density.csv').csv({ typed: true });\ndensityManila = density.filter(d =&gt; d.country === \"Philippines\");\ndensityOthers = density.filter(d =&gt; d.country !== \"Philippines\");\ngroupAssign = FileAttachment('../../datasets/particles/group_assign.csv').csv({ typed: true });\n\n// Parameters\nheight = width * .49;                // Height of particle chart\nrMean = (width * .49 / 40) / 2;      // Mean radius\nrSD = rMean * .75;                   // SD radius\nvelocity = rMean * .8;               // Particle velocity\n\ncolors = [\"#4889ab\", \"#7fc6a4\", \"#FCB13B\", \"#B13D70\", \"#f697bb\"];\n\ncolor = d3.scaleOrdinal()\n    .domain([1, 2, 3, 4, 5])\n    .range(colors);\n\nbbox = ([[x1, y1], [x2, y2]]) =&gt; [\n    { from: { x: x1, y: y1 }, to: { x: x1, y: y2 } },\n    { from: { x: x1, y: y2 }, to: { x: x2, y: y2 } },\n    { from: { x: x2, y: y2 }, to: { x: x2, y: y1 } },\n    { from: { x: x2, y: y1 }, to: { x: x1, y: y1 } }\n];\n\n// Function to generate particles for a given city\n\nfunction genpoints(city) {\n\n    const density = Math.round(city[0].density / 100);\n    \n    const groupAssignCity = groupAssign.filter(d =&gt; d.city === city[0].city);\n    const counts = groupAssignCity.map(row =&gt; row.points_ingroup);\n    const groups = [1, 2, 3, 4, 5];\n    const groupArray = counts.flatMap((count, i) =&gt;\n        Array.from({ length: count }, () =&gt; groups[i])\n    );\n    \n    const points = Array.from(\n        { length: density },\n        (_, i) =&gt; ({\n            x: d3.randomUniform((width * .49 * .15), (width * .49 * .85))(),\n            y: d3.randomUniform(height * .15, height * .85)(),\n            r: d3.randomNormal(rMean, rSD)(),\n            vx: d3.randomUniform(-1, 1)() * velocity,\n            vy: d3.randomUniform(-1, 1)() * velocity,\n            group: groupArray[i]\n        })\n    );\n\n    return points;\n}\n\n// Function to generate particles chart\n\nfunction particles(selection, city) {\n\n    // Read data\n    const nodes = genpoints(city).map(Object.create);\n\n    // Panel\n    const svg = selection.append(\"svg\")\n        .attr(\"width\", width * .49)\n        .attr(\"height\", height * 1.1)\n        .attr(\"viewBox\", [0, 0, width * .49, height * 1.1])\n        .attr(\"style\", \"max-width: 100%; height: auto; height: intrinsic\");\n\n    // Chart box\n    svg.append(\"rect\")\n        .attr(\"width\", width * .49)\n        .attr(\"height\", height)\n        .attr(\"fill\", \"#f7f7f7\")\n        .attr(\"stroke\", \"#bcbcbc\")\n        .attr(\"stroke-width\", 1);\n\n    // Bottom label\n    const densityStat = d3.format(\",.2r\")(city[0].density);\n    svg.append(\"text\")\n        .attr(\"id\", \"chart-text\")\n        .attr(\"x\", width * .49 / 2)\n        .attr(\"y\", height * 1.075)\n        .attr(\"text-anchor\", \"middle\")\n        .text(`${densityStat} people/km²`);\n\n    // Draw particles\n    const node = svg.append(\"g\")\n        .selectAll(\"circle\")\n        .data(nodes)\n        .join(\"circle\")\n        .attr(\"cx\", d =&gt; d.x)\n        .attr(\"cy\", d =&gt; d.y)\n        .attr(\"r\", d =&gt; d.r)\n        .attr(\"fill\", (d) =&gt; color(d.group));\n    \n    // Define forces\n    const simulation = d3.forceSimulation(nodes)\n        .force(\"bounce\", d3.forceBounce()\n            .radius(d =&gt; d.r + .5))\n        .force(\"surface\", d3.forceSurface()\n            .surfaces(bbox([[0, 0], [width * .49, height]]))\n            .oneWay(true)\n            .radius(d =&gt; d.r + 1))\n        .force('limit', d3.forceLimit()\n            .x0(0).x1(width * .49).y0(0).y1(height))\n        .alphaDecay(0)\n        .velocityDecay(0)\n        .on(\"tick\", () =&gt; { node.attr(\"cx\", d =&gt; d.x).attr(\"cy\", d =&gt; d.y) });\n}\n\n// Function to generate legend\n\nfunction legend(selection) {\n    \n    const legendWidth = 390;\n    const legendHeight = 34;\n    const rLegend = .5;\n    \n    const legendBox = selection.append(\"svg\")\n        .attr(\"width\", legendWidth)\n        .attr(\"height\", legendHeight)\n        .attr(\"viewBox\", [0, 0, legendWidth, legendHeight])\n        .attr(\"style\", \"max-width: 90%; height: auto; height: intrinsic;\");\n    \n    legendBox.append(\"circle\")\n        .attr(\"cx\", rLegend + \"rem\")\n        .attr(\"cy\", \".5rem\")\n        .attr(\"fill\", \"#4889ab\")\n        .attr(\"r\", rLegend + \"rem\");\n\n    legendBox.append(\"text\")\n        .attr(\"x\", (rLegend * 3) + \"rem\")\n        .attr(\"y\", \".85rem\")\n        .attr(\"text-anchor\", \"left\")\n        .text(\"Native ancestors\");\n\n    legendBox.append(\"g\")\n        .selectAll(\"circle\")\n        .data([1, 2, 3, 4])\n        .join(\"circle\")\n        .attr(\"cx\", d =&gt; (9 + rLegend + (d - 1) * rLegend * 3) + \"rem\")\n        .attr(\"cy\", \".5rem\")\n        .attr(\"fill\", d =&gt; color(d + 1))\n        .attr(\"r\", rLegend + \"rem\");\n\n    legendBox.append(\"text\")\n        .attr(\"x\", (9 + rLegend * 3 * 4) + \"rem\")\n        .attr(\"y\", \".85rem\")\n        .attr(\"text-anchor\", \"left\")\n        .text(\"Migrant ancestors\");\n}"
  },
  {
    "objectID": "posts/2023-03-29-people-as-particles/index.html#footnotes",
    "href": "posts/2023-03-29-people-as-particles/index.html#footnotes",
    "title": "People as particles",
    "section": "Footnotes",
    "text": "Footnotes\n\n\nOther sources may differ depending on how city boundaries are defined.↩︎\nCity density data were taken from Wikipedia. Comparisons are only suggestive given idiosyncrasies in how administrative boundaries are defined. For example, Metro Manila is 624 km², comparable to Jakarta (664 km²) and New York (778 km²) but not so much to Paris (105 km²) and Beijing (16,411 km²).↩︎"
  },
  {
    "objectID": "posts/2022-11-25-roots/index.html",
    "href": "posts/2022-11-25-roots/index.html",
    "title": "The roots of economic development",
    "section": "",
    "text": "One of the most interesting economics papers I’ve ever read is the 2013 survey by Enrico Spolaore and Romain Wacziarg (SW) titled “How Deep Are the Roots of Economic Development?” There has long been an active, highly contentious discussion over why some countries today are rich while others are poor. As a citizen of a “poor” country, this was a big motivation for me to study economics.1\nThe proximate causes are relatively uncontroversial — Solow had it all laid out in 1956. Production turns inputs into output. More inputs mean more output. Some output are consumed, some are saved (“invested”) and turned into capital, which are then used as inputs to produce more output. You can keep accumulating capital to grow your output, but over time, for a given state of technology, capital accumulation will hit diminishing returns. You will then need to move up the technological ladder to continue increasing output. Repeat until rich.\nThe Solow model is elegant, but it has the flavor of saying that a business is successful because it makes a lot of money. The deeper question is why some countries have managed to perform these pro-growth activities while others have not. Is it something in their culture? Maybe their geography? Maybe they had a Great Leader who put all the pieces in place?\nThis has been the research agenda of a number of empirical economic historians. Their work supplements that of traditional economic historians by quantifying the evidence for various hypothesized root causes of development. SW survey their findings as of 2013 using a unified dataset available here. What I want to do is chart some of the more interesting results.\nlibrary(tidyverse)\nlibrary(foreign)\n\ndf &lt;- here::here(\"datasets\", \"roots\", \"2013_longterm.dta\") %&gt;%\n  read.dta() %&gt;%\n  as_tibble()\nGeography is a natural candidate for explaining the relative wealth of nations. Ever notice that cold countries tend to be richer than hot ones? In fact, it’s empirically well-founded:\nCode\nlibrary(highcharter)\nlibrary(broom)\n\npretty &lt;- function(n, d = 0) {\n  n &lt;- format(round(n, digits = d), nsmall = d)\n  prettyNum(n, big.mark = \",\", scientific = FALSE)\n}\n\ndf1 &lt;- df %&gt;%\n  select(country, rgdpch_2005, avelat) %&gt;%\n  drop_na() %&gt;%\n  mutate(rgdpch_2005_pretty = pretty(rgdpch_2005, 0))\n\nfit &lt;- lm(log10(rgdpch_2005) ~ avelat, data = df1) %&gt;%\n  augment() %&gt;%\n  arrange(avelat) %&gt;%\n  slice(c(1, nrow(df1)))\n\nx &lt;- c(\"Country\", \"GDP per capita\", \"Absolute latitude\")\ny &lt;- c(\"{point.country:s}\", \"${point.rgdpch_2005_pretty:s}\", \"{point.avelat:.1f}\")\ntltip &lt;- tooltip_table(x, y)\n\nhchart(df1, \"scatter\",\n  hcaes(x = avelat, y = rgdpch_2005),\n  color = hex_to_rgba(\"#1046b1\", 0.5),\n  size = 20,\n  stickyTracking = FALSE\n) %&gt;%\n  hc_xAxis(\n    title = list(text = \"Absolute latitude\"),\n    gridLineWidth = 1\n  ) %&gt;%\n  hc_yAxis(\n    title = list(text = \"GDP per capita 2005\"),\n    type = \"logarithmic\",\n    gridLineWidth = 1\n  ) %&gt;%\n  hc_tooltip(\n    useHTML = TRUE,\n    pointFormat = tltip,\n    headerFormat = \"\"\n  ) %&gt;%\n  hc_add_series(\n    data = fit,\n    type = \"spline\",\n    hcaes(x = avelat, y = 10^.fitted),\n    color = \"black\",\n    lineWidth = 1,\n    marker = FALSE,\n    enableMouseTracking = FALSE\n  )\nWhat explains this intriguing correlation? SW divide proposed mechanisms into direct and indirect channels. Geography may have a direct influence on economic development through the effects of climate and diseases on agricultural and labor productivity. Or in cruder form, this is the argument that hotter weather makes for lazier people, which Rizal refuted in “The Indolence of the Filipino”.\nArguments for an indirect channel are, for me, more convincing. Geography influenced x, and x in turn influenced economic development. There may even be additional layers (x influenced y, y influenced z, etc.). A famous hypothesis comes from Jared Diamond’s 1997 book Guns, Germs, and Steel, which argues that climate and the ecosystems it supported influenced the onset of agriculture and domestication in a society, what is known as the Neolithic Revolution. In turn, societies that transitioned earlier would have had a head start in technological progress and centralized governments. This explains why Europeans had the advantage of “guns, germs, and steel” as they were conquering the civilizations of New World America in the 16th century.\nTo illustrate the Diamond hypothesis, the following plots population density in the year 1500 against the years since a country had undergone its Neolithic Revolution — population density being the best proxy available for relative economic development in a pre-industrial world. Again, a positive correlation is established.\nCode\ndf1 &lt;- df %&gt;%\n  select(country, pd1500, agyears) %&gt;%\n  drop_na() %&gt;%\n  mutate(\n    pd1500_pretty = pretty(pd1500, 2),\n    agyears_pretty = pretty(agyears, 0)\n  )\n\nfit &lt;- lm(log10(pd1500) ~ agyears, data = df1) %&gt;%\n  augment() %&gt;%\n  arrange(agyears) %&gt;%\n  slice(c(1, nrow(df1)))\n\nx &lt;- c(\"Country\", \"Population density in 1500\", \"Years since Neolithic Revolution\")\ny &lt;- c(\"{point.country:s}\", \"{point.pd1500_pretty:s}\", \"{point.agyears_pretty:s}\")\ntltip &lt;- tooltip_table(x, y)\n\nhchart(df1, \"scatter\",\n  hcaes(x = agyears, y = pd1500),\n  color = hex_to_rgba(\"#1046b1\", 0.5),\n  size = 20,\n  stickyTracking = FALSE\n) %&gt;%\n  hc_xAxis(\n    title = list(text = \"Years since Neolithic Revolution\"),\n    gridLineWidth = 1\n  ) %&gt;%\n  hc_yAxis(\n    title = list(text = \"Population density 1500\"),\n    type = \"logarithmic\",\n    gridLineWidth = 1\n  ) %&gt;%\n  hc_tooltip(\n    useHTML = TRUE,\n    pointFormat = tltip,\n    headerFormat = \"\"\n  ) %&gt;%\n  hc_add_series(\n    data = fit,\n    type = \"spline\",\n    hcaes(x = agyears, y = 10^.fitted),\n    color = \"black\",\n    lineWidth = 1,\n    marker = FALSE,\n    enableMouseTracking = FALSE\n  )\nThere is another reason why it makes more sense to use economic development as of 1500 rather than as of today. If geography shapes economic destinies, then how do we account for countries whose peoples are, in the grand scale of things, relative newcomers to the environments they now inhabit? These include European migrants to the New World as well as African slaves forcibly transported to New World colonies. If it takes thousands of years for geography to shape human cultures and institutions, then an English colonist who settled in what is now the United States would have been influenced by English rather than American geography.\nIn short, one must take into account the historical composition of a given country’s population when correlating geographic factors to contemporary development. This motivates the World Migration Matrix constructed by Louis Putterman and David N. Weil, which, for 165 countries, gives “an estimate of the proportion of the ancestors in 1500 of that country’s population today that were living within what are now the borders of that and each of the other countries”. To take one example, among the present-day inhabitants of Cuba, Putterman and Weil estimate that 63% of their ancestors originate from Spain, 5.6% from Nigeria, 5.1% from Ghana, 4.9% from Angola, and so on. Cuba today would exhibit the effects of the weighted average of all these different geographies.\nThe following map shows the countries with the highest proportion of “immigrants” relative to their present-day populations. In countries like Australia, Singapore, Taiwan, and Jamaica, very few of their current citizens have ancestors that were living in that country in 1500. On the opposite extreme are countries like China, Japan, Algeria, and Greece.\nCode\nlibrary(readxl)\nlibrary(countrycode)\n\nmm &lt;- here::here(\"datasets\", \"matrix version 1.1.xls\") %&gt;% \n  read_excel() %&gt;%\n  pivot_longer(\n    cols = !c(wbcode, wbname),\n    names_to = \"ancestry\",\n    values_to = \"share\"\n  ) %&gt;%\n  mutate(ancestry = toupper(ancestry)) %&gt;%\n  filter(wbcode == ancestry) %&gt;%\n  mutate(\n    immigrant = 1 - share,\n    iso_3 = countrycode(wbcode, \"wb\", \"iso3c\")\n  ) %&gt;%\n  select(iso_3, wbname, immigrant)\n\nmm$iso_3[mm$wbname == \"Congo, Dem. Rep.\"] &lt;- \"COD\"\nmm$iso_3[mm$wbname == \"East Timor\"] &lt;- \"TLS\"\nmm$iso_3[mm$wbname == \"Romania\"] &lt;- \"ROU\"\nmm$iso_3[mm$wbname == \"Taiwan, China\"] &lt;- \"TWN\"\n\nformattp &lt;- JS(\"function() {\n  if (this.point.value &lt; 0.01) {\n    return '&lt;b&gt;' + this.point.name + '&lt;/b&gt;: &lt;0.01';\n  }\n  else {\n    if (this.point.value &gt; 0.99) {\n      return '&lt;b&gt;' + this.point.name + '&lt;/b&gt;: &gt;0.99';\n    }\n    else {\n      return '&lt;b&gt;' + this.point.name + '&lt;/b&gt;: ' + Highcharts.numberFormat(this.point.value, 2);\n    }\n  }\n}\")\n\nhcmap(\n  map = \"custom/world-highres3\",\n  data = mm,\n  name = \"Share of population that arrived after 1500\",\n  value = \"immigrant\",\n  borderWidth = .5,\n  joinBy = c(\"iso-a3\", \"iso_3\")\n) %&gt;%\n  hc_legend(\n    align = \"left\",\n    title = list(text = \"Share of population that arrived after 1500\")\n  ) %&gt;%\n  hc_mapNavigation(enabled = TRUE) %&gt;%\n  hc_tooltip(\n    headerFormat = \"\",\n    formatter = formattp\n  )\nApplying an “ancestry adjustment” to the Diamond hypothesis makes a significant difference. The first chart below plots GDP per capita today and the years since the Neolithic Revolution. There is a positive correlation, albeit a weak one. The second chart plots GDP per capita against the ancestry-adjusted years since the Neolithic Revolution. Doing this strengthens the correlation. This suggests that (1) people were shaped by their environment, and (2) they brought their cultures and institutions with them during the great post-1500 migrations.\nThe correlations above provide pretty fascinating insights. But they are all flawed, of course. Countries are not random realizations of a well-defined stochastic process. Nor are they equal: when generalizing about long-run economic development, it’s not clear that the experiences of a Singapore or a Cape Verde should hold equal weight to the experiences of an India or a China. Which are the exceptions and which are the rules? Do rules even exist?\nThe field of empirical economic history has done much to extend, refine, and qualify the basic results shown here. Hopefully I’ll write about them in future posts."
  },
  {
    "objectID": "posts/2022-11-25-roots/index.html#unadjusted",
    "href": "posts/2022-11-25-roots/index.html#unadjusted",
    "title": "The roots of economic development",
    "section": "Unadjusted",
    "text": "Unadjusted\n\n\nCode\ndf1 &lt;- df %&gt;%\n  select(country, rgdpch_2005, agyears) %&gt;%\n  drop_na() %&gt;%\n  mutate(\n    rgdpch_2005_pretty = pretty(rgdpch_2005, 0),\n    agyears_pretty = pretty(agyears, 0)\n  )\n\nfit &lt;- lm(log10(rgdpch_2005) ~ agyears, data = df1) %&gt;%\n  augment() %&gt;%\n  arrange(agyears) %&gt;%\n  slice(c(1, nrow(df1)))\n\nx &lt;- c(\"Country\", \"GDP per capita\", \"Years since Neolithic Revolution\")\ny &lt;- c(\"{point.country:s}\", \"${point.rgdpch_2005_pretty:s}\", \"{point.agyears_pretty:s}\")\ntltip &lt;- tooltip_table(x, y)\n\nhchart(df1, \"scatter\",\n  hcaes(x = agyears, y = rgdpch_2005),\n  color = hex_to_rgba(\"#1046b1\", 0.5),\n  size = 20,\n  stickyTracking = FALSE\n) %&gt;%\n  hc_xAxis(\n    title = list(text = \"Years since Neolithic Revolution\"),\n    gridLineWidth = 1,\n    min = 0, max = 11000\n  ) %&gt;%\n  hc_yAxis(\n    title = list(text = \"GDP per capita 2005\"),\n    type = \"logarithmic\",\n    gridLineWidth = 1\n  ) %&gt;%\n  hc_tooltip(\n    useHTML = TRUE,\n    pointFormat = tltip,\n    headerFormat = \"\"\n  ) %&gt;%\n  hc_add_series(\n    data = fit,\n    type = \"spline\",\n    hcaes(x = agyears, y = 10^.fitted),\n    color = \"black\",\n    lineWidth = 1,\n    marker = FALSE,\n    enableMouseTracking = FALSE\n  )"
  },
  {
    "objectID": "posts/2022-11-25-roots/index.html#ancestry-adjusted",
    "href": "posts/2022-11-25-roots/index.html#ancestry-adjusted",
    "title": "The roots of economic development",
    "section": "Ancestry-adjusted",
    "text": "Ancestry-adjusted\n\n\nCode\ndf1 &lt;- df %&gt;%\n  select(country, rgdpch_2005, adjagyears) %&gt;%\n  drop_na() %&gt;%\n  mutate(\n    rgdpch_2005_pretty = pretty(rgdpch_2005, 0),\n    adjagyears_pretty = pretty(adjagyears, 0)\n  )\n\nfit &lt;- lm(log10(rgdpch_2005) ~ adjagyears, data = df1) %&gt;%\n  augment() %&gt;%\n  arrange(adjagyears) %&gt;%\n  slice(c(1, nrow(df1)))\n\nx &lt;- c(\"Country\", \"GDP per capita\", \"Years since Neolithic Revolution\")\ny &lt;- c(\"{point.country:s}\", \"${point.rgdpch_2005_pretty:s}\", \"{point.adjagyears_pretty:s}\")\ntltip &lt;- tooltip_table(x, y)\n\nhchart(df1, \"scatter\",\n  hcaes(x = adjagyears, y = rgdpch_2005),\n  color = hex_to_rgba(\"#1046b1\", 0.5),\n  size = 20,\n  stickyTracking = FALSE\n) %&gt;%\n  hc_xAxis(\n    title = list(text = \"Years since Neolithic Revolution (ancestry-adjusted)\"),\n    gridLineWidth = 1,\n    min = 0, max = 11000\n  ) %&gt;%\n  hc_yAxis(\n    title = list(text = \"GDP per capita 2005\"),\n    type = \"logarithmic\",\n    gridLineWidth = 1\n  ) %&gt;%\n  hc_tooltip(\n    useHTML = TRUE,\n    pointFormat = tltip,\n    headerFormat = \"\"\n  ) %&gt;%\n  hc_add_series(\n    data = fit,\n    type = \"spline\",\n    hcaes(x = adjagyears, y = 10^.fitted),\n    color = \"black\",\n    lineWidth = 1,\n    marker = FALSE,\n    enableMouseTracking = FALSE\n  )"
  },
  {
    "objectID": "posts/2022-11-25-roots/index.html#data",
    "href": "posts/2022-11-25-roots/index.html#data",
    "title": "The roots of economic development",
    "section": "Data",
    "text": "Data\n\n\n2013_longterm.dta"
  },
  {
    "objectID": "posts/2022-11-25-roots/index.html#footnotes",
    "href": "posts/2022-11-25-roots/index.html#footnotes",
    "title": "The roots of economic development",
    "section": "Footnotes",
    "text": "Footnotes\n\n\nTen years later and I still don’t have clear answers.↩︎"
  },
  {
    "objectID": "subscribe.html",
    "href": "subscribe.html",
    "title": "Subscribe",
    "section": "",
    "text": "Subscribe\n\n\nYou will receive an email whenever there is a new post. Unsubscribe anytime.\n\n\n\n\n\n\n\n\n\n  \n    \n      \n        \n          \n        \n        \n                          Oops! Something's wrong.\n                      \n      \n    \n    \n    \n      \n        \n          \n        \n        \n                          Confirmation link sent!\n                      \n      \n    \n    \n    \n      \n        \n          \n            \n              \n\n                \n                  \n                \n              \n\n              \n              \n            \n          \n        \n        \n          \n            \n              \n\n                \n                  \n                \n              \n\n              \n              \n            \n          \n        \n        \n          \n            \n              \n\n                \n                  \n                \n              \n\n              \n              \n            \n          \n        \n        \n          \n            \n              \n                \n                \n              \n              \n              \n            \n          \n        \n        \n          \n            \n              \n                \n              \n              SIGN ME UP!\n            \n          \n        \n        \n          \n            \n          \n        \n        \n          \n            \n              \n                \n                  \n                    \n                  \n                \n              \n              \n                \n              \n            \n            \n              We use Sendinblue as our marketing platform. By submitting this form, you acknowledge that the information you provided will be transferred to Sendinblue for processing in accordance with their terms of use"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About\n\n\n\nHello! My name is Ken.\n\n\n    \n\n\nI work a lot with data, which means I often engage in the fun, frustrating, highly consequential—yet frequently dismissed!—art of data visualization.\n\n\nTwo Points Make a Line documents my journey in mastering this art. I take an interesting dataset and tell a story about it using charts. Along the way, I share my thoughts on what makes a chart work and what doesn’t, the tools I use, and other tidbits. Enjoy!\n\n\n\nSyndicated onR-Bloggers\n\n\n\n\nThis website was built using Quarto in RStudio and published via GitHub Pages. View the source code here. “The Plotting Cats” artwork that peppers the site is by Issa Cruz."
  },
  {
    "objectID": "subscribed.html",
    "href": "subscribed.html",
    "title": "Subscription confirmed",
    "section": "",
    "text": "Subscription confirmed\n\n\nYou’re all set!"
  },
  {
    "objectID": "posts/2023-04-06-bikes/index.html",
    "href": "posts/2023-04-06-bikes/index.html",
    "title": "That’ll be ₱1 billion please",
    "section": "",
    "text": "The pandemic provoked a lot of experimentation in Philippine urban transport policy. Some were sensible, like rationalizing bus stops along EDSA. Some were, uh, destined to be hallmarks of the time. One of the more forward-thinking was the elevation of bicycles as a bona fide mode of transport. What’s not to love: they take little road space, they’re cheap, they’re green, and they keep you fit.1 Biking infrastructure is an actionable investment while waiting for the big-ticket rail projects to crawl towards completion.\nFunding for the construction of bike lanes in Metro Manila, Metro Cebu, and Metro Davao was included in the pandemic recovery bill. The transportation and public works departments, tasked with implementation, received technical assistance from the World Bank and the Netherlands Embassy to ensure a “Safe System approach” and “Dutch Cycling Infrastructure principles”. Contracts were drawn up and opened to the private sector for bidding. By June 2021, almost 500 kilometers of bike lanes were completed at the cost of over ₱1 billion ($19.6 million), or about ₱2.1 million ($40,000) per kilometer.\nWell. Here’s what the lane closest to where I live looks like:\nIt’s a little underwhelming? No bollards, no buffers, just some hard-to-see paint on the ground and a dash of prayer. Granted, there are sections that are less brutalist, but this is not unrepresentative either.\nAs a tax-funded project, it’s worthwhile to look closely into the procurement process that resulted in these bike lanes. This is exactly the subject of an illuminating paper from WeSolve Foundation, published last week. They’ve made their dataset available, and in this post, I’d like to visualize some of its more interesting aspects. The authors attach a disclaimer that their findings “cannot and should not be used to conclude fraud or corruption”, and indeed, the work was made in partnership with the Philippine Government Electronic Procurement System, who provided some data. I do believe that an imperfect system need not necessarily imply deliberate wrongdoing, so the same disclaimer applies in this post.\nLet’s load up the dataset in R.\nlibrary(tidyverse)\nlibrary(here)\nlibrary(readxl)\n\nfile &lt;- \"[PUBLIC DATASET] Empowering Citizens to Build Better Bike Lanes through Open Contracting.xlsx\"\n\ncontract &lt;- here(\"datasets\", \"bikelanes\", file) %&gt;% read_excel(sheet = \"contract\", skip = 1)\nitem &lt;- here(\"datasets\", \"bikelanes\", file) %&gt;% read_excel(sheet = \"item\")\nbidder &lt;- here(\"datasets\", \"bikelanes\", file) %&gt;% read_excel(sheet = \"bidder\")\nThe following table contains key information on the 12 contracts the study covered. There are 10 in Metro Manila and one each in Cebu and Davao. The contract advertising date (date_ad), the notice-to-proceed date (date_ntp), the winning bidder (noa_supplier), and the approved final value (noa_award_value) are given for each contract.\nCode\nlibrary(reactable)\n\ncontract %&gt;%\n  select(contract_no, contract_title, contract_location, proc_entity, date_ad, date_ntp, noa_supplier, noa_award_value) %&gt;% \n  reactable(\n    defaultColDef = colDef(\n      minWidth = 125,\n      align = \"left\",\n      headerStyle = list(fontFamily = \"Karla\", background = \"#f7f7f8\"),\n    ),\n    columns = list(\n      contract_title = colDef(minWidth = 350),\n      contract_location = colDef(minWidth = 175),\n      proc_entity = colDef(minWidth = 175),\n      date_ad = colDef(align = \"center\", cell = function(x) format(x, \"%Y-%m-%d\")),\n      date_ntp = colDef(align = \"center\", cell = function(x) format(x, \"%Y-%m-%d\")),\n      noa_supplier = colDef(minWidth = 225),\n      noa_award_value = colDef(minWidth = 150, align = \"right\", format = colFormat(prefix = \"₱\", separators = TRUE, digits = 0))\n    ),\n    defaultPageSize = 4,\n    bordered = TRUE,\n    highlight = TRUE\n  )\nLet’s start by visualizing where these bike lanes are located. The dataset does not actually have information on routes, so I’ve had to infer them from the contract title, the stipulated length, and my educated guesses. I drew the routes on Google My Maps and exported them as a KML file, which I then uploaded on mapshaper to consolidate the features and convert to topoJSON format. Because this took a bit of work, I’m focusing here only on the Metro Manila contracts. One of the contracts (20O0096) has an uninformative title so I was unable to draw it, leaving me with nine routes in all. For the administrative boundaries of Metro Manila and surrounding areas, I used the topoJSON files of James Faeldon.\nThe network is certainly comprehensive, covering most major roads in the metro. These do not yet include bike lanes built by local government units, which traverse secondary roads. On paper at least, cycling infrastructure in Metro Manila has become fairly well-connected. But things are not so rosy on the ground. As shown in the picture above, these lanes are often unprotected for long stretches, even in major highways. Fatal accidents are frequent. And without the vigilance of activists, there is a tendency for car-centric policies to creep back in.\nYou may notice that several of the contracts were won by one company, Philippine Chemsteel Industries. The idea of a public bidding is meant to ensure transparency and competitiveness in government procurement. Following economic theory, the presence of many sellers helps drive prices down to marginal cost. The fact that one company seems to have dominated these bids hints at the possible breakdown of this assumption. We can check this by visualizing WeSolve’s data in a network chart.\nbidders &lt;- bidder %&gt;% \n  filter(!is.na(total_calc_bid)) %&gt;% \n  select(contract_no, bidder_name, total_calc_bid, flag_lcb)\n\nnodes &lt;- c(unique(bidders$bidder_name), unique(bidders$contract_no))\nbiddersNodes &lt;- tibble(\n  id = 1:length(nodes),\n  name = nodes,\n  type = case_when(\n    str_detect(name, \"20\") ~ \"contract\",\n    TRUE ~ \"bidder\"\n  ))\n\nbiddersLinks &lt;- bidders %&gt;% \n  left_join(biddersNodes, by = c(\"contract_no\" = \"name\")) %&gt;% \n  left_join(biddersNodes, by = c(\"bidder_name\" = \"name\")) %&gt;% \n  select(source = id.y, target = id.x, bid = total_calc_bid, win = flag_lcb)\n\n# Correction\nbiddersLinks$source[biddersLinks$target == 18] &lt;- c(1, 6, 5)\nbiddersLinks$source[biddersLinks$target == 20] &lt;- c(1, 5)\nDisqualified bids (due to, for example, incomplete requirements) are excluded. I am also correcting what looks like an encoding error in the WeSolve dataset where Philippine Chemsteel Industries and Newbig Four J Construction were switched by mistake. The official documents confirm that it was Philippine Chemsteel, not Newbig, who won in the two contracts they competed in.\nSeven of the 11 contracts with bidders data2 had more than one valid bid, which, by WeSolve’s reckoning, saved the government an average of 1.6%. It’s not exactly a blockbuster amount, and looking at the network, it’s pretty clear why. Adam Smith’s marketplace this is not. The ten Metro Manila contracts received just 1-3 bidders each; Philippine Chemsteel won all six contracts for which it submitted a bid. The Metro Davao contract was the most competitive at four bidders, though the winning bid was a mere 0.1% less than the budgeted amount.\nWhat exactly did these companies spend on? Luckily, the WeSolve dataset also contains item-level price and quantity information for each winning bid. Let’s prep these for charting on a stacked bar plot.\nitems &lt;- item %&gt;% \n  select(contract_no, item_description, item_amt) %&gt;% \n  group_by(contract_no) %&gt;% \n  arrange(desc(item_amt), .by_group = TRUE) %&gt;% \n  mutate(\n    rank = 1:n(),\n    item = case_when(\n      rank &lt;= 9 ~ item_description,\n      TRUE ~ \"Others\"\n    )) %&gt;% \n  group_by(contract_no, item) %&gt;% \n  summarize(\n    value = sum(item_amt),\n    rank = sum(rank)\n  ) %&gt;% \n  mutate(value_norm = value / sum(value)) %&gt;% \n  arrange(rank, .by_group = TRUE) %&gt;% \n  mutate(rank = 1:n()) %&gt;% \n  ungroup()\n\nitemsWide &lt;- items %&gt;% \n  select(contract_no, rank, value_norm) %&gt;% \n  pivot_wider(names_from = rank, values_from = value_norm)\n\nitemsDesc &lt;- items %&gt;% \n  select(contract_no, rank, item, value, value_norm)\nTo keep the chart manageable, I’m only identifying the nine biggest items in each contract, with the rest aggregated into an “others” category. Those steeped in the philosophy of tidy data might be wondering what sort of abomination am I trying to create with itemsWide. This step is necessary because making stacked bar charts in D3 requires data in wide format.\nAmong the largest components are solar pavement markers, “reflectorized thermoplastic pavement markings” (read: paint), and an assortment of road signs. Here and there are provisions for constructing bicycle racks, though I don’t think I’ve ever seen one in the wild. It’s clear from these line items that the plan had always been to build bike lanes of the most basic sort: painted strips that awkwardly take up two-thirds of the rightmost car lane.\nWith this bike lane building program, the government has seemingly spent ₱1 billion to make everyone unhappy — cyclists because they find the lanes inadequate, motorists because they resent the intrusion into their space. But that’s fine! It’s a start! There are bike lanes now where there weren’t before. Making cycling a truly viable mode of transport will take several more billions yet. And in those future rounds of procurement, I hope that the government commits to improving its policy of transparency. The WeSolve paper notes several gaps in officially available data; even the very routes these contracts covered, I was frustrated to learn, are nowhere to be found. Let the data flow free! Don’t you know I love nothing more than learning how much fancy paint my taxes were able to buy?"
  },
  {
    "objectID": "posts/2023-04-06-bikes/index.html#data",
    "href": "posts/2023-04-06-bikes/index.html#data",
    "title": "That’ll be ₱1 billion please",
    "section": "Data",
    "text": "Data\n\n\nEmpowering Citizens to Build Better Bike Lanes through Open Contracting.xlsx\ncontracts.csv / contractsMap.json\nphilippine-json-maps\nbiddersNodes.csv / biddersLinks.csv\nitemsWide.csv / itemsDesc.csv"
  },
  {
    "objectID": "posts/2023-04-06-bikes/index.html#appendix-d3-observable",
    "href": "posts/2023-04-06-bikes/index.html#appendix-d3-observable",
    "title": "That’ll be ₱1 billion please",
    "section": "Appendix: D3 / Observable",
    "text": "Appendix: D3 / Observable\n\n\n\nCode\nd3 = require(\"d3@7\", \"d3-force-limit\");\n\n// Data\nncr1339 = FileAttachment(\"../../datasets/philippines-json-maps/municities-province-ph133900000.topo.0.1.json\").json();\nncr1374 = FileAttachment(\"../../datasets/philippines-json-maps/municities-province-ph137400000.topo.0.1.json\").json();\nncr1375 = FileAttachment(\"../../datasets/philippines-json-maps/municities-province-ph137500000.topo.0.1.json\").json();\nncr1376 = FileAttachment(\"../../datasets/philippines-json-maps/municities-province-ph137600000.topo.0.1.json\").json();\ncentralLuzon = FileAttachment(\"../../datasets/philippines-json-maps/provinces-region-ph030000000.topo.0.1.json\").json();\ncalabarzon = FileAttachment(\"../../datasets/philippines-json-maps/provinces-region-ph040000000.topo.0.1.json\").json();\n\nncrFeatures = {\n  const ncr1339Feature = topojson.feature(ncr1339, ncr1339[\"objects\"][\"municities-province-ph133900000.0.1\"]).features\n  const ncr1374Feature = topojson.feature(ncr1374, ncr1374[\"objects\"][\"municities-province-ph137400000.0.1\"]).features\n  const ncr1375Feature = topojson.feature(ncr1375, ncr1375[\"objects\"][\"municities-province-ph137500000.0.1\"]).features\n  const ncr1376Feature = topojson.feature(ncr1376, ncr1376[\"objects\"][\"municities-province-ph137600000.0.1\"]).features\n  return [...ncr1339Feature, ...ncr1374Feature, ...ncr1375Feature, ...ncr1376Feature];\n}\n\nbgFeatures = {\n  const r3Features = topojson.feature(centralLuzon, centralLuzon[\"objects\"][\"provinces-region-ph030000000.0.1\"]).features\n  const r4AFeatures = topojson.feature(calabarzon, calabarzon[\"objects\"][\"provinces-region-ph040000000.0.1\"]).features\n  return [...r3Features, ...r4AFeatures];\n}\n\ncontractsMap = FileAttachment(\"../../datasets/bikelanes/contractsMap.json\").json();\ncontractsFeatures = topojson.feature(contractsMap, contractsMap.objects.contractsMap).features;\ncontractNames = d3.map(contractsFeatures, d =&gt; d.properties.contract).sort();\ncontractsDF = FileAttachment(\"../../datasets/bikelanes/contracts.csv\").csv({ typed: true });\ncontractDetails = contractsDF.filter(d =&gt; contractNames.includes(d.contract_no));\n\nbiddersNodes = FileAttachment(\"../../datasets/bikelanes/biddersNodes.csv\").csv({ typed: true });\nbiddersLinks = FileAttachment(\"../../datasets/bikelanes/biddersLinks.csv\").csv({ typed: true });\n\nitemsWide = FileAttachment(\"../../datasets/bikelanes/itemsWide.csv\").csv({ typed: true });\nitemsDesc = FileAttachment(\"../../datasets/bikelanes/itemsDesc.csv\").csv({ typed: true });\n\n// Drag function\n// Source: https://observablehq.com/@d3/mobile-patent-suits\n\ndrag = simulation =&gt; {\n  \n  function dragstarted(event, d) {\n    if (!event.active) simulation.alphaTarget(0.3).restart();\n    d.fx = d.x;\n    d.fy = d.y;\n  }\n  \n  function dragged(event, d) {\n    d.fx = event.x;\n    d.fy = event.y;\n  }\n  \n  function dragended(event, d) {\n    if (!event.active) simulation.alphaTarget(0);\n    d.fx = null;\n    d.fy = null;\n  }\n  \n  return d3.drag()\n    .on(\"start\", dragstarted)\n    .on(\"drag\", dragged)\n    .on(\"end\", dragended);\n}"
  },
  {
    "objectID": "posts/2023-04-06-bikes/index.html#footnotes",
    "href": "posts/2023-04-06-bikes/index.html#footnotes",
    "title": "That’ll be ₱1 billion please",
    "section": "Footnotes",
    "text": "Footnotes\n\n\nSo I’ve heard. I don’t actually know how to ride a bike.↩︎\nThe one contract without bidders data was for Metro Cebu.↩︎"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Two Points Make a Line",
    "section": "",
    "text": "That’ll be ₱1 billion please\n\n\nA bike lane building blitz from the pandemic era offers a glimpse into the Philippine government’s procurement process\n\n\n\n\nR\n\n\nD3/OJS\n\n\n \n\n\n\n\nApr 6, 2023\n\n\n\n\n\n\n  \n\n\n\n\nPeople as particles\n\n\nPopulation density in cities, portrayed more vividly\n\n\n\n\nD3/OJS\n\n\n \n\n\n\n\nMar 29, 2023\n\n\n\n\n\n\n  \n\n\n\n\nI just read 456 books*\n\n\n*Actually my computer did, but let’s not split hairs. An exploration into NLP, dimensionality reduction, and reactive visualizations.\n\n\n\n\npython\n\n\nD3/OJS\n\n\n \n\n\n\n\nMar 22, 2023\n\n\n\n\n\n\n  \n\n\n\n\nTelling the future is hard\n\n\nA forecasting tournament put the predictive powers of social scientists to the test. They, ah, didn’t do so well.\n\n\n\n\nR\n\n\nggplot\n\n\nD3/OJS\n\n\n \n\n\n\n\nMar 12, 2023\n\n\n\n\n\n\n  \n\n\n\n\nThe demographics of Nobel laureates\n\n\nI’m starting to think there might be privileges to being old, white, and male\n\n\n\n\nR\n\n\nggplot\n\n\n \n\n\n\n\nMar 3, 2023\n\n\n\n\n\n\n  \n\n\n\n\nPutin’s leverage, Putin’s folly\n\n\nA newly released dataset lets us visualize the patterns of global trade on the eve of Russia’s invasion of Ukraine\n\n\n\n\nR\n\n\nggplot\n\n\n \n\n\n\n\nFeb 22, 2023\n\n\n\n\n\n\n  \n\n\n\n\nThe standard age\n\n\nAt what age are we our “standard” selves, when we are neither too young nor too old?\n\n\n\n\nR\n\n\nggplot\n\n\n \n\n\n\n\nFeb 14, 2023\n\n\n\n\n\n\n  \n\n\n\n\nFrancis is an old pope\n\n\nAt 86, the current supreme pontiff is making his mark as one of history’s oldest. How long can he go on?\n\n\n\n\nR\n\n\nggplot\n\n\n \n\n\n\n\nFeb 6, 2023\n\n\n\n\n\n\n  \n\n\n\n\nWill people care about this Oscars?\n\n\nOn the surprising popularity of the 2023 nominations for Best Picture\n\n\n\n\nR\n\n\nggplot\n\n\nhighcharts\n\n\n \n\n\n\n\nJan 26, 2023\n\n\n\n\n\n\n  \n\n\n\n\nSomehow, Avatar has returned\n\n\nThe highest grossing movie of all time got to the top gradually rather than all at once\n\n\n\n\nR\n\n\nggplot\n\n\n \n\n\n\n\nDec 21, 2022\n\n\n\n\n\n\n  \n\n\n\n\nLuzon’s hiking trails\n\n\nCreating a stylized map of mountains using ridgelines\n\n\n\n\nR\n\n\nggplot\n\n\n \n\n\n\n\nDec 15, 2022\n\n\n\n\n\n\n  \n\n\n\n\nI’m gonna carry that weight\n\n\nUsing a massive dataset of powerlifting competitors to set my gym goals for next year\n\n\n\n\nR\n\n\nggplot\n\n\n \n\n\n\n\nDec 7, 2022\n\n\n\n\n\n\n  \n\n\n\n\nWar is over (if you want it?)\n\n\nA tally of active armed conflicts as of Christmas Day, since 1946\n\n\n\n\nR\n\n\nggplot\n\n\n \n\n\n\n\nDec 3, 2022\n\n\n\n\n\n\n  \n\n\n\n\nMore on the great post-1500 migrations\n\n\nWhich countries have the most diverse ancestors? Which countries have the most descendants around the world today?\n\n\n\n\nR\n\n\nhighcharts\n\n\n \n\n\n\n\nNov 26, 2022\n\n\n\n\n\n\n  \n\n\n\n\nThe roots of economic development\n\n\nVisualizing some key results in Spolaore and Wacziarg’s 2013 survey\n\n\n\n\nR\n\n\nhighcharts\n\n\n \n\n\n\n\nNov 25, 2022\n\n\n\n\n\n\n  \n\n\n\n\nThe emotional shape of novels\n\n\nUsing sentiment analysis, I chart the emotional highs and lows of three classic novels\n\n\n\n\nR\n\n\nggplot\n\n\n \n\n\n\n\nNov 19, 2022\n\n\n\n\n\n\n  \n\n\n\n\nThat FTX balance sheet\n\n\nSBF shops around for investors with a balance sheet that is emphatically not GAAP\n\n\n\n\nR\n\n\nggplot\n\n\n \n\n\n\n\nNov 15, 2022\n\n\n\n\n\n\n  \n\n\n\n\nVisualizing Elon Musk’s Twitter addiction\n\n\nThe world’s busiest billionaire finds the time to tweet at all hours of the day\n\n\n\n\nR\n\n\nggplot\n\n\n \n\n\n\n\nNov 13, 2022\n\n\n\n\n\n\n  \n\n\n\n\nShould you dual wield y axes?\n\n\nPoints to keep in mind when resorting to a secondary axis\n\n\n\n\nR\n\n\nggplot\n\n\n \n\n\n\n\nNov 10, 2022\n\n\n\n\n\n\n  \n\n\n\n\nMapping the Metro Manila subway\n\n\nIn a fit of wishful thinking, I use Leaflet to map the Metro Manila subway as if it existed\n\n\n\n\nR\n\n\nleaflet\n\n\n \n\n\n\n\nNov 8, 2022\n\n\n\n\n\n\n  \n\n\n\n\nExercises in plotting WDI data\n\n\nPull the data with R instead of downloading spreadsheet after spreadsheet\n\n\n\n\nR\n\n\nggplot\n\n\n \n\n\n\n\nNov 5, 2022\n\n\n\n\n\n\nNo matching items"
  }
]